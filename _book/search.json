[{"path":"index.html","id":"前言","chapter":"前言","heading":"前言","text":"本课程主要根据《数据科学中的R语言》的课程内容, 略作修改，重点介绍基本的R编程与作图内容。推荐大家阅读原课程内容以及Hadley Wickham的\nr4ds这本书 (Grolemund Wickham 2017), r4ds这本书的第二版已于2023年6月发行。","code":""},{"path":"index.html","id":"关于课程","chapter":"前言","heading":"关于课程","text":"R编程基础\n第 1 章介绍R语言及资料推荐\n第 2 章介绍安装与环境配置\n第 3 章介绍R语言中一切都是对象\n第 4 章介绍向量\n第 5 章介绍R语言数据结构\n第 6 章介绍运算符及向量运算\n第 7 章介绍R语言中的函数\n第 8 章介绍函数的应用\n第 9 章介绍R语言中的子集选取\n第 1 章介绍R语言及资料推荐第 2 章介绍安装与环境配置第 3 章介绍R语言中一切都是对象第 4 章介绍向量第 5 章介绍R语言数据结构第 6 章介绍运算符及向量运算第 7 章介绍R语言中的函数第 8 章介绍函数的应用第 9 章介绍R语言中的子集选取数据读入与处理\n第 10 章介绍数据读入\n第 11 章介绍数据处理\n第 12 章介绍dplyr的应用\n第 13 章介绍数据规整1\n第 14 章介绍数据规整2\n第 15 章介绍字符串处理\n第 16 章介绍简单数据框\n第 17 章回望Tidyverse之旅\n第 10 章介绍数据读入第 11 章介绍数据处理第 12 章介绍dplyr的应用第 13 章介绍数据规整1第 14 章介绍数据规整2第 15 章介绍字符串处理第 16 章介绍简单数据框第 17 章回望Tidyverse之旅画图\n第 18 章介绍数据可视化\n第 19 章ggplot2几何形状\n第 20 章ggplot2的标度\n第 21 章ggplot2的主题\n第 22 章ggplot2的图例\n第 23 章ggplot2扩展内容\n第 24 章ggplot2统计图层\n第 25 章ggplot2从图层到几何形状\n第 26 章ggplot2数据可视化中的配色\n第 27 章ggplot2如何控制图例的外观\n第 28 章ggplot2中的延迟映射\n第 29 章介绍科研数据可视化中的统计分布图\n第 30 章让你的数据骚动起来\n第 31 章ggplot2中传递函数作为参数值\n第 18 章介绍数据可视化第 19 章ggplot2几何形状第 20 章ggplot2的标度第 21 章ggplot2的主题第 22 章ggplot2的图例第 23 章ggplot2扩展内容第 24 章ggplot2统计图层第 25 章ggplot2从图层到几何形状第 26 章ggplot2数据可视化中的配色第 27 章ggplot2如何控制图例的外观第 28 章ggplot2中的延迟映射第 29 章介绍科研数据可视化中的统计分布图第 30 章让你的数据骚动起来第 31 章ggplot2中传递函数作为参数值可重复性文档Rmarkdown以及练习\n第 32 章介绍可重复性文档\n第 33 章一日一练\n第 32 章介绍可重复性文档第 33 章一日一练GO/KEGG富集分析\n第 34 章介绍GO/KEGG功能富集分析\n第 34 章介绍GO/KEGG功能富集分析","code":""},{"path":"baseR-intro-ds.html","id":"baseR-intro-ds","chapter":"第 1 章 R语言介绍及资料推荐","heading":"第 1 章 R语言介绍及资料推荐","text":"","code":""},{"path":"baseR-intro-ds.html","id":"r语言的特点","chapter":"第 1 章 R语言介绍及资料推荐","heading":"1.1 R语言的特点","text":"R语言是用于统计分析、图形表示和报告的编程语言:R 是免费的，R 可运行于多种平台之上，包括Windows、UNIX 和 Mac OS XR语言做统计分析，实现了经典的、现代的统计方法，如参数和非参数假设检验、线性回归、广义线性回归、非线性回归、可加模型、树回归、混合模型、方差分析、判别、聚类、时间序列分析等。R 拥有顶尖水准的制图功能，ggplot2画图，是颜值担当，非常好看，一直被模仿，从未被超越R 应用广泛，拥有丰富的库包，统计科研工作者广泛使用R进行计算和发表算法。R有上万扩展包tidyverse来编程，代码可读性强，用的是人类语言， 非常好学Rmarkdown 可以生成html、word或者pdf格式的可重复性报告文档，可以方便快捷做幻灯片、海报、论文、书籍、网页。活跃的社区","code":""},{"path":"baseR-intro-ds.html","id":"r能干什么","chapter":"第 1 章 R语言介绍及资料推荐","heading":"1.2 R能干什么","text":"","code":""},{"path":"baseR-intro-ds.html","id":"数据科学流程","chapter":"第 1 章 R语言介绍及资料推荐","heading":"1.2.1 数据科学流程","text":"Hadley Wickham将数据科学流程分解成6个环节即数据导入、数据规整、数据处理、可视化、建模以及形成可重复性报告，整个分析和探索过程都在一个程序代码中完成，这种方式对训练我们的数据思维非常有帮助。","code":""},{"path":"baseR-intro-ds.html","id":"tidyverse家族","chapter":"第 1 章 R语言介绍及资料推荐","heading":"1.2.2 tidyverse家族","text":"R 语言的强大还在于各种宏包。但由于各种包接口不统一，语法不一致，也带来一些困扰。为了解决这个问题，RStudio 公司的Hadley Wickham 与其带领的团队推出了tidyverse宏包， tidyverse将常用的宏包整合在一起，并保持了语法的一致性。\n本书将通过一些例子不断地展示tidyverse在数据分析和可视化的应用。tidyverse套餐，其主要成员包括","code":""},{"path":"baseR-intro-ds.html","id":"r-tidyverse-四大优势","chapter":"第 1 章 R语言介绍及资料推荐","heading":"1.2.3 R & tidyverse 四大优势","text":"","code":""},{"path":"baseR-intro-ds.html","id":"推荐资料","chapter":"第 1 章 R语言介绍及资料推荐","heading":"1.3 推荐资料","text":"","code":""},{"path":"baseR-intro-ds.html","id":"教程","chapter":"第 1 章 R语言介绍及资料推荐","heading":"1.3.1 教程","text":"王敏杰 (2023). 数据科学中的 R 语言，https://bookdown.org/wangminjie/R4DS/, 2nd ed. 讲基本的数据整理、汇总。李东风(2023). R语言教程, https://www.math.pku.edu.cn/teachers/lidf/docs/Rbook/html/_Rbook/index.htmlHadley Wickham Garrett Grolemund(2022). R Data Science，https://r4ds.hadley.nz/, 2nd ed. 讲基本的数据整理、汇总。Hadley Wickham(2019). Advanced R, 2nd ed., https://adv-r.hadley.nz/, Chapman & Hall/CRC R Series. 高级R编程，属于对R高级编程技术的讲解Hadley Wickham(2016). ggplot2 Elegant Graphics Data Analysis, 2nd ed., https://ggplot2-book.org/, Springer. 优雅易用的R作图功能Susan Holmes, Wolfgang Huber(2020). Modern Statistics Modern Biology, https://www.huber.embl.de/msmb/index.html.\nR的统计功能在生物学中的应用。汤银才（2008），《R语言与统计分析》，高等教育出版社。","code":""},{"path":"baseR-intro-ds.html","id":"r-语言社区推荐","chapter":"第 1 章 R语言介绍及资料推荐","heading":"1.3.2 R 语言社区推荐","text":"R 语言社区非常友好，可以在这里找到你问题的答案（一般直接从浏览器搜索问题就好）。下面的前两个有丰富且漂亮的画图代码（强推）：Statistical tools high-throughput data analysis: http://sthda.com/english/ (e.g., http://sthda.com/english/articles/24-ggpubr-publication-ready-plots/76-add-p-values--significance-levels--ggplots/)Statistical tools high-throughput data analysis: http://sthda.com/english/ (e.g., http://sthda.com/english/articles/24-ggpubr-publication-ready-plots/76-add-p-values--significance-levels--ggplots/)R graph gallery: https://r-graph-gallery.com/ (e.g., https://r-graph-gallery.com/piechart-ggplot2.html)R graph gallery: https://r-graph-gallery.com/ (e.g., https://r-graph-gallery.com/piechart-ggplot2.html)R-Bloggers: https://www.r-bloggers.com/R-Bloggers: https://www.r-bloggers.com/stackoverflow: https://stackoverflow.com/questions/tagged/rstackoverflow: https://stackoverflow.com/questions/tagged/r","code":""},{"path":"baseR-install.html","id":"baseR-install","chapter":"第 2 章 安装与环境配置","heading":"第 2 章 安装与环境配置","text":"R 软件是一个自由、开源软件平台，具有统计分析、可视化和编程的强大功能。\n你可以从这里免费下载。 为了更好的使用 R 软件，我推荐大家使用 RStudio这个 IDE。这里有个在线教程帮助我们熟悉 R 和 RStudio。","code":""},{"path":"baseR-install.html","id":"安装-r-和-rstudio","chapter":"第 2 章 安装与环境配置","heading":"2.1 安装 R 和 Rstudio","text":"R 软件是一个自由、开源软件平台，具有统计分析、可视化和编程的强大功能。","code":""},{"path":"baseR-install.html","id":"第一步安装-r","chapter":"第 2 章 安装与环境配置","heading":"2.1.1 第一步安装 R","text":"我们从官方网站http://cran.r-project.org免费下载。","code":""},{"path":"baseR-install.html","id":"第二步安装-r-编译工具","chapter":"第 2 章 安装与环境配置","heading":"2.1.2 第二步安装 R 编译工具","text":"安装 R 编译工具用于在R中调用C、C++和Fortran程序代码时需要用的编译工具。","code":""},{"path":"baseR-install.html","id":"windows","chapter":"第 2 章 安装与环境配置","heading":"2.1.2.1 Windows","text":"在“Download R Windows”链接的页面， 除了base为R的安装程序，还有Rtools链接，需要安装。","code":""},{"path":"baseR-install.html","id":"macos-compile-r-for-macos-httpsmac.r-project.orgtools","chapter":"第 2 章 安装与环境配置","heading":"2.1.2.2 macOS (compile R for macOS https://mac.R-project.org/tools)","text":"release uses Xcode 14.2/14.3 GNU Fortran 12.2. wish compile R packages contain Fortran code, may need download corresponding GNU Fortran compiler https://mac.R-project.org/tools.最好能够详细查看编译工具的说明（https://mac.R-project.org/tools），主要包含下面三个：Xcode： use X11 (including tcltk) requires XQuartz (version 2.8.5 later). Always re-install XQuartz upgrading macOS new major versionXcode： use X11 (including tcltk) requires XQuartz (version 2.8.5 later). Always re-install XQuartz upgrading macOS new major versionGNU Fortran compilerGNU Fortran compilerOpenMP page （并行）OpenMP page （并行）","code":""},{"path":"baseR-install.html","id":"第三步安装-rstudio","chapter":"第 2 章 安装与环境配置","heading":"2.1.3 第三步安装 RStudio","text":"为了更好的使用 R 软件，我推荐大家使用 RStudio IDE。因此，安装完 R 后，还需要安装 RStudio。\n同样，我们从官方网站https://www.rstudio.com/download下载RStudio Desktop版并安装，如果你是苹果系统的用户，选择苹果系统对应的rstudio版本即可。这里重要提示：电脑开机时的用户名不要用中文，否则Rstudio会杠上中文用户名尽量安装在非系统盘，比如，可以选择安装在D盘安装路径不要有中文和空格。比如，这样就比较好\nD:/R\nD:/Rstudio\nD:/RD:/Rstudio","code":""},{"path":"baseR-install.html","id":"配置.rmakevars以及.zshrc-可选单细胞数据分析时可能需要至少在macos系统是需要的","chapter":"第 2 章 安装与环境配置","heading":"2.1.4 配置~/.R/Makevars以及~/.zshrc (可选；单细胞数据分析时可能需要，至少在MacOS系统是需要的)","text":"","code":""},{"path":"baseR-install.html","id":"配置.rmakevars使得r可以调用clang和openmp请根据自己的系统来配置","chapter":"第 2 章 安装与环境配置","heading":"2.1.4.1 配置~/.R/Makevars使得R可以调用clang和openmp（请根据自己的系统来配置）","text":"以下是我本人在MacOS系统中的配置：LDFLAGS += -L/opt/homebrew/opt/libomp/lib -lompCPPFLAGS += -/opt/homebrew/opt/libomp/include -Xpreprocessor -fopenmp","code":""},{"path":"baseR-install.html","id":"配置.zshrc使得r可以调用python-module","chapter":"第 2 章 安装与环境配置","heading":"2.1.4.2 配置.zshrc使得R可以调用python module","text":"配置anaconda，使得R可以调用python module。需要通过修改.zshrc 文件。MacOS可以通过在terminal中输入open ~/.zshrc 来打开。参考：https://superuser.com/questions/886132/---zshrc-file--mac","code":""},{"path":"baseR-install.html","id":"必要的配置可选","chapter":"第 2 章 安装与环境配置","heading":"2.1.5 必要的配置(可选)","text":"为了让R和Rstudio 的运行更顺畅，可以做以下必要的设置宏包安装设置成国内镜像Tools > Global options如果打开代码是乱码，可以试试修改如下设置Tools > Global optionsWindows系统中文用户名的问题当前Rstudio对中文支持不太好，如果windows系统用户名为中文，Rstudio安装完成后可能无法正常使用。这里有一个解决办法右键**我的电脑** -> 属性 -> 高级系统设置 -> 高级 -> 环境变量把TEMP 和TMP都修改为，C:\\TEMP在C盘目录下创建文件夹TEMP重启Rstudio最好的办法是，用英文注册一个新用户，在新用户名下，重新安装R和Rstudio","code":""},{"path":"baseR-install.html","id":"包的安装与加载","chapter":"第 2 章 安装与环境配置","heading":"2.1.6 包的安装与加载","text":"R 语言的强大还在于各种宏包，一般在The Comprehensive R Archive Network (CRAN)、Bioconductor和Github下载安装。可以用如下命令安装宏包:从CRAN安装和加载单个包从Bioconductor安装单个包从Github安装单个包从source codes安装单个包下载源代码（需要是.tar.gz文件），然后在Rstudio中输入请参考R建包网页从source codes编译、安装 单个包.安装多个包","code":"\ninstall.packages(\"tidyverse\")\nlibrary(tidyverse)\ninstall.packages(\"BiocManager\")\nBiocManager::install(\"clusterProfiler\")\ninstall.packages(\"devtools\")\ndevtools::install_github(\"jinworks/CellChat\")\ninstall.packages(path_to_file, type = 'source', rep = NULL) # The path_to_file would represent the full path and file name\nmy_packages <- c(\"tidyvers\", \"patchwork\", \"readxl\", \"devtools\", \"knitr\")\ninstall.packages(my_packages)"},{"path":"baseR-install.html","id":"开始","chapter":"第 2 章 安装与环境配置","heading":"2.2 开始","text":"安装完毕后，从windows开始菜单，点开rstudio图标，就打开了rstudio的窗口，界面效果如下RStudio 的用户界面十分友好，左上角是Editor窗口，负责编写代码左下角是Console窗口，可以键入命令右上角是Environment和History窗口，保存当前存储的数据和历史命令记录等右下角是Plot和Help窗口，用于显示绘制图片和帮助文档想要运行一段R代码，可以在Console内键入 R 代码，然后回车即可。比如我们键入1 + 1 并按回车后，将显示如下结果","code":"\n1 + 1## [1] 2"},{"path":"baseR-install.html","id":"脚本","chapter":"第 2 章 安装与环境配置","heading":"2.3 脚本","text":"运行代码最好的方法是，通过Rstudio菜单栏依此点击File > New File > R Script 来创建一个新的脚本。脚本文件通常以.R作为文件的后缀名。脚本文件的好处在于我们可以在其它时间修改和重新运行它。养成用脚本写代码的习惯后，今后所有的工作都有案可查，并且具有可重复性。如何运行脚本呢？方法有很多按住Ctrl键，然后按回车键Enter，可以运行光标所在行的代码点击 Run, 运行光标所在行的代码点击 Source，从头到尾运行当前脚本全部代码鼠标选中多行代码，然后点击 Run或者Ctrl + Enter","code":""},{"path":"baseR-install.html","id":"注释","chapter":"第 2 章 安装与环境配置","heading":"2.4 注释","text":"可以让阅读者更易理解代码，一般会在脚本中添加注释，R 语言注释符号为 #。 注释会被编译器忽略掉，不会影响代码的执行。","code":"\n1 + 3 # this is my comment"},{"path":"baseR-objects.html","id":"baseR-objects","chapter":"第 3 章 对象","heading":"第 3 章 对象","text":"","code":""},{"path":"baseR-objects.html","id":"对象的创建与使用","chapter":"第 3 章 对象","heading":"3.1 对象的创建与使用","text":"创建一个R对象，首先确定一个名称，然后使用赋值操作符 <-，将数据赋值给它。我们给这个盒子取名 x，然后把5这个数放入盒子，用计算机语言描述就是，给变量 x 赋值为 5，在命令行中可以这样写 x <- 5 ，然后回车.快速产生赋值符号<-，在Rstudio中同时按下alt 和 -（windows系统）option 和 -（苹果系统）当键入 x 然后回车，就打印出 x 的值。当然也可以使用命令print(x)，结果一样。","code":"\nx <- 5\nx## [1] 5"},{"path":"baseR-objects.html","id":"变量命名规则","chapter":"第 3 章 对象","heading":"3.2 变量命名规则","text":"R变量名必须以字母、数字、下划线_和句点.组成。但是，变量名的第一个字符不能为数字或者特殊符号，比如 +, -, *, /, ^, !, @, &, 或者下划线_。变量名的第一个字符如果是句点.，那么句点后面不能紧跟数字。变量名是区分大小写的，y和Y是两个不同的变量名。在中文环境下，汉字也可以作为变量名的合法字符使用，但不推荐使用。大小写敏感不能有空格，可以用下划线代替空格，比如，my_age <- 30开头不能是数字和一些特殊符号为了让代码可读性更强，我们希望变量名能更清晰描述所赋值的对象，比如我们测量了男生的身高，并把测量结果存储为对象，那么这里有三种方案：一般的变量名不错变量名更佳的变量名很显然，第三种方案是最佳的，它清晰告诉我们男生的身高是175，测量单位是cm","code":"\nx <- 175\nheight <- 175\nboy_height_cm <- 175"},{"path":"baseR-objects.html","id":"对象属性","chapter":"第 3 章 对象","heading":"3.3 对象属性","text":"所有R对象都有其属性，其中最重要的两个属性是类型和长度，我们可以用以下两个命令查看对象的类型和长度。","code":"\ntypeof(x) ## [1] \"double\"\nlength(x)## [1] 1"},{"path":"baseR-vectors.html","id":"baseR-vectors","chapter":"第 4 章 向量","heading":"第 4 章 向量","text":"向量是R语言最基础的数据类型。我们把6这个数放入盒子（对象） x，现在，我们想多装一些数据（有顺序、好取出），比如3,4,5,6,7。为了方便管理，那我们就希望这些数有一定的顺序，并且按照一定的结构组织在一起，我能想到的最好的结构就是—我们小时候吃的冰糖葫芦，中间用一根木棒把水果串起来，有先后顺序，而且当做一个整体方便取出。对应到R语言里，我们可以用 c() 函数实现类似结构，一个水果对应一个数值对应到R语言里，我们可以用 c() 函数实现类似结构我们观察到c()函数构造向量的几个要求这里的c就是 combine 或 concatenate 的意思它要求元素之间用英文的逗号分隔且元素的数据类型是统一的，比如这里都是数值这样，c() 函数把一组数据聚合到了一起，就构成了一个向量。","code":"\nx <- 6\nx <- c(3, 4, 5, 6, 7)\nx## [1] 3 4 5 6 7"},{"path":"baseR-vectors.html","id":"聚合成新向量","chapter":"第 4 章 向量","heading":"4.0.1 聚合成新向量","text":"c() 函数还可以把两个向量聚合成一个新的向量。","code":"\nlow      <- c(1, 2, 3)\nhigh     <- c(4, 5, 6)\nsequence <- c(low, high)\nsequence## [1] 1 2 3 4 5 6"},{"path":"baseR-vectors.html","id":"命名向量named-vector","chapter":"第 4 章 向量","heading":"4.0.2 命名向量(named vector)","text":"相比与向量c(5, 6, 7, 8)， 每个元素可以有自己的名字或者","code":"\nx <- c('a' = 5, 'b' = 6, 'c' = 7, 'd' = 8)\nx## a b c d \n## 5 6 7 8\nx <- c(5, 6, 7, 8)\nnames(x) <- c('a', 'b', 'c', 'd')\nx## a b c d \n## 5 6 7 8"},{"path":"baseR-vectors.html","id":"数值型向量","chapter":"第 4 章 向量","heading":"4.1 数值型向量","text":"向量的元素都是数值类型，因此也叫数值型向量。数值型的向量，有 integer 和 double 两种：如果向量元素很多，用手工一个个去输入，那就成了体力活，不现实。在特定情况下，有几种偷懒方法:seq() 函数可以生成等差数列，参数指定数列的起始值，参数指定数列的终止值，参数指定数值的间距：rep() 是 repeat（重复）的意思，可以用于产生重复出现的数字序列：x 用于重复的向量，times 参数可以指定要生成的个数，参数可以指定每个元素重复的次数m:n，如果单纯是要生成数值间距为1的数列，用 m:n 更快捷，它产生从 m 到 n 的间距为1的数列","code":"\nx <- c(1L, 5L, 2L, 3L)    # 整数型\nx <- c(1.5, -0.5, 2, 3)   # 双精度类型，常用写法\ns1 <- seq(from = 0, to = 10, by = 0.5)\ns1##  [1]  0.0  0.5  1.0  1.5  2.0  2.5  3.0  3.5  4.0  4.5  5.0  5.5  6.0  6.5  7.0\n## [16]  7.5  8.0  8.5  9.0  9.5 10.0\ns2 <- rep(x = c(0, 1), times = 3)\ns2## [1] 0 1 0 1 0 1\ns3 <- rep(x = c(0, 1), each = 3)\ns3## [1] 0 0 0 1 1 1\ns4 <- 0:10  # Colon operator (with by = 1):\ns4##  [1]  0  1  2  3  4  5  6  7  8  9 10\ns5 <- 10:1\ns5##  [1] 10  9  8  7  6  5  4  3  2  1"},{"path":"baseR-vectors.html","id":"字符串型向量","chapter":"第 4 章 向量","heading":"4.2 字符串型向量","text":"字符串（String）数据类型，实际上就是文本类型，必须用单引号或者是双引号包含，例如：需要注意的是，x1是字符串型向量，x2是数值型向量","code":"\nx <- c(\"a\", \"b\", \"c\")    \nx <- c('Alice', 'Bob', 'Charlie', 'Dave')    \nx <- c(\"hello\", \"baby\", \"I love you!\") \nx1 <- c(\"1\", \"2\", \"3\")\nx2 <- c(1, 2, 3)"},{"path":"baseR-vectors.html","id":"逻辑型向量","chapter":"第 4 章 向量","heading":"4.3 逻辑型向量","text":"逻辑型常称为布尔型（Boolean）， 它的常量值只有 TRUE 和 FALSE。注意 TRUE 和 FALSE 是在R语言中的保留词汇，所谓保留词汇，就是专用词，类似圆周率\\(\\pi\\)(pi)，特指某个含义，请勿将保留词汇用作变量名。TRUE和FALSE必须都大写，不能写成下面这些形式注意以下两者不要混淆，x1是逻辑型向量，x2是字符串型向量因为TRUE和FALSE是专用词，不加引号，如果加了引号，就是字符串型向量。","code":"\nx <- c(TRUE, TRUE, FALSE, FALSE)\nx <- c(T, T, F, F)            # Equivalent, but not recommended\nx <- c(True, False)          \nx <- c(true, false)          \nx1 <- c(TRUE, FALSE)             # logical\nx2 <- c(\"TRUE\", \"FALSE\")         # character"},{"path":"baseR-vectors.html","id":"因子型向量","chapter":"第 4 章 向量","heading":"4.4 因子型向量","text":"因子型可以看作是字符串向量的增强版，它是带有层级（Levels）的字符串向量。比如这里四个季节的名称，他们构成一个向量我们使用 factor() 函数可以将这里的字符串向量转换成因子型向量查看因子型向量的时候，也会输出了层级信息，默认的情况，它是按照字符串首字母的顺序排序，当然也可以指定顺序，这个时候，我们就需要指定层级信息，比如指定我对四个季节喜欢的顺序为c(“summer”, “winter”, “spring”, “autumn”)","code":"\nfour_seasons <- c(\"spring\", \"summer\", \"autumn\", \"winter\")\nfour_seasons## [1] \"spring\" \"summer\" \"autumn\" \"winter\"\nfour_seasons_factor <- factor(four_seasons)\nfour_seasons_factor## [1] spring summer autumn winter\n## Levels: autumn spring summer winter\nfour_seasons <- c(\"spring\", \"summer\", \"autumn\", \"winter\")\nfour_seasons_factor <- factor(four_seasons, \n                              levels = c(\"summer\", \"winter\", \"spring\", \"autumn\")\n                              )\nfour_seasons_factor## [1] spring summer autumn winter\n## Levels: summer winter spring autumn"},{"path":"baseR-vectors.html","id":"小结","chapter":"第 4 章 向量","heading":"4.5 小结","text":"","code":""},{"path":"baseR-vectors.html","id":"习题","chapter":"第 4 章 向量","heading":"4.6 习题","text":"请说出fun3的结果数据类型必须一致是构建向量的基本要求，如果数值型、字符串型和逻辑型写在一起，用c()函数构成向量，猜猜会发生什么？形容温度的文字要求转换成因子类型向量，并按照温度从高到低排序","code":"\nfun <- c(\"programming\", \"in\", \"R\") \nfun2 <- c(\"Have\", \"fun\")\nfun3 <- c(fun2, fun)\nfun3\nx <- c(1, \"USA\", TRUE)\nx\ntemperatures <- c(\"warm\", \"hot\", \"cold\")"},{"path":"baseR-data-structure.html","id":"baseR-data-structure","chapter":"第 5 章 数据结构","heading":"第 5 章 数据结构","text":"前面介绍了向量，它是R语言中最基础的数据结构我们还会遇到其它数据结构矩阵列表数据框这些数据结构都可以看作由向量衍生出来的1。","code":""},{"path":"baseR-data-structure.html","id":"矩阵","chapter":"第 5 章 数据结构","heading":"5.1 矩阵","text":"矩阵可以存储行(row)和列(column)二维的数据。它实际上是向量的另一种表现形式，也就说它的本质还是向量，一维的向量用二维的方式呈现。矩阵可以用 matrix() 函数创建，第一个位置的参数是用于创建矩阵的向量。比如下面把向量c(2, 4, 3, 1, 5, 7) 转换成2行3列的矩阵大家还记得我们的向量是一个竖着的糖葫芦， 那么在转换成矩阵的时候，也是先竖着排，第一列竖着的方法排满后，就排第二列，这是默认的情形。如果想改变这一传统习惯，也可以增加一个语句 byrow = TRUE，这条语句让向量先横着排，排完第一行，再排第二行。","code":"\nm <- matrix(\n  c(2, 4, 3, 1, 5, 7),\n  nrow = 2, \n  ncol = 3\n)\n\nm##      [,1] [,2] [,3]\n## [1,]    2    3    5\n## [2,]    4    1    7\nmatrix(\n  c(2, 4, 3, 1, 5, 7),\n  nrow = 2, \n  ncol = 3,\n  byrow = TRUE\n)##      [,1] [,2] [,3]\n## [1,]    2    4    3\n## [2,]    1    5    7"},{"path":"baseR-data-structure.html","id":"矩阵的属性","chapter":"第 5 章 数据结构","heading":"5.1.1 矩阵的属性","text":"类型长度维度","code":"\nclass(m)## [1] \"matrix\" \"array\"\nlength(m)## [1] 6\ndim(m)## [1] 2 3"},{"path":"baseR-data-structure.html","id":"列表","chapter":"第 5 章 数据结构","heading":"5.2 列表","text":"如果我们想要装更多的东西，可以想象有一个小火车2，小火车的每节车厢是独立的，因此每节车厢装的东西可以不一样。这种结构装载数据的能力很强大，称之为列表（list）。我们可以使用list()函数创建列表c() 函数创建向量 对比 list() 函数创建列表","code":"\nlist1 <- list(\n  a = c(5, 10),\n  b = c(\"I\", \"love\", \"R\", \"language\", \"!\"),\n  c = c(TRUE, TRUE, FALSE, TRUE)\n)\nlist1## $a\n## [1]  5 10\n## \n## $b\n## [1] \"I\"        \"love\"     \"R\"        \"language\" \"!\"       \n## \n## $c\n## [1]  TRUE  TRUE FALSE  TRUE"},{"path":"baseR-data-structure.html","id":"列表的属性","chapter":"第 5 章 数据结构","heading":"5.2.1 列表的属性","text":"类型长度","code":"\nclass(list1)## [1] \"list\"\nlength(list1)## [1] 3"},{"path":"baseR-data-structure.html","id":"数据框","chapter":"第 5 章 数据结构","heading":"5.3 数据框","text":"前面说过，列表可以想象成一个小火车，如果每节车厢装的都是向量而且等长，那么这种特殊形式的列表就变成了数据框 (data frame)换句话说，数据框是一种特殊的列表，我们可以使用 data.frame() 函数构建数据框数据框类似于我们经常用的excel表格。由于数据框融合了向量、列表和矩阵的特性，所以在数据科学的统计建模和可视化中运用非常广泛。","code":"\ndf <- data.frame(\n  name      = c(\"Alice\", \"Bob\", \"Carl\", \"Dave\"),\n  age       = c(23, 34, 23, 25),\n  marriage  = c(TRUE, FALSE, TRUE, FALSE),\n  color     = c(\"red\", \"blue\", \"orange\", \"purple\")\n)\ndf##    name age marriage  color\n## 1 Alice  23     TRUE    red\n## 2   Bob  34    FALSE   blue\n## 3  Carl  23     TRUE orange\n## 4  Dave  25    FALSE purple"},{"path":"baseR-data-structure.html","id":"数据框的属性","chapter":"第 5 章 数据结构","heading":"5.3.1 数据框的属性","text":"类型维度","code":"\nclass(df) ## [1] \"data.frame\"\nnrow(df)## [1] 4\nncol(df)## [1] 4"},{"path":"baseR-data-structure.html","id":"小结-1","chapter":"第 5 章 数据结构","heading":"5.4 小结","text":"R 对象的数据结构(向量、矩阵、列表和数据框)，总结如下向量: 糖葫芦矩阵: 糖葫芦，有多行多列列表: 小火车数据框: excel表格\n","code":""},{"path":"baseR-data-structure.html","id":"习题-1","chapter":"第 5 章 数据结构","heading":"5.5 习题","text":"为什么说数据框融合了向量、矩阵和列表的特性？创建一个学生信息的data.frame，包含姓名、性别、年龄，成绩等变量。","code":""},{"path":"baseR-operators.html","id":"baseR-operators","chapter":"第 6 章 运算符及向量运算","heading":"第 6 章 运算符及向量运算","text":"向量是R语言中最基础的数据结构，自然地我们会很关注向量的运算，事实上，R语言的强大优势就体现在向量运算上。当然，这都归功于R语言强大的向量化操作。\n在此之前，先介绍常用的有以下几种运算符类型：算术运算符关系运算符逻辑运算符其他运算符","code":""},{"path":"baseR-operators.html","id":"算术运算符","chapter":"第 6 章 运算符及向量运算","heading":"6.1 算术运算符","text":"+ 两个向量相加- 两个向量相减* 两个向量相乘/ 将第一个向量与第二个向量相除* 两个向量/矩阵的对应元素相乘对于向量用于矩阵注意：两个矩阵的乘法用%*%^ 将第二向量作为第一向量的指数","code":"\na <- c(1, 2, 3)\nb <- c(4, 5, 6)\na + b## [1] 5 7 9\na <- c(1, 2, 3)\nb <- c(4, 5, 6)\na - b## [1] -3 -3 -3\na <- c(1, 2, 3)\nb <- c(4, 5, 6)\na * b## [1]  4 10 18\na <- c(1, 2, 3)\nb <- c(4, 5, 6)\na / b## [1] 0.25 0.40 0.50\na <- c(1, 2, 3)\nb <- c(4, 5, 6)\na * b## [1]  4 10 18\nm <- matrix(c(1:4), ncol = 2)\nm %*% m##      [,1] [,2]\n## [1,]    7   15\n## [2,]   10   22\na <- c(1, 2, 3)\nb <- c(4, 5, 6)\na ^ b## [1]   1  32 729"},{"path":"baseR-operators.html","id":"循环补齐recycling","chapter":"第 6 章 运算符及向量运算","heading":"6.2 循环补齐(recycling)","text":"做算术运算时，当两个向量长度相等的时候，就一一对应的完成计算；当两个向量长度不相等的时候，短的向量会循环补齐，保持与长向量的长度一致后，再做运算。长向量的长度正好是短向量的整数倍为了代码的可读性，除非某一个向量长度为1，我们尽可能避免长度不一致的向量之间的运算。","code":"\nx <- 1\ny <- c(10, 20, 30, 40)\nx + y## [1] 11 21 31 41\nx <- c(1, 2)\ny <- c(10, 20, 30, 40)\nx * y## [1] 10 40 30 80"},{"path":"baseR-operators.html","id":"关系运算符","chapter":"第 6 章 运算符及向量运算","heading":"6.3 关系运算符","text":"将第一向量的每个元素与第二向量的相应元素进行比较，比较的结果是布尔值，布尔值是“真” TRUE 或“假” FALSE 中的一个。> 检查第一向量的每个元素是否大于第二向量的相应元素。!= 检查第一个向量的每个元素是否不等于第二个向量的相应元素。","code":"\na <- c(1, 2, 3)\nb <- c(4, 5, 6)\na > b## [1] FALSE FALSE FALSE\na <- c(1, 2, 3)\nb <- c(4, 5, 6)\na != b## [1] TRUE TRUE TRUE"},{"path":"baseR-operators.html","id":"逻辑运算符","chapter":"第 6 章 运算符及向量运算","heading":"6.4 逻辑运算符","text":"逻辑运算符，一般适用于逻辑类型的向量。& 元素逻辑AND运算符。 它将第一向量的每个元素与第二向量的相应元素组合，并且如果两个元素都为TRUE，则给出输出TRUE。| 元素逻辑或运算符。 它将第一向量的每个元素与第二向量的相应元素组合，并且如果元素有一个为真，则给出输出TRUE。! 它被称为逻辑非运算符。 对于向量的每个元素，给出相反的逻辑值。逻辑运算符 && 和 || 只考虑向量的第一个元素，给出单个元素的向量作为输出。&& 称为逻辑AND运算符。 取两个向量的第一个元素，并且只有两个都为TRUE时才给出TRUE。","code":"\na <- c(TRUE, FALSE, FALSE)\nb <- c(FALSE, TRUE, FALSE)\na & b## [1] FALSE FALSE FALSE\na <- c(TRUE, FALSE, FALSE)\nb <- c(FALSE, TRUE, FALSE)\na | b\na <- c(TRUE, FALSE, FALSE)\n!a## [1] FALSE  TRUE  TRUE\na <- c(TRUE, FALSE, FALSE)\nb <- c(FALSE, TRUE, FALSE)\na && b"},{"path":"baseR-operators.html","id":"其他运算符","chapter":"第 6 章 运算符及向量运算","heading":"6.5 其他运算符","text":": 冒号运算符。它按顺序创建一个整数序列。我们在第 4 章向量部分，提到seq()函数，也能产生序列注意到a是整数类型，而b是双精度的数值型。%% 此运算符用于判断元素是否属于向量。.na() 判断是否为缺失值，R 里缺失值用NA表示，NA的意思就是 available 或者 applicable.","code":"\na <- 1:10\na##  [1]  1  2  3  4  5  6  7  8  9 10\ntypeof(a)## [1] \"integer\"\nb <- seq(from = 1, to = 10, by = 1)\nb##  [1]  1  2  3  4  5  6  7  8  9 10\ntypeof(b)## [1] \"double\"\nc(2, 3, 7) %in% c(1, 2, 3, 4, 5)## [1]  TRUE  TRUE FALSE\nis.na(c(1, 2, NA, 4, NA, 6))## [1] FALSE FALSE  TRUE FALSE  TRUE FALSE\nx <- c(1, 2, NA, 4, NA, 6)\n!is.na(x)## [1]  TRUE  TRUE FALSE  TRUE FALSE  TRUE"},{"path":"baseR-operators.html","id":"特殊值","chapter":"第 6 章 运算符及向量运算","heading":"6.6 特殊值","text":"R 语言里还有一些特殊的值: Inf, NaN, NA 和 NULL.Inf，是Infinity的简写，表示无限大；-Inf表示无限小，比如我们用1除以0:NaN，是Not Number的简写，表示这个数字没有数学定义，比如NA，是Not available的简写，表示缺失状态。在后面章节中，当我们处理数据框或者向量的时候回经常遇到它。NA，是Not available的简写，表示缺失状态。在后面章节中，当我们处理数据框或者向量的时候回经常遇到它。NULL，是No value的意思，表示没有值，或者空值的意思，表示变量实际上没有任何值，或者甚至不存在。NULL，是No value的意思，表示没有值，或者空值的意思，表示变量实际上没有任何值，或者甚至不存在。","code":"\n1/0## [1] Inf\n0/0## [1] NaN\n# NULL: an *entire* vector is absent\nc(    )## NULL\n# NA: an *element* in a vector is absent\nc(1, NA, 3)## [1]  1 NA  3"},{"path":"baseR-operators.html","id":"习题-2","chapter":"第 6 章 运算符及向量运算","heading":"6.7 习题","text":"自己填入向量，并运算说出向量 和 b 的差异在什么地方？","code":"___ + ___\n___ - ___\n___ / ___\n___ * ___\n___ ^ ___\n\n___ == ___\n___ != ___\n___ < ___\n___ > ___\n___ <= ___\n___ >= ___\n\n___ & ___\n___ | ___\n\n___ %in% ___\nis.na(___ )\na <- 1:10\nb <- seq(from = 1, to = 10, by = 1)\nidentical(a, b)"},{"path":"baseR-functions.html","id":"baseR-functions","chapter":"第 7 章 函数","heading":"第 7 章 函数","text":"上一节课我们认识了向量操作符，体会到了向量化操作的强大，事实上，向量操作符是一种函数。R 语言的强大就在于它拥有丰富的函数，这里的函数和我们高中数学中的函数 y = f(x) 没什么区别。","code":""},{"path":"baseR-functions.html","id":"基础函数","chapter":"第 7 章 函数","heading":"7.1 基础函数","text":"R 语言内置了很多统计函数，比如对于向量x打印向量x求开方求自然对数求向量元素之和求向量元素的均值求向量元素的标准差找出向量元素中的最小值找出向量元素中的最大值计算向量元素的个数对向量元素大小排序找出向量元素的唯一值，就是给出去重后的数据给出向量的分位数判断是否为数值型/字符串型转化成字符串型判断向量元素是否大于5","code":"\nx <- c(2, 7, 8, 9, 3)\nprint(x)## [1] 2 7 8 9 3\nsqrt(x)## [1] 1.414214 2.645751 2.828427 3.000000 1.732051\nlog(x)## [1] 0.6931472 1.9459101 2.0794415 2.1972246 1.0986123\nsum(x)## [1] 29\nmean(x)## [1] 5.8\nsd(x)## [1] 3.114482\nmin(x)## [1] 2\nmax(x)## [1] 9\nlength(x)## [1] 5\nsort(x)## [1] 2 3 7 8 9\na <- c(\"a\", \"b\", \"b\", \"c\", \"d\", \"a\", \"g\", \"c\", \"d\")\nunique(a)## [1] \"a\" \"b\" \"c\" \"d\" \"g\"\nquantile(x)##   0%  25%  50%  75% 100% \n##    2    3    7    8    9\nis.numeric(x)## [1] TRUE\nis.character(x)## [1] FALSE\nas.character(x)## [1] \"2\" \"7\" \"8\" \"9\" \"3\"\n# as.logical(x)\n# as.numeric(x)\nx <- c(2, 7, 8, 9, 3)\nx > 5## [1] FALSE  TRUE  TRUE  TRUE FALSE\nifelse(x > 5, \"big\", \"small\")## [1] \"small\" \"big\"   \"big\"   \"big\"   \"small\""},{"path":"baseR-functions.html","id":"向量的函数","chapter":"第 7 章 函数","heading":"7.2 向量的函数","text":"用在向量上的函数，可以分为向量化函数(vectorized function)和汇总类函数(summary function)，\n图 7.1: 这两类函数在 Tidyverse 框架中，应用非常广泛。\n当然，也会有例外，比如unique()函数，它返回的向量通常不会与输入的向量等长，既不属于向量化函数，也不属于汇总类函数。","code":""},{"path":"baseR-functions.html","id":"课堂练习","chapter":"第 7 章 函数","heading":"7.3 课堂练习","text":"向量x <- c(2, 7, 8, 9, 3)的平方，加上5向量的元素减去其均值向量标准化（向量减去其均值之后，除以标准差）如果想对更多的向量，也做标准化处理呢？简单重复比较累，有没有一劳永逸的方法？","code":"\nx <- c(2, 7, 8, 9, 3)\nx^2 + 5## [1]  9 54 69 86 14\nx <- c(2, 7, 8, 9, 3)\nx - mean(x)## [1] -3.8  1.2  2.2  3.2 -2.8\nx <- c(2, 7, 8, 9, 3)\n(x - mean(x)) / sd(x)## [1] -1.2201065  0.3852968  0.7063774  1.0274581 -0.8990258\ny <- c(1, 5, 7, 8, 9, 3)\n(y - mean(y)) / sd(y)## [1] -1.4599928 -0.1622214  0.4866643  0.8111071  1.1355499 -0.8111071\nz <- c(4, 7, 7, 8, 9, 3, 9, 6)\n(z - mean(z)) / sd(z)## [1] -1.1932699  0.1704671  0.1704671  0.6250461  1.0796251 -1.6478489  1.0796251\n## [8] -0.2841119"},{"path":"baseR-functions.html","id":"自定义函数","chapter":"第 7 章 函数","heading":"7.4 自定义函数","text":"创建，由function(...)创建一个函数参数，由(...) 里指定参数，比如function(x)中的参数为 x函数主体，一般情况下，在function(...)后跟随一对大括号{ }，在大括号里声明具体函数功能，在代码最后一行，可以用return返回计算后的值。当然，如果函数的目的只是返回最后一行代码计算的值，这个return可以省略。函数名，function() { } 赋值给新对象，比如这里的my_std，相当于给函数取一名字，方便以后使用。函数调用，现在这个函数名字叫my_std，需要用这个函数的时候，就调用它的名字my_std()。","code":"\nmy_std <- function(x) {\n   res <- (x - mean(x)) / sd(x)\n   return(res)\n }\nmy_std <- function(x) {\n   ...\n}\nmy_std(x = c(1, 5, 7, 8, 9, 3)) # 或者\nmy_std(c(1, 5, 7, 8, 9, 3))     # 或者\n\ninput <- c(1, 5, 7, 8, 9, 3)\nmy_std(input)"},{"path":"baseR-functions.html","id":"使用宏包的函数","chapter":"第 7 章 函数","heading":"7.5 使用宏包的函数","text":"","code":""},{"path":"baseR-functions.html","id":"安装宏包与使用宏包","chapter":"第 7 章 函数","heading":"7.5.1 安装宏包与使用宏包","text":"安装宏包 install.packages(\"dplyr\") 相当于你买了一台电视机，安装一次就够了; 加载 library(\"dplyr\")相当于你每次要看电视，就需要插上电、打开电视的动作，运行library(\"dplyr\")才能用里面的函数。各种宏包也为我们准备了不同的函数，我们在使用前一般会先加载该宏包，比如后面章节我们会用的dplyr宏包中的select()函数，它用于选取数据框的某列","code":"\nlibrary(dplyr)\n\nselect(starwars, height)"},{"path":"baseR-functions.html","id":"指定函数的所属宏包","chapter":"第 7 章 函数","heading":"7.5.2 指定函数的所属宏包","text":"但是，其它宏包可能也有select()函数，比如MASS和skimr，如果同时加载了dplyr，MASS和skimr三个宏包，在程序中使用select()函数，就会造成混淆和报错。这个时候就需要给每个函数指定是来源哪个宏包，具体方法就是在宏包和函数之间添加::，比如dplyr::select()，skimr::select() 或者MASS::select()。至此，我们接触到了三类函数内置的函数自定义的函数宏包的函数","code":""},{"path":"baseR-functions.html","id":"如何获取帮助","chapter":"第 7 章 函数","heading":"7.6 如何获取帮助","text":"记住和学习所有的函数几乎是不可能的打开函数的帮助页面(Rstudio右下面板的Help选项卡)比如：","code":"\n?sqrt\n?gather\n?ggplot2"},{"path":"baseR-functions.html","id":"习题-3","chapter":"第 7 章 函数","heading":"7.7 习题","text":"根据方差的数学表达式，写出方差的计算函数，并与基础函数var()的结果对比\\[\n\\mathrm{Var}(x) = \\frac{1}{n - 1} \\sum_{=1}^n (x_i - \\bar{x}) ^2\n\\]自定义函数，它的作用是将输入的身高height(cm)与体重weight(kg)计算之后的BMI结果返回，BMI的计算公式为：\\[\n\\mathrm{BMI} = \\frac{weight(kg)}{height(m)^2}  \n\\]对于给定的向量 vector和阈值threshold，求出vector中所有大于该阈值的元素的均值","code":"\nget_bmi <- function(height, weight) {\n  # ...\n}\nget_bmi(175, 65)\nmean_above_threshod <- function(vector, threshold) {\n  \n}"},{"path":"baseR-functions.html","id":"阅读","chapter":"第 7 章 函数","heading":"7.8 阅读","text":"推荐您阅读(https://r4ds..co.nz/functions.html)","code":""},{"path":"baseR-functions-adv.html","id":"baseR-functions-adv","chapter":"第 8 章 函数应用","heading":"第 8 章 函数应用","text":"","code":""},{"path":"baseR-functions-adv.html","id":"灵活的语法","chapter":"第 8 章 函数应用","heading":"8.1 灵活的语法","text":"我们对输入的向量每个元素计算平方，可以这样写函数R语言里面，完成一件事情往往有很多种方法，比如方法1：方法2：方法3：方法4：方法5：","code":"\nmysquare <- function(x) {\n   y <- x^2\n   return(y)  \n}\nmysquare <- function(x) {\n    return(x^2)\n}\nmysquare <- function(x) { return(x^2) }\nmysquare <- function(x) return(x^2)\nmysquare <- function(x) {\n    x^2\n}\nmysquare <- function(x) x^2"},{"path":"baseR-functions-adv.html","id":"多个参数","chapter":"第 8 章 函数应用","heading":"8.2 多个参数","text":"练习：说说这个函数的意思","code":"\nsum_two <- function(num1, num2) {\n  sum  <- num1 + num2\n  return(sum)\n}\n\n\nsum_two(num1 = 1, num2 = 2)## [1] 3\nsum_two(12, 9)## [1] 21\nnorm_by_y <- function(num1, num2) {\n   result  <- (num1 - num2)/num2\n   return(result)\n}"},{"path":"baseR-functions-adv.html","id":"条件语句","chapter":"第 8 章 函数应用","heading":"8.3 条件语句","text":"使用 -else 语句比如，先判断是否为数值，如果是返回它的平方，如果不是数值，就返回提示语句练习：将上面sum_two()函数增加数据类型判断语句，让函数更安全。多个条件的，就需要if-else -else语句，比如这里判断一个数是正数、负数还是0","code":"if(condition) {\n   Do something\n} else {\n   Alternative something\n}\nsquare_if <- function(num) {\n    if (is.numeric(num)) {\n      num^2\n    } else {\n     \"Your input is not numeric.\"\n    }\n}\n\n\nsquare_if(\"a\")## [1] \"Your input is not numeric.\"\nsquare_if(3)## [1] 9\nsum_two(\"a\", \"b\")\ncheck_number <- function(x) {\n  if (x < 0) {\n    print(\"Negative number\")\n  } else if (x > 0) {\n    print(\"Positive number\")\n  } else {\n    print(\"Zero\")\n  }\n}\n\n\nx <- 0\ncheck_number(x)## [1] \"Zero\""},{"path":"baseR-functions-adv.html","id":"返回多个结果","chapter":"第 8 章 函数应用","heading":"8.4 返回多个结果","text":"如果要返回多个统计结果，可以把结果先放在list或者data.frame中，然后再返回。或者","code":"\nmystat <- function(x){\n   meanval <- mean(x) \n   sdval <- sd(x)\n   \n   list(sd = sdval, mean = meanval)\n}\nmystat <- function(x){\n   meanval <- mean(x) \n   sdval <- sd(x)\n   \n   data.frame(  \n     sd = sdval, \n     mean = meanval\n   )\n}"},{"path":"baseR-functions-adv.html","id":"更多","chapter":"第 8 章 函数应用","heading":"8.5 更多","text":"冰淇淋放大器，这个机器有很多档位，可以让冰淇淋放大指定的倍数，默认为10倍注意：不建议这样写嵌套函数，可以写子函数，然后再调用，这样程序的可读性更强，更清晰。","code":"\nenlarge_icecream <- function(multi = 10) {\n  function(icecream) {\n    icecream * multi\n  }\n}"},{"path":"baseR-subsetting.html","id":"baseR-subsetting","chapter":"第 9 章 子集选取","heading":"第 9 章 子集选取","text":"子集选取单独作一章，说明它确实很重要。上一章讲对象、数据类型和数据结构等概念。为了方便理解，我这里打个比方，\n对象就是我们在计算机里新建了存储空间，好比一个盒子，\n我们可以往盒子里面装东西（赋值），可以查看里面的内容或者对里面的内容做计算（函数），也可以从盒子里取出部分东西（子集选取）。子集选取，就是从盒子里取东西出来3。","code":""},{"path":"baseR-subsetting.html","id":"向量","chapter":"第 9 章 子集选取","heading":"9.1 向量","text":"对于原子型向量，我们有至少四种选取子集的方法正整数： 指定向量元素中的位置负整数：删除指定位置的元素逻辑向量：将TRUE对应位置的元素提取出来常用的一种情形；筛选出大于某个值的所有元素如果是命名向量我们可以用命名向量，返回其对应位置的向量","code":"\nx <- c(1.1, 2.2, 3.3, 4.4, 5.5)\nx[1]## [1] 1.1\nx[c(1, 3)]## [1] 1.1 3.3\nx[c(3, 1)]## [1] 3.3 1.1\nx[-2]## [1] 1.1 3.3 4.4 5.5\nx[c(-3, -4)]## [1] 1.1 2.2 5.5\nx[c(TRUE, FALSE, TRUE, FALSE, TRUE)]## [1] 1.1 3.3 5.5\nx > 3## [1] FALSE FALSE  TRUE  TRUE  TRUE\nx[x > 3]## [1] 3.3 4.4 5.5\ny <- c(\"a\" = 11, \"b\" = 12, \"c\" = 13, \"d\" = 14)\ny##  a  b  c  d \n## 11 12 13 14\ny[c(\"d\", \"c\", \"a\")]##  d  c  a \n## 14 13 11"},{"path":"baseR-subsetting.html","id":"列表-1","chapter":"第 9 章 子集选取","heading":"9.2 列表","text":"对列表取子集，和向量的方法一样。向量的子集仍然是向量，使用[提取列表的子集，总是返回列表使用位置索引也可以使用元素名如果想提取列表某个元素的值，需要使用 [[也可以使用其中的元素名，比如[[\"one\"]]，取出one位置上的元素，需要写[[\"one\"]]，程序员觉得要写太多的字符了，太麻烦了，所以用$来简写所以请记住[ 和[[的区别x$y 是 x[[\"y\"]]的简写","code":"\nl <- list(\n  \"one\"   = c(\"a\", \"b\", \"c\"),\n  \"two\"   = c(1:5),\n  \"three\" = c(TRUE, FALSE)\n)\nl## $one\n## [1] \"a\" \"b\" \"c\"\n## \n## $two\n## [1] 1 2 3 4 5\n## \n## $three\n## [1]  TRUE FALSE\nl[1]## $one\n## [1] \"a\" \"b\" \"c\"\nl[\"one\"]## $one\n## [1] \"a\" \"b\" \"c\"\nl[[1]]## [1] \"a\" \"b\" \"c\"\nl[[\"one\"]]## [1] \"a\" \"b\" \"c\"\nl$one## [1] \"a\" \"b\" \"c\""},{"path":"baseR-subsetting.html","id":"矩阵-1","chapter":"第 9 章 子集选取","heading":"9.3 矩阵","text":"我们取第1行到第2行的2-3列，[1:2, 2:3]，中间以逗号分隔，于是得到一个新的矩阵默认情况下, [ 会将获取的数据，以尽可能低的维度形式呈现。比如表示第1行的第1、2列，此时不是\\(1 \\times 2\\)矩阵，而是包含了两个元素的向量。\n以尽可能低的维度形式呈现，换句话说，这个1, 4长的像个矩阵，又有点像向量，向量的维度比矩阵低，那就是向量吧。有些时候，我们想保留所有的行或者列，比如行方向，只选取第 1 行到第 2 行列方向，选取所有列可以这样简写","code":"\na <- matrix(1:9, nrow = 3)\na##      [,1] [,2] [,3]\n## [1,]    1    4    7\n## [2,]    2    5    8\n## [3,]    3    6    9\na[1:2, 2:3]##      [,1] [,2]\n## [1,]    4    7\n## [2,]    5    8\na[1, 1:2]## [1] 1 4\na[1:2, ]##      [,1] [,2] [,3]\n## [1,]    1    4    7\n## [2,]    2    5    8"},{"path":"baseR-subsetting.html","id":"数据框-1","chapter":"第 9 章 子集选取","heading":"9.4 数据框","text":"数据框具有list和matrix的双重属性，因此当选取数据框的某几列的时候，可以和list一样，指定元素位置索引，比如df[1:2]选取前两列也可以像矩阵一样，按照行和列的标识选取，比如df[1:3, ]选取前三行的所有列","code":"\ndf <- data.frame(\n  x = 1:4,\n  y = 4:1,\n  z = c(\"a\", \"b\", \"c\", \"d\")\n)\ndf##   x y z\n## 1 1 4 a\n## 2 2 3 b\n## 3 3 2 c\n## 4 4 1 d"},{"path":"baseR-subsetting.html","id":"like-a-list","chapter":"第 9 章 子集选取","heading":"9.4.1 Like a list","text":"","code":"\ndf[c(\"x\", \"z\")]##   x z\n## 1 1 a\n## 2 2 b\n## 3 3 c\n## 4 4 d\ndf[[\"x\"]]## [1] 1 2 3 4\ndf$x## [1] 1 2 3 4"},{"path":"baseR-subsetting.html","id":"like-a-matrix","chapter":"第 9 章 子集选取","heading":"9.4.2 Like a matrix","text":"也可以通过行和列的位置当遇到单行或单列的时候，也和矩阵一样，数据会降维如果想避免降维，需要多写一句话这样输出的还是矩阵形式，但程序员总是偷懒的，有时候我们也容易忘记写drop = FALSE，\n所以我比较喜欢下面的tibble.","code":"\ndf[, c(\"x\", \"z\")]##   x z\n## 1 1 a\n## 2 2 b\n## 3 3 c\n## 4 4 d\ndf[1:3, ]##   x y z\n## 1 1 4 a\n## 2 2 3 b\n## 3 3 2 c\ndf[, \"x\"]## [1] 1 2 3 4\ndf[, \"x\", drop = FALSE]##   x\n## 1 1\n## 2 2\n## 3 3\n## 4 4"},{"path":"baseR-subsetting.html","id":"增强型数据框","chapter":"第 9 章 子集选取","heading":"9.5 增强型数据框","text":"tibble是增强型的data.frame，选取tibble的行或者列，即使遇到单行或者单列的时候，数据也不会降维，总是返回tibble，即仍然是数据框的形式。除此以外，tibble还有很多优良的特性。","code":"\ntb <- tibble::tibble(\n  x = 1:4,\n  y = 4:1,\n  z = c(\"a\", \"b\", \"c\", \"d\")\n)\ntb## # A tibble: 4 × 3\n##       x     y z    \n##   <int> <int> <chr>\n## 1     1     4 a    \n## 2     2     3 b    \n## 3     3     2 c    \n## 4     4     1 d\ntb[\"x\"]## # A tibble: 4 × 1\n##       x\n##   <int>\n## 1     1\n## 2     2\n## 3     3\n## 4     4\ntb[, \"x\"]## # A tibble: 4 × 1\n##       x\n##   <int>\n## 1     1\n## 2     2\n## 3     3\n## 4     4"},{"path":"baseR-subsetting.html","id":"作业","chapter":"第 9 章 子集选取","heading":"9.6 作业","text":"如何获取matrix(1:9, nrow = 3)上对角元? 对角元？如何获取matrix(1:9, nrow = 3)上对角元? 对角元？对数据框，思考df[\"x\"]， df[[\"x\"]]， df$x三者的区别?对数据框，思考df[\"x\"]， df[[\"x\"]]， df$x三者的区别?如果x是一个矩阵，请问 x[] <- 0 和x <- 0 有什么区别？如果x是一个矩阵，请问 x[] <- 0 和x <- 0 有什么区别？不添加参数na.rm = TRUE的前提下，用sum()计算向量x的元素之和不添加参数na.rm = TRUE的前提下，用sum()计算向量x的元素之和提示：使用is.na(x) 检查向量元素是否为缺失值，并保存为新的对象x_missing将所有缺失值赋值为0然后 sum() 计算找出x向量中的偶数","code":"\nx <- c(3, 5, NA, 2, NA)\nx <- 1:10\nx##  [1]  1  2  3  4  5  6  7  8  9 10"},{"path":"tidyverse-readr.html","id":"tidyverse-readr","chapter":"第 10 章 读取数据","heading":"第 10 章 读取数据","text":"在学习R语言过程中，除了使用内置的数据集外，我们更多的需要导入外部数据，\n比如实验观察数据、社会调研的数据等等。\n在讲如何读取数据到 R之前，先介绍下数据科学中的项目管理。","code":""},{"path":"tidyverse-readr.html","id":"数据科学中的文件管理","chapter":"第 10 章 读取数据","heading":"10.1 数据科学中的文件管理","text":"把项目所需的文件（代码、数据、图片等），放在一个文件夹里","code":""},{"path":"tidyverse-readr.html","id":"文件夹命名","chapter":"第 10 章 读取数据","heading":"10.1.1 文件夹命名","text":"推荐的文件夹命名习惯 (项目名+日期)，注意这里不要有中文和空格, 比如下面风格的就比较好project20201014Emotional_experiment20201014","code":""},{"path":"tidyverse-readr.html","id":"项目文件结构","chapter":"第 10 章 读取数据","heading":"10.1.2 项目文件结构","text":"","code":""},{"path":"tidyverse-readr.html","id":"读取文件","chapter":"第 10 章 读取数据","heading":"10.2 读取文件","text":"事实上，R语言提供了很多读取数据的函数。下表列出了常见文件格式的读取方法tidyverse家族中的readr包中read_table()、read_csv()、read_tsv()、read_delim()都可以读取文件，但返回的是tibble. 而默认的read.table()等返回的是常规的dataframe。","code":""},{"path":"tidyverse-readr.html","id":"文件路径","chapter":"第 10 章 读取数据","heading":"10.3 文件路径","text":"在读取文件时，路径的写法有如下方式（以图像文件”.jpg”为例）如果以当前项目文件为中心，图片在当前目录，它的路径\n“./.jpg”如果以当前项目文件为中心，图片在当前目录，它的路径\n“./.jpg”如果以当前项目文件为中心，图片在下一层目录的images文件夹\n“./images/.jpg”如果以当前项目文件为中心，图片在下一层目录的images文件夹\n“./images/.jpg”如果以当前项目文件为中心，图片在上一层目录下，它的路径\n“../.jpg”如果以当前项目文件为中心，图片在上一层目录下，它的路径\n“../.jpg”如果以当前项目文件为中心，图片在上一层目录的images文件夹，它的路径\n“../images/.jpg”如果以当前项目文件为中心，图片在上一层目录的images文件夹，它的路径\n“../images/.jpg”从根目录出发，访问D盘的images文件”b.jpg”图片，它的路径\n“D:/images/b.jpg”从根目录出发，访问D盘的images文件”b.jpg”图片，它的路径\n“D:/images/b.jpg”","code":""},{"path":"tidyverse-readr.html","id":"here-宏包","chapter":"第 10 章 读取数据","heading":"10.4 here 宏包","text":"推荐使用强大的here宏包，()会告诉我们当前所在的目录以及指向某个文件的路径信息这样就会很方便的读取文件here宏包的好处还在于，在不同的电脑和文件结构下，代码都能运行，尤其当与合作者共同完成一个项目时，这个方法非常有用。","code":"\nhere::here()## [1] \"/Users/suoqinjin/Documents/my_project2023/R_for_Beginners\"\nhere::here(\"demo_data\", \"kidiq.RDS\")## [1] \"/Users/suoqinjin/Documents/my_project2023/R_for_Beginners/demo_data/kidiq.RDS\"\nreadr::read_rds(here::here(\"demo_data\", \"kidiq.RDS\"))"},{"path":"tidyverse-readr.html","id":"范例","chapter":"第 10 章 读取数据","heading":"10.5 范例","text":"csv = “comma-separated values”","code":"\nd <- read.table(file= \"./data/txt_file.txt\", header = TRUE)\nd <- read.table(here::here(\"data\", \"txt_file.txt\"), header = TRUE)\nload(file = \"./data/rda_file.rda\")\nload(here::here(\"data\", \"rda_file.rda\"))\nd <- readRDS(\"./data/rds_file.rds\")\nd <- readRDS(here::here(\"data\", \"rda_file.rds\"))\nlibrary(readr)\nd <- read_csv(file = \"./data/csv_file.csv\") \nd <- read_csv(here::here(\"data\", \"csv_file.csv\")) \nurl <- \"https://raw.githubusercontent.com/perlatex/R_for_Data_Science/master/demo_data/wages.csv\"\nd <- read_csv(url)\nlibrary(readxl)\nd <- read_excel(\"./data/vowel_data.xlsx\") \nd <- read_excel(here::here(\"data\", \"vowel_data.xlsx\")) "},{"path":"tidyverse-readr.html","id":"乱码情形","chapter":"第 10 章 读取数据","heading":"10.6 乱码情形","text":"\n遇到乱码的情况，这里有个小小的提示：\n\n可以先用记事本转换成”UTF-8”编码，\n\n或者指定编码格式，比如read.table(…, fileEncoding = “UTF-8”)，再试试。\n","code":""},{"path":"tidyverse-dplyr.html","id":"tidyverse-dplyr","chapter":"第 11 章 数据处理","heading":"第 11 章 数据处理","text":"我们用一个应用场景，复习上两章讲的数据类型和数据结构等概念。比如，这里有一个表格如果构建学生们的成绩，需要用到是向量，一列就可以了。如果构建学生的各科成绩，需要用到是矩阵，因为此时需要多列，不同的列对应不同的科目。如果构建学生综合信息（性别，年龄，各科成绩，是否喜欢R），需要用到的是列表，因为除了各科成绩列，还需要其它数据类型的列。当然，构建学生综合信息的表格，最好还是用数据框，因为这些信息是等长的，而且符合人的理解习惯, 所以，我们会经常和数据框打交道。数据框的特性很丰富，在于：第一，它是列表的特殊形式，可以存储不同类型的数据。第二，它要求每个元素长度必须一致，因此长的像矩阵。第三，它的每个元素就是一个是向量，而R语言有个优良特性，就是向量化操作，因此，使用函数非常方便。本章我们介绍tidyverse里被誉为“瑞士军刀”的数据处理的工具dplyr宏包。首先，我们加载该宏包dplyr 定义了数据处理的规范语法，其中主要包含以下10个主要的函数。mutate(), select(), rename() , filter()summarise(), group_by(), arrange()left_join(), right_join()， full_join()我们用一个案例依次讲解这些函数的功能。假定这里有三位同学的英语和数学成绩","code":"\nlibrary(dplyr)\ndf <- readr::read_csv(here::here(\"demo_data\", \"score.csv\"))\ndf## # A tibble: 6 × 3\n##   name  type    score\n##   <chr> <chr>   <dbl>\n## 1 Alice english    80\n## 2 Alice math       60\n## 3 Bob   english    70\n## 4 Bob   math       69\n## 5 Carol english    80\n## 6 Carol math       90"},{"path":"tidyverse-dplyr.html","id":"新增一列-mutate","chapter":"第 11 章 数据处理","heading":"11.1 新增一列 mutate()","text":"同学们表现不错，分别得到额外的奖励分 c(2, 5, 9, 8, 5, 6)那么，如何把奖励分加到表中呢？用mutate()函数可以这样写\n第一次觉得这个单词很陌生，可以理解为modifymutate()函数的功能是给数据框新增一列，使用语法为 mutate(.data = df, name = value)：第一个参数.data，接受要处理的数据框，比如这里的df。第二个参数是Name-value对, 比如extra = reward，\n等号左边，是我们为新增的一列取的名字，比如这里的extra，因为数据框每一列都是要有名字的；\n等号右边，是打算并入数据框的向量，比如这里的reward，它是装着学生成绩的向量。注意，向量的长度，\n要么与数据框的行数等长，比如这里向量长度为6；\n要么长度为1，即，新增的这一列所有的值都是一样的(循环补齐机制)。\n\n等号左边，是我们为新增的一列取的名字，比如这里的extra，因为数据框每一列都是要有名字的；等号右边，是打算并入数据框的向量，比如这里的reward，它是装着学生成绩的向量。注意，向量的长度，\n要么与数据框的行数等长，比如这里向量长度为6；\n要么长度为1，即，新增的这一列所有的值都是一样的(循环补齐机制)。\n要么与数据框的行数等长，比如这里向量长度为6；要么长度为1，即，新增的这一列所有的值都是一样的(循环补齐机制)。因为mutate()函数处理的是数据框，并且固定放置在第一位置上（几乎所有dplyr的函数都是这样要求的），所以这个.data可以偷懒不写，直接写mutate(df, extra = reward)。另外，如果想同时新增多个列，只需要提供多个Name-value对即可，比如","code":"\nreward <- c(2, 5, 9, 8, 5, 6)\nmutate(.data = df, extra = reward) ## # A tibble: 6 × 4\n##   name  type    score extra\n##   <chr> <chr>   <dbl> <dbl>\n## 1 Alice english    80     2\n## 2 Alice math       60     5\n## 3 Bob   english    70     9\n## 4 Bob   math       69     8\n## 5 Carol english    80     5\n## 6 Carol math       90     6\nmutate(df, \n       extra1 = c(2, 5, 9, 8, 5, 6),\n       extra2 = c(1, 2, 3, 3, 2, 1),\n       extra3 = c(8)\n       ) "},{"path":"tidyverse-dplyr.html","id":"管道","chapter":"第 11 章 数据处理","heading":"11.2 管道 %>%","text":"实际运用中，我们经常要使用函数，比如计算向量c(1:10)所有元素值的和现在有个与上面的等价的写法，就是使用管道操作符%>%。这条语句的意思是f(x) 写成 x %>% f()，这里向量 c(1:10) 通过管道操作符 %>% ，传递到函数sum()的第一个参数位置，即sum(c(1:10))， 这个 %>% 管道操作符还是很形象的。在Windows系统中可以通过Ctrl + Shift + M 快捷键产生 %>%，苹果系统对应的快捷键是Cmd + Shift + M。当执行多个函数操作的时候，管道操作符 %>% 就显得格外方便，代码可读性也更强。比如使用管道操作符那么，之前增加学生奖励分成绩的语句 mutate(df, extra = reward)，也可以使用管道是不是很赞4。","code":"\nsum(c(1:10))## [1] 55\nc(1:10) %>% sum()## [1] 55\nsqrt(sum(abs(c(-10:10))))## [1] 10.48809\nc(-10:10) %>% abs() %>% sum() %>% sqrt()## [1] 10.48809\n# using `%>%`\ndf %>% mutate(extra = reward) ## # A tibble: 6 × 4\n##   name  type    score extra\n##   <chr> <chr>   <dbl> <dbl>\n## 1 Alice english    80     2\n## 2 Alice math       60     5\n## 3 Bob   english    70     9\n## 4 Bob   math       69     8\n## 5 Carol english    80     5\n## 6 Carol math       90     6"},{"path":"tidyverse-dplyr.html","id":"向量函数与mutate","chapter":"第 11 章 数据处理","heading":"11.3 向量函数与mutate()","text":"mutate()函数的本质还是第 6 章介绍向量函数和向量化操作，只不过是换作在数据框中完成，这样更能形成“据框进、数据框出”的思维，方便快捷地构思并统计任务5。比如，我们想计算每位同学分数的平方，然后构建数据框新的一列，我们可以用第 7 章函数的方法，自定义calc_square()函数在mutate()中引用数据框的某一列名，实际上是引用了列名对应的整个向量, 所以，这里我们传递score到calc_square()，就是把整个score向量传递给calc_square().几何算符（这里是平方）是向量化的，因此calc_square()会对输入的score向量，返回一个等长的向量。mutate() 拿到这个新的向量后，就在原有数据框中添加新的一列new_col","code":"\ncalc_square <- function(x) {\n  x^2\n}\n\ndf %>% \n  mutate(new_col = calc_square(score))## # A tibble: 6 × 4\n##   name  type    score new_col\n##   <chr> <chr>   <dbl>   <dbl>\n## 1 Alice english    80    6400\n## 2 Alice math       60    3600\n## 3 Bob   english    70    4900\n## 4 Bob   math       69    4761\n## 5 Carol english    80    6400\n## 6 Carol math       90    8100"},{"path":"tidyverse-dplyr.html","id":"保存为新的数据框","chapter":"第 11 章 数据处理","heading":"11.4 保存为新的数据框","text":"现在有个问题，此时 df 有没发生变化？是否包含额外的奖励分呢？\n事实上，此时df并没有发生改变，还是原来的状态。如果需要保存计算结果，就需要把计算的结果重新赋值给新的对象，当然，也可以赋值给df本身，这样df存储的数据就更新为计算后的结果。好，现在我们把添加奖励分、计算总成绩和保存结果这三个步骤一气呵成的完成","code":"\ndf_new <- df %>% \n  mutate(extra = reward) %>% \n  mutate(total = score + extra)\ndf_new## # A tibble: 6 × 5\n##   name  type    score extra total\n##   <chr> <chr>   <dbl> <dbl> <dbl>\n## 1 Alice english    80     2    82\n## 2 Alice math       60     5    65\n## 3 Bob   english    70     9    79\n## 4 Bob   math       69     8    77\n## 5 Carol english    80     5    85\n## 6 Carol math       90     6    96"},{"path":"tidyverse-dplyr.html","id":"选取列-select","chapter":"第 11 章 数据处理","heading":"11.5 选取列 select()","text":"select()顾名思义选择，就是选择数据框的某一列，或者某几列。我们以上面学生成绩的数据框为例，这里选择name列 注意，结果是只有一列的数据框（仍然数据框喔，数据框进数据框出是dplyr函数的第二个特点）。如果要选取多列，就再多写几个列名就行了如果不想要某列，可以在变量前面加 - 或者 !，两者的结果是一样的。也可以通过位置索引进行选取，比如选取头三列如果要选取数据框的列很多，我们也可以先观察列名的特征，用特定的函数进行选取，比如选取以”s”开头的列选取以”e”结尾的列选取含有以”score”的列当然，也可以通过变量的类型来选取，比如选取所有字符串类型的列选取所有数值类型的列选取所有数值类型的并且以”s”开头的列选取以”s”开头或者以”e”结尾的列","code":"\ndf_new %>% select(name)## # A tibble: 6 × 1\n##   name \n##   <chr>\n## 1 Alice\n## 2 Alice\n## 3 Bob  \n## 4 Bob  \n## 5 Carol\n## 6 Carol\ndf_new %>% select(name, extra)## # A tibble: 6 × 2\n##   name  extra\n##   <chr> <dbl>\n## 1 Alice     2\n## 2 Alice     5\n## 3 Bob       9\n## 4 Bob       8\n## 5 Carol     5\n## 6 Carol     6\ndf_new %>% select(name, score, extra, total)## # A tibble: 6 × 4\n##   name  score extra total\n##   <chr> <dbl> <dbl> <dbl>\n## 1 Alice    80     2    82\n## 2 Alice    60     5    65\n## 3 Bob      70     9    79\n## 4 Bob      69     8    77\n## 5 Carol    80     5    85\n## 6 Carol    90     6    96\ndf_new %>% select(-type)## # A tibble: 6 × 4\n##   name  score extra total\n##   <chr> <dbl> <dbl> <dbl>\n## 1 Alice    80     2    82\n## 2 Alice    60     5    65\n## 3 Bob      70     9    79\n## 4 Bob      69     8    77\n## 5 Carol    80     5    85\n## 6 Carol    90     6    96\ndf_new %>% select(!type)## # A tibble: 6 × 4\n##   name  score extra total\n##   <chr> <dbl> <dbl> <dbl>\n## 1 Alice    80     2    82\n## 2 Alice    60     5    65\n## 3 Bob      70     9    79\n## 4 Bob      69     8    77\n## 5 Carol    80     5    85\n## 6 Carol    90     6    96\ndf_new %>% select(1, 2, 3)## # A tibble: 6 × 3\n##   name  type    score\n##   <chr> <chr>   <dbl>\n## 1 Alice english    80\n## 2 Alice math       60\n## 3 Bob   english    70\n## 4 Bob   math       69\n## 5 Carol english    80\n## 6 Carol math       90\ndf_new %>% select(2:3)## # A tibble: 6 × 2\n##   type    score\n##   <chr>   <dbl>\n## 1 english    80\n## 2 math       60\n## 3 english    70\n## 4 math       69\n## 5 english    80\n## 6 math       90\ndf_new %>% select(starts_with(\"s\"))## # A tibble: 6 × 1\n##   score\n##   <dbl>\n## 1    80\n## 2    60\n## 3    70\n## 4    69\n## 5    80\n## 6    90\ndf_new %>% select(ends_with(\"e\"))## # A tibble: 6 × 3\n##   name  type    score\n##   <chr> <chr>   <dbl>\n## 1 Alice english    80\n## 2 Alice math       60\n## 3 Bob   english    70\n## 4 Bob   math       69\n## 5 Carol english    80\n## 6 Carol math       90\ndf_new %>% select(contains(\"score\"))## # A tibble: 6 × 1\n##   score\n##   <dbl>\n## 1    80\n## 2    60\n## 3    70\n## 4    69\n## 5    80\n## 6    90\ndf_new %>% select(where(is.character))## # A tibble: 6 × 2\n##   name  type   \n##   <chr> <chr>  \n## 1 Alice english\n## 2 Alice math   \n## 3 Bob   english\n## 4 Bob   math   \n## 5 Carol english\n## 6 Carol math\ndf_new %>% select(where(is.numeric))## # A tibble: 6 × 3\n##   score extra total\n##   <dbl> <dbl> <dbl>\n## 1    80     2    82\n## 2    60     5    65\n## 3    70     9    79\n## 4    69     8    77\n## 5    80     5    85\n## 6    90     6    96\ndf_new %>% select(where(is.numeric) & starts_with(\"t\"))## # A tibble: 6 × 1\n##   total\n##   <dbl>\n## 1    82\n## 2    65\n## 3    79\n## 4    77\n## 5    85\n## 6    96\ndf_new %>% select(starts_with(\"s\") | ends_with(\"e\"))## # A tibble: 6 × 3\n##   score name  type   \n##   <dbl> <chr> <chr>  \n## 1    80 Alice english\n## 2    60 Alice math   \n## 3    70 Bob   english\n## 4    69 Bob   math   \n## 5    80 Carol english\n## 6    90 Carol math\ndf_new %>% select(!starts_with(\"s\"))## # A tibble: 6 × 4\n##   name  type    extra total\n##   <chr> <chr>   <dbl> <dbl>\n## 1 Alice english     2    82\n## 2 Alice math        5    65\n## 3 Bob   english     9    79\n## 4 Bob   math        8    77\n## 5 Carol english     5    85\n## 6 Carol math        6    96"},{"path":"tidyverse-dplyr.html","id":"修改列名-rename","chapter":"第 11 章 数据处理","heading":"11.6 修改列名 rename()","text":"用rename()修改列的名字, 具体方法是rename(.data, new_name = old_name)，和mutate()一样，等号左边是新的变量名，右边是已经存在的变量名（这是dplyr函数的第三个特征6）。比如，我们这里将total修改为total_score\n","code":"\ndf_new %>% \n  select(name, type, total) %>% \n  rename(total_score = total)## # A tibble: 6 × 3\n##   name  type    total_score\n##   <chr> <chr>         <dbl>\n## 1 Alice english          82\n## 2 Alice math             65\n## 3 Bob   english          79\n## 4 Bob   math             77\n## 5 Carol english          85\n## 6 Carol math             96"},{"path":"tidyverse-dplyr.html","id":"筛选-filter","chapter":"第 11 章 数据处理","heading":"11.7 筛选 filter()","text":"前面select()是列方向的选择，而用filter()函数，我们可以对数据框行方向进行筛选，选出符合特定条件的某些行。注意，这里filter()函数不是字面上“过滤掉”的意思，而是保留符合条件的行，也就说keep，不是drop的意思。 第一次会有一点点迷惑，我相信习惯就好了。比如这里把成绩等于90分的同学筛选出来 。注意，这里判断是否相等要使用 == 而不是 =R提供了其他比较关系的算符: <, >, <=, >=, == (equal), != (equal), %%, .na() 和 !.na() .比如把成绩大于等于80分的同学筛选出来也可以限定多个条件进行筛选, 比如，限定英语学科，同时要求成绩高于75分的所有条目筛选出来也就说，逗号分隔的两个条件都要满足。","code":"\ndf_new %>% filter(score = 90)## Error in `filter()`:\n## ! We detected a named input.\n## ℹ This usually means that you've used `=` instead of `==`.\n## ℹ Did you mean `score == 90`?\ndf_new %>% filter(score == 90)## # A tibble: 1 × 5\n##   name  type  score extra total\n##   <chr> <chr> <dbl> <dbl> <dbl>\n## 1 Carol math     90     6    96\ndf_new %>% filter(score >= 80)## # A tibble: 3 × 5\n##   name  type    score extra total\n##   <chr> <chr>   <dbl> <dbl> <dbl>\n## 1 Alice english    80     2    82\n## 2 Carol english    80     5    85\n## 3 Carol math       90     6    96\ndf_new %>% filter(type == \"english\", score >= 75)## # A tibble: 2 × 5\n##   name  type    score extra total\n##   <chr> <chr>   <dbl> <dbl> <dbl>\n## 1 Alice english    80     2    82\n## 2 Carol english    80     5    85"},{"path":"tidyverse-dplyr.html","id":"常见的错误","chapter":"第 11 章 数据处理","heading":"11.7.1 常见的错误","text":"filter()函数两个常见的错误:把 “=” 误认为 “==”忘记引号","code":"\ndf_new %>% filter(type = \"english\")   # error\ndf_new %>% filter(type == \"english\")\ndf_new %>% filter(type == english)   # error\ndf_new %>% filter(type == \"english\")"},{"path":"tidyverse-dplyr.html","id":"逻辑算符","chapter":"第 11 章 数据处理","heading":"11.7.2 逻辑算符","text":"多个参数的情形，本质上是逻辑与的关系，每个条件都返回TRUE当然也可以使用其他的布尔算符 (& “,” | “,” ! “.”).比如，以下代码找出成绩等于70或者等于90的行在filter()中有一个非常有效的等价方法，即使用 x %% y，意思是如果当前x的值是向量y的一员，那么就选出当前行，因此，我们可以重写上面代码:当然还可以配合一些函数使用，比如把最高分的同学找出来把成绩高于均值的找出来","code":"\ndf_new %>% filter(type == \"english\" & score >= 75)## # A tibble: 2 × 5\n##   name  type    score extra total\n##   <chr> <chr>   <dbl> <dbl> <dbl>\n## 1 Alice english    80     2    82\n## 2 Carol english    80     5    85\ndf_new %>% filter(score == 70 | score == 90)## # A tibble: 2 × 5\n##   name  type    score extra total\n##   <chr> <chr>   <dbl> <dbl> <dbl>\n## 1 Bob   english    70     9    79\n## 2 Carol math       90     6    96\ndf_new %>% filter(score %in% c(70, 90))## # A tibble: 2 × 5\n##   name  type    score extra total\n##   <chr> <chr>   <dbl> <dbl> <dbl>\n## 1 Bob   english    70     9    79\n## 2 Carol math       90     6    96\ndf_new %>% filter(score == max(score))## # A tibble: 1 × 5\n##   name  type  score extra total\n##   <chr> <chr> <dbl> <dbl> <dbl>\n## 1 Carol math     90     6    96\ndf_new %>% filter(score > mean(score))## # A tibble: 3 × 5\n##   name  type    score extra total\n##   <chr> <chr>   <dbl> <dbl> <dbl>\n## 1 Alice english    80     2    82\n## 2 Carol english    80     5    85\n## 3 Carol math       90     6    96"},{"path":"tidyverse-dplyr.html","id":"统计汇总-summarise","chapter":"第 11 章 数据处理","heading":"11.8 统计汇总 summarise()","text":"summarise()函数非常强大，主要用于统计汇总，往往与其他函数配合使用，比如计算所有同学考试成绩的均值 计算所有同学的考试成绩的标准差还可以同时完成多个统计summarise() 与 mutate() 一样，也是创建新的变量（新的一列），仍然遵循等号左边是新的列名，等号右边是基于原变量的统计。\n区别在于，mutate()是在原数据框的基础上增加新的一列；而summarise()在成立的新的数据框中创建一列。","code":"\ndf_new %>% summarise(mean_score = mean(score))## # A tibble: 1 × 1\n##   mean_score\n##        <dbl>\n## 1       74.8\ndf_new %>% summarise( sd_score = sd(score))## # A tibble: 1 × 1\n##   sd_score\n##      <dbl>\n## 1     10.6\ndf_new %>% summarise(\n  mean_score   = mean(score),\n  median_score = median(score),\n  n            = n(),\n  sum          = sum(score)\n)## # A tibble: 1 × 4\n##   mean_score median_score     n   sum\n##        <dbl>        <dbl> <int> <dbl>\n## 1       74.8           75     6   449"},{"path":"tidyverse-dplyr.html","id":"分组统计-group_by","chapter":"第 11 章 数据处理","heading":"11.9 分组统计 group_by()","text":"实际运用中，summarise()函数往往配合group_by()一起使用，即，先分组再统计。比如，我们想统计每个学生的平均成绩，那么就需要先按照学生name分组，然后每组求平均 ","code":"\ndf_new %>%\n  group_by(name) %>%\n  summarise(\n    mean_score = mean(total),\n    sd_score   = sd(total)\n  )## # A tibble: 3 × 3\n##   name  mean_score sd_score\n##   <chr>      <dbl>    <dbl>\n## 1 Alice       73.5    12.0 \n## 2 Bob         78       1.41\n## 3 Carol       90.5     7.78"},{"path":"tidyverse-dplyr.html","id":"排序-arrange","chapter":"第 11 章 数据处理","heading":"11.10 排序 arrange()","text":"arrange()这个很好理解的，就是按照某个变量排序。比如我们按照考试总成绩从低到高排序，然后输出 默认情况是从小到大排序，如果从高到低降序排序呢，有两种方法，第一种方法是在用于排序的变量前面加 - 号，第二种方法可读性更强些，需要使用desc()函数也可对多个变量依次排序。比如，我们先按学科类型排序，然后按照成绩从高到底降序排列","code":"\ndf_new %>% arrange(total)## # A tibble: 6 × 5\n##   name  type    score extra total\n##   <chr> <chr>   <dbl> <dbl> <dbl>\n## 1 Alice math       60     5    65\n## 2 Bob   math       69     8    77\n## 3 Bob   english    70     9    79\n## 4 Alice english    80     2    82\n## 5 Carol english    80     5    85\n## 6 Carol math       90     6    96\ndf_new %>% arrange(-total)## # A tibble: 6 × 5\n##   name  type    score extra total\n##   <chr> <chr>   <dbl> <dbl> <dbl>\n## 1 Carol math       90     6    96\n## 2 Carol english    80     5    85\n## 3 Alice english    80     2    82\n## 4 Bob   english    70     9    79\n## 5 Bob   math       69     8    77\n## 6 Alice math       60     5    65\ndf_new %>% arrange(desc(total))## # A tibble: 6 × 5\n##   name  type    score extra total\n##   <chr> <chr>   <dbl> <dbl> <dbl>\n## 1 Carol math       90     6    96\n## 2 Carol english    80     5    85\n## 3 Alice english    80     2    82\n## 4 Bob   english    70     9    79\n## 5 Bob   math       69     8    77\n## 6 Alice math       60     5    65\ndf_new %>% \n  arrange(type, desc(total))## # A tibble: 6 × 5\n##   name  type    score extra total\n##   <chr> <chr>   <dbl> <dbl> <dbl>\n## 1 Carol english    80     5    85\n## 2 Alice english    80     2    82\n## 3 Bob   english    70     9    79\n## 4 Carol math       90     6    96\n## 5 Bob   math       69     8    77\n## 6 Alice math       60     5    65"},{"path":"tidyverse-dplyr.html","id":"左联结-left_join","chapter":"第 11 章 数据处理","heading":"11.11 左联结 left_join()","text":"实际操作中，也会遇到数据框合并的情形。假定我们已经统计了每个同学的平均成绩，存放在df1现在我们又有新一个数据框df2，它包含一些同学的年龄信息可以使用 left_join()函数 把两个数据框df1和df2合并连接在一起。这两个数据框是通过姓名name连接的，因此需要指定by = \"name\"，代码如下用管道 %>%写，可读性更强大家注意到最后一行Carol的年龄是NA， 大家想想为什么呢？","code":"\ndf1 <- df_new %>% \n  group_by(name) %>% \n  summarise( \n    mean_score = mean(total) \n  )\ndf1## # A tibble: 3 × 2\n##   name  mean_score\n##   <chr>      <dbl>\n## 1 Alice       73.5\n## 2 Bob         78  \n## 3 Carol       90.5\ndf2 <- tibble(\n      name = c(\"Alice\", \"Bob\", \"Dave\"),\n      age =  c(12, 13, 14)\n)\ndf2## # A tibble: 3 × 2\n##   name    age\n##   <chr> <dbl>\n## 1 Alice    12\n## 2 Bob      13\n## 3 Dave     14\nleft_join(df1, df2, by = \"name\")## # A tibble: 3 × 3\n##   name  mean_score   age\n##   <chr>      <dbl> <dbl>\n## 1 Alice       73.5    12\n## 2 Bob         78      13\n## 3 Carol       90.5    NA\n# using %>%\ndf1 %>% left_join(df2, by = \"name\")## # A tibble: 3 × 3\n##   name  mean_score   age\n##   <chr>      <dbl> <dbl>\n## 1 Alice       73.5    12\n## 2 Bob         78      13\n## 3 Carol       90.5    NA"},{"path":"tidyverse-dplyr.html","id":"右联结-right_join","chapter":"第 11 章 数据处理","heading":"11.12 右联结 right_join()","text":"我们再试试right_join() Carol同学的信息没有显示？ Dave 同学显示了但没有考试成绩？大家想想又为什么呢？事实上，答案就在函数的名字上，left_join()是左联结，即以左边数据框df1中的学生姓名name为准，在右边数据框df2里，有Alice和Bob的年龄，那么就对应联结过来，没有Carol的年龄，自然就为缺失值NA。right_join()是右联结，要以右边数据框df2中的学生姓名name为准，即Alice，Bob和Dave，而df1只有Alice和Bob的信息，没有Dave的信息，因此Dave对应的成绩为NA。","code":"\ndf1 %>% dplyr::right_join(df2, by = \"name\")## # A tibble: 3 × 3\n##   name  mean_score   age\n##   <chr>      <dbl> <dbl>\n## 1 Alice       73.5    12\n## 2 Bob         78      13\n## 3 Dave        NA      14"},{"path":"tidyverse-dplyr.html","id":"满联结-full_join","chapter":"第 11 章 数据处理","heading":"11.13 满联结 full_join()","text":"有时候，我们不想丢失项，可以使用full_join()，该函数确保条目是完整的，信息缺失的地方为NA。 ","code":"\ndf1 %>% full_join(df2, by = \"name\")## # A tibble: 4 × 3\n##   name  mean_score   age\n##   <chr>      <dbl> <dbl>\n## 1 Alice       73.5    12\n## 2 Bob         78      13\n## 3 Carol       90.5    NA\n## 4 Dave        NA      14"},{"path":"tidyverse-dplyr.html","id":"内联结inner_join","chapter":"第 11 章 数据处理","heading":"11.14 内联结inner_join()","text":"只保留name条目相同地记录","code":"\ndf1 %>% inner_join(df2, by = \"name\")## # A tibble: 2 × 3\n##   name  mean_score   age\n##   <chr>      <dbl> <dbl>\n## 1 Alice       73.5    12\n## 2 Bob         78      13"},{"path":"tidyverse-dplyr.html","id":"筛选联结","chapter":"第 11 章 数据处理","heading":"11.15 筛选联结","text":"筛选联结，有两个semi_join(x, y)和anti_join(x, y)，函数不改变数据框x的变量的数量，主要影响的是x的观测，也就说会剔除一些行，其功能类似filter()半联结semi_join(x, y)，保留name与df2的name相一致的所有行可以看作对df1做筛选反联结anti_join(x, y)，丢弃name与df2的name相一致的所有行仍然可以看作对df1做筛选","code":"\ndf1 %>% semi_join(df2, by = \"name\")## # A tibble: 2 × 2\n##   name  mean_score\n##   <chr>      <dbl>\n## 1 Alice       73.5\n## 2 Bob         78\ndf1 %>% filter(\n  name %in% df2$name\n)## # A tibble: 2 × 2\n##   name  mean_score\n##   <chr>      <dbl>\n## 1 Alice       73.5\n## 2 Bob         78\ndf1 %>% anti_join(df2, by = \"name\")## # A tibble: 1 × 2\n##   name  mean_score\n##   <chr>      <dbl>\n## 1 Carol       90.5\ndf1 %>% filter(\n ! name %in% df2$name\n)## # A tibble: 1 × 2\n##   name  mean_score\n##   <chr>      <dbl>\n## 1 Carol       90.5"},{"path":"tidyverse-dplyr.html","id":"习题-4","chapter":"第 11 章 数据处理","heading":"11.16 习题","text":"1、总结 dplyr 系列函数的三个特征。2、用本章中的数据框df运行以下代码，然后理解代码含义。3、 统计每位同学成绩高于75分的科目数4、运行以下代码，比较差异在什么地方。5、排序，要求按照score从大往小排，但希望all是最下面一行。","code":"\ndf %>% \n  filter(score > mean(score))\ndf %>%\n  group_by(name) %>%\n  summarise(mean_score = mean(score))\ndf %>%\n  group_by(name) %>%\n  mutate(mean_score = mean(score))## # A tibble: 6 × 2\n##   name  score\n##   <chr> <dbl>\n## 1 a1        2\n## 2 a2        5\n## 3 a3        3\n## 4 a4        7\n## 5 a5        6\n## 6 all      23"},{"path":"tidyverse-dplyr.html","id":"延伸阅读","chapter":"第 11 章 数据处理","heading":"11.17 延伸阅读","text":"推荐https://dplyr.tidyverse.org/.cheatsheethttps://tidydatatutor.com/vis.html作业：读懂并运行下面的代码","code":""},{"path":"tidyverse-dplyr-apply.html","id":"tidyverse-dplyr-apply","chapter":"第 12 章 dplyr进阶","heading":"第 12 章 dplyr进阶","text":"本章主要关注dplyr的一些应用。","code":""},{"path":"tidyverse-dplyr-apply.html","id":"导入数据","chapter":"第 12 章 dplyr进阶","heading":"12.1 导入数据","text":"今天讲一个关于企鹅的数据故事。","code":"\nlibrary(tidyverse)\nlibrary(palmerpenguins)\n\npenguins <- penguins %>% drop_na()"},{"path":"tidyverse-dplyr-apply.html","id":"变量含义","chapter":"第 12 章 dplyr进阶","heading":"12.2 变量含义","text":"","code":""},{"path":"tidyverse-dplyr-apply.html","id":"简单回顾","chapter":"第 12 章 dplyr进阶","heading":"12.3 简单回顾","text":"","code":""},{"path":"tidyverse-dplyr-apply.html","id":"选择bill_开始的列","chapter":"第 12 章 dplyr进阶","heading":"12.3.1 选择”bill_“开始的列","text":"","code":"\npenguins %>% select(bill_length_mm, bill_depth_mm)\npenguins %>% select(starts_with(\"bill_\"))## # A tibble: 333 × 2\n##    bill_length_mm bill_depth_mm\n##             <dbl>         <dbl>\n##  1           39.1          18.7\n##  2           39.5          17.4\n##  3           40.3          18  \n##  4           36.7          19.3\n##  5           39.3          20.6\n##  6           38.9          17.8\n##  7           39.2          19.6\n##  8           41.1          17.6\n##  9           38.6          21.2\n## 10           34.6          21.1\n## # ℹ 323 more rows"},{"path":"tidyverse-dplyr-apply.html","id":"选择_mm结尾的列","chapter":"第 12 章 dplyr进阶","heading":"12.3.2 选择”_mm”结尾的列","text":"","code":"\npenguins %>% select(bill_length_mm, bill_depth_mm, flipper_length_mm)\npenguins %>% select(ends_with(\"_mm\"))## # A tibble: 333 × 3\n##    bill_length_mm bill_depth_mm flipper_length_mm\n##             <dbl>         <dbl>             <int>\n##  1           39.1          18.7               181\n##  2           39.5          17.4               186\n##  3           40.3          18                 195\n##  4           36.7          19.3               193\n##  5           39.3          20.6               190\n##  6           38.9          17.8               181\n##  7           39.2          19.6               195\n##  8           41.1          17.6               182\n##  9           38.6          21.2               191\n## 10           34.6          21.1               198\n## # ℹ 323 more rows"},{"path":"tidyverse-dplyr-apply.html","id":"选择含有length的列","chapter":"第 12 章 dplyr进阶","heading":"12.3.3 选择含有”length”的列","text":"","code":"\npenguins %>% select(bill_length_mm, flipper_length_mm)\npenguins %>% select(contains(\"length\"))## # A tibble: 333 × 2\n##    bill_length_mm flipper_length_mm\n##             <dbl>             <int>\n##  1           39.1               181\n##  2           39.5               186\n##  3           40.3               195\n##  4           36.7               193\n##  5           39.3               190\n##  6           38.9               181\n##  7           39.2               195\n##  8           41.1               182\n##  9           38.6               191\n## 10           34.6               198\n## # ℹ 323 more rows"},{"path":"tidyverse-dplyr-apply.html","id":"选择数值型的列","chapter":"第 12 章 dplyr进阶","heading":"12.3.4 选择数值型的列","text":"","code":"\npenguins %>% select(where(is.numeric))## # A tibble: 333 × 5\n##    bill_length_mm bill_depth_mm flipper_length_mm body_mass_g  year\n##             <dbl>         <dbl>             <int>       <int> <int>\n##  1           39.1          18.7               181        3750  2007\n##  2           39.5          17.4               186        3800  2007\n##  3           40.3          18                 195        3250  2007\n##  4           36.7          19.3               193        3450  2007\n##  5           39.3          20.6               190        3650  2007\n##  6           38.9          17.8               181        3625  2007\n##  7           39.2          19.6               195        4675  2007\n##  8           41.1          17.6               182        3200  2007\n##  9           38.6          21.2               191        3800  2007\n## 10           34.6          21.1               198        4400  2007\n## # ℹ 323 more rows"},{"path":"tidyverse-dplyr-apply.html","id":"选择字符串类型的列","chapter":"第 12 章 dplyr进阶","heading":"12.3.5 选择字符串类型的列","text":"","code":"\npenguins %>% select(where(is.character))## # A tibble: 333 × 0"},{"path":"tidyverse-dplyr-apply.html","id":"选择字符串类型以外的列","chapter":"第 12 章 dplyr进阶","heading":"12.3.6 选择字符串类型以外的列","text":"","code":"\npenguins %>% select(!where(is.character))## # A tibble: 333 × 8\n##    species island    bill_length_mm bill_depth_mm flipper_length_mm body_mass_g\n##    <fct>   <fct>              <dbl>         <dbl>             <int>       <int>\n##  1 Adelie  Torgersen           39.1          18.7               181        3750\n##  2 Adelie  Torgersen           39.5          17.4               186        3800\n##  3 Adelie  Torgersen           40.3          18                 195        3250\n##  4 Adelie  Torgersen           36.7          19.3               193        3450\n##  5 Adelie  Torgersen           39.3          20.6               190        3650\n##  6 Adelie  Torgersen           38.9          17.8               181        3625\n##  7 Adelie  Torgersen           39.2          19.6               195        4675\n##  8 Adelie  Torgersen           41.1          17.6               182        3200\n##  9 Adelie  Torgersen           38.6          21.2               191        3800\n## 10 Adelie  Torgersen           34.6          21.1               198        4400\n## # ℹ 323 more rows\n## # ℹ 2 more variables: sex <fct>, year <int>"},{"path":"tidyverse-dplyr-apply.html","id":"可以用多种组合来选择","chapter":"第 12 章 dplyr进阶","heading":"12.3.7 可以用多种组合来选择","text":"","code":"\npenguins %>% select(species, starts_with(\"bill_\"))## # A tibble: 333 × 3\n##    species bill_length_mm bill_depth_mm\n##    <fct>            <dbl>         <dbl>\n##  1 Adelie            39.1          18.7\n##  2 Adelie            39.5          17.4\n##  3 Adelie            40.3          18  \n##  4 Adelie            36.7          19.3\n##  5 Adelie            39.3          20.6\n##  6 Adelie            38.9          17.8\n##  7 Adelie            39.2          19.6\n##  8 Adelie            41.1          17.6\n##  9 Adelie            38.6          21.2\n## 10 Adelie            34.6          21.1\n## # ℹ 323 more rows"},{"path":"tidyverse-dplyr-apply.html","id":"返回向量还是数据框","chapter":"第 12 章 dplyr进阶","heading":"12.3.8 返回向量还是数据框","text":"对应数据框my_tibble， 注意返回向量还是数据框的区别返回向量返回数据框","code":"\nmy_tibble[[\"x\"]] \n\nmy_tibble$x \n\nmy_tibble %>% \n  pull(x)\nmy_tibble[\"x\"]\n\nmy_tibble %>% \n  select(x)"},{"path":"tidyverse-dplyr-apply.html","id":"选择全部为0的列","chapter":"第 12 章 dplyr进阶","heading":"12.3.9 选择全部为0的列","text":"课堂练习：剔除全部为NA的列","code":"\ntb <- tibble(\n  x = 1:5,\n  y = 0,\n  z = 5:1,\n  w = 0\n)\ntb## # A tibble: 5 × 4\n##       x     y     z     w\n##   <int> <dbl> <int> <dbl>\n## 1     1     0     5     0\n## 2     2     0     4     0\n## 3     3     0     3     0\n## 4     4     0     2     0\n## 5     5     0     1     0\nmyfun <- function(x) sum(x) == 0\ntb %>%\n  select(where(myfun))## # A tibble: 5 × 2\n##       y     w\n##   <dbl> <dbl>\n## 1     0     0\n## 2     0     0\n## 3     0     0\n## 4     0     0\n## 5     0     0\n# or\ntb %>%\n  select(where(~sum(.x) == 0))## # A tibble: 5 × 2\n##       y     w\n##   <dbl> <dbl>\n## 1     0     0\n## 2     0     0\n## 3     0     0\n## 4     0     0\n## 5     0     0\ndf <- tibble(\n  x = c(NA, NA, NA),\n  y = c(2, 3, NA),\n  z = c(NA, 5, NA)\n)\n\n\ndf %>%\n  select(where(~ !all(is.na(.x))))## # A tibble: 3 × 2\n##       y     z\n##   <dbl> <dbl>\n## 1     2    NA\n## 2     3     5\n## 3    NA    NA\n# or\ndf %>%\n  filter(\n    if_any(everything(), ~ !is.na(.x))\n  )## # A tibble: 2 × 3\n##   x         y     z\n##   <lgl> <dbl> <dbl>\n## 1 NA        2    NA\n## 2 NA        3     5"},{"path":"tidyverse-dplyr-apply.html","id":"寻找男企鹅","chapter":"第 12 章 dplyr进阶","heading":"12.3.10 寻找男企鹅","text":"函数 filter() 中的逻辑运算符课堂练习，说出以下代码的含义","code":"\npenguins %>% filter(sex == \"male\")## # A tibble: 168 × 8\n##    species island    bill_length_mm bill_depth_mm flipper_length_mm body_mass_g\n##    <fct>   <fct>              <dbl>         <dbl>             <int>       <int>\n##  1 Adelie  Torgersen           39.1          18.7               181        3750\n##  2 Adelie  Torgersen           39.3          20.6               190        3650\n##  3 Adelie  Torgersen           39.2          19.6               195        4675\n##  4 Adelie  Torgersen           38.6          21.2               191        3800\n##  5 Adelie  Torgersen           34.6          21.1               198        4400\n##  6 Adelie  Torgersen           42.5          20.7               197        4500\n##  7 Adelie  Torgersen           46            21.5               194        4200\n##  8 Adelie  Biscoe              37.7          18.7               180        3600\n##  9 Adelie  Biscoe              38.2          18.1               185        3950\n## 10 Adelie  Biscoe              38.8          17.2               180        3800\n## # ℹ 158 more rows\n## # ℹ 2 more variables: sex <fct>, year <int>\npenguins %>% filter(species %in% c(\"Adelie\", \"Gentoo\"))## # A tibble: 265 × 8\n##    species island    bill_length_mm bill_depth_mm flipper_length_mm body_mass_g\n##    <fct>   <fct>              <dbl>         <dbl>             <int>       <int>\n##  1 Adelie  Torgersen           39.1          18.7               181        3750\n##  2 Adelie  Torgersen           39.5          17.4               186        3800\n##  3 Adelie  Torgersen           40.3          18                 195        3250\n##  4 Adelie  Torgersen           36.7          19.3               193        3450\n##  5 Adelie  Torgersen           39.3          20.6               190        3650\n##  6 Adelie  Torgersen           38.9          17.8               181        3625\n##  7 Adelie  Torgersen           39.2          19.6               195        4675\n##  8 Adelie  Torgersen           41.1          17.6               182        3200\n##  9 Adelie  Torgersen           38.6          21.2               191        3800\n## 10 Adelie  Torgersen           34.6          21.1               198        4400\n## # ℹ 255 more rows\n## # ℹ 2 more variables: sex <fct>, year <int>\npenguins %>%\n  filter(species == \"Adelie\" &  bill_length_mm > 40)## # A tibble: 50 × 8\n##    species island    bill_length_mm bill_depth_mm flipper_length_mm body_mass_g\n##    <fct>   <fct>              <dbl>         <dbl>             <int>       <int>\n##  1 Adelie  Torgersen           40.3          18                 195        3250\n##  2 Adelie  Torgersen           41.1          17.6               182        3200\n##  3 Adelie  Torgersen           42.5          20.7               197        4500\n##  4 Adelie  Torgersen           46            21.5               194        4200\n##  5 Adelie  Biscoe              40.6          18.6               183        3550\n##  6 Adelie  Biscoe              40.5          17.9               187        3200\n##  7 Adelie  Biscoe              40.5          18.9               180        3950\n##  8 Adelie  Dream               40.9          18.9               184        3900\n##  9 Adelie  Dream               42.2          18.5               180        3550\n## 10 Adelie  Dream               40.8          18.4               195        3900\n## # ℹ 40 more rows\n## # ℹ 2 more variables: sex <fct>, year <int>\npenguins %>%\n  filter(species == \"Adelie\", bill_length_mm > 40)## # A tibble: 50 × 8\n##    species island    bill_length_mm bill_depth_mm flipper_length_mm body_mass_g\n##    <fct>   <fct>              <dbl>         <dbl>             <int>       <int>\n##  1 Adelie  Torgersen           40.3          18                 195        3250\n##  2 Adelie  Torgersen           41.1          17.6               182        3200\n##  3 Adelie  Torgersen           42.5          20.7               197        4500\n##  4 Adelie  Torgersen           46            21.5               194        4200\n##  5 Adelie  Biscoe              40.6          18.6               183        3550\n##  6 Adelie  Biscoe              40.5          17.9               187        3200\n##  7 Adelie  Biscoe              40.5          18.9               180        3950\n##  8 Adelie  Dream               40.9          18.9               184        3900\n##  9 Adelie  Dream               42.2          18.5               180        3550\n## 10 Adelie  Dream               40.8          18.4               195        3900\n## # ℹ 40 more rows\n## # ℹ 2 more variables: sex <fct>, year <int>\npenguins %>%\n  filter(species == \"Adelie\", bill_length_mm == max(bill_length_mm) )"},{"path":"tidyverse-dplyr-apply.html","id":"更多应用","chapter":"第 12 章 dplyr进阶","heading":"12.4 更多应用","text":"希望介绍一个技术，对应一个应用场景","code":""},{"path":"tidyverse-dplyr-apply.html","id":"弱水三千只取一瓢","chapter":"第 12 章 dplyr进阶","heading":"12.4.1 弱水三千，只取一瓢","text":"","code":"\npenguins %>% \n  head()## # A tibble: 6 × 8\n##   species island    bill_length_mm bill_depth_mm flipper_length_mm body_mass_g\n##   <fct>   <fct>              <dbl>         <dbl>             <int>       <int>\n## 1 Adelie  Torgersen           39.1          18.7               181        3750\n## 2 Adelie  Torgersen           39.5          17.4               186        3800\n## 3 Adelie  Torgersen           40.3          18                 195        3250\n## 4 Adelie  Torgersen           36.7          19.3               193        3450\n## 5 Adelie  Torgersen           39.3          20.6               190        3650\n## 6 Adelie  Torgersen           38.9          17.8               181        3625\n## # ℹ 2 more variables: sex <fct>, year <int>\npenguins %>% \n  tail()## # A tibble: 6 × 8\n##   species   island bill_length_mm bill_depth_mm flipper_length_mm body_mass_g\n##   <fct>     <fct>           <dbl>         <dbl>             <int>       <int>\n## 1 Chinstrap Dream            45.7          17                 195        3650\n## 2 Chinstrap Dream            55.8          19.8               207        4000\n## 3 Chinstrap Dream            43.5          18.1               202        3400\n## 4 Chinstrap Dream            49.6          18.2               193        3775\n## 5 Chinstrap Dream            50.8          19                 210        4100\n## 6 Chinstrap Dream            50.2          18.7               198        3775\n## # ℹ 2 more variables: sex <fct>, year <int>\npenguins %>% \n  slice(1)## # A tibble: 1 × 8\n##   species island    bill_length_mm bill_depth_mm flipper_length_mm body_mass_g\n##   <fct>   <fct>              <dbl>         <dbl>             <int>       <int>\n## 1 Adelie  Torgersen           39.1          18.7               181        3750\n## # ℹ 2 more variables: sex <fct>, year <int>\npenguins %>% \n  group_by(species) %>% \n  slice(1)## # A tibble: 3 × 8\n## # Groups:   species [3]\n##   species   island    bill_length_mm bill_depth_mm flipper_length_mm body_mass_g\n##   <fct>     <fct>              <dbl>         <dbl>             <int>       <int>\n## 1 Adelie    Torgersen           39.1          18.7               181        3750\n## 2 Chinstrap Dream               46.5          17.9               192        3500\n## 3 Gentoo    Biscoe              46.1          13.2               211        4500\n## # ℹ 2 more variables: sex <fct>, year <int>"},{"path":"tidyverse-dplyr-apply.html","id":"嘴峰长度最大那一行","chapter":"第 12 章 dplyr进阶","heading":"12.4.2 嘴峰长度最大那一行","text":"三种方法","code":"\npenguins %>%\n  filter(bill_length_mm == max(bill_length_mm) )## # A tibble: 1 × 8\n##   species island bill_length_mm bill_depth_mm flipper_length_mm body_mass_g\n##   <fct>   <fct>           <dbl>         <dbl>             <int>       <int>\n## 1 Gentoo  Biscoe           59.6            17               230        6050\n## # ℹ 2 more variables: sex <fct>, year <int>\npenguins %>% \n  arrange(desc(bill_length_mm)) %>% \n  slice(1)## # A tibble: 1 × 8\n##   species island bill_length_mm bill_depth_mm flipper_length_mm body_mass_g\n##   <fct>   <fct>           <dbl>         <dbl>             <int>       <int>\n## 1 Gentoo  Biscoe           59.6            17               230        6050\n## # ℹ 2 more variables: sex <fct>, year <int>\npenguins %>% \n  slice_max(bill_length_mm)## # A tibble: 1 × 8\n##   species island bill_length_mm bill_depth_mm flipper_length_mm body_mass_g\n##   <fct>   <fct>           <dbl>         <dbl>             <int>       <int>\n## 1 Gentoo  Biscoe           59.6            17               230        6050\n## # ℹ 2 more variables: sex <fct>, year <int>"},{"path":"tidyverse-dplyr-apply.html","id":"separate","chapter":"第 12 章 dplyr进阶","heading":"12.4.3 separate","text":"","code":"\ntb <- tibble::tribble(\n  ~day, ~price,\n  1,   \"30-45\",\n  2,   \"40-95\",\n  3,   \"89-65\",\n  4,   \"45-63\",\n  5,   \"52-42\"\n)\ntb1 <- tb %>% \n  separate(price, into = c(\"low\", \"high\"), sep = \"-\")\ntb1## # A tibble: 5 × 3\n##     day low   high \n##   <dbl> <chr> <chr>\n## 1     1 30    45   \n## 2     2 40    95   \n## 3     3 89    65   \n## 4     4 45    63   \n## 5     5 52    42"},{"path":"tidyverse-dplyr-apply.html","id":"unite","chapter":"第 12 章 dplyr进阶","heading":"12.4.4 unite","text":"","code":"\ntb1 %>% \n  unite(col = \"price\", c(low, high), sep = \":\", remove = FALSE)## # A tibble: 5 × 4\n##     day price low   high \n##   <dbl> <chr> <chr> <chr>\n## 1     1 30:45 30    45   \n## 2     2 40:95 40    95   \n## 3     3 89:65 89    65   \n## 4     4 45:63 45    63   \n## 5     5 52:42 52    42"},{"path":"tidyverse-dplyr-apply.html","id":"distinct","chapter":"第 12 章 dplyr进阶","heading":"12.4.5 distinct","text":"distinct()处理的对象是data.frame；功能是筛选不重复的row；返回data.framen_distinct()处理的对象是vector；功能是统计不同的元素有多少个；返回一个数值","code":"\ndf <- tibble::tribble(\n  ~x, ~y, ~z,\n  1, 1, 1,\n  1, 1, 2,\n  1, 1, 1,\n  2, 1, 2,\n  2, 2, 3,\n  3, 3, 1\n)\ndf## # A tibble: 6 × 3\n##       x     y     z\n##   <dbl> <dbl> <dbl>\n## 1     1     1     1\n## 2     1     1     2\n## 3     1     1     1\n## 4     2     1     2\n## 5     2     2     3\n## 6     3     3     1\ndf %>%\n  distinct()## # A tibble: 5 × 3\n##       x     y     z\n##   <dbl> <dbl> <dbl>\n## 1     1     1     1\n## 2     1     1     2\n## 3     2     1     2\n## 4     2     2     3\n## 5     3     3     1\ndf %>%\n  distinct(x)## # A tibble: 3 × 1\n##       x\n##   <dbl>\n## 1     1\n## 2     2\n## 3     3\ndf %>%\n  distinct(x, y)## # A tibble: 4 × 2\n##       x     y\n##   <dbl> <dbl>\n## 1     1     1\n## 2     2     1\n## 3     2     2\n## 4     3     3\ndf %>%\n  distinct(x, y, .keep_all = TRUE) # 只保留最先出现的row## # A tibble: 4 × 3\n##       x     y     z\n##   <dbl> <dbl> <dbl>\n## 1     1     1     1\n## 2     2     1     2\n## 3     2     2     3\n## 4     3     3     1\ndf %>%\n  distinct(\n    across(c(x, y)),\n    .keep_all = TRUE\n  )\ndf %>%\n  group_by(x) %>%\n  distinct(y, .keep_all = TRUE)## # A tibble: 4 × 3\n## # Groups:   x [3]\n##       x     y     z\n##   <dbl> <dbl> <dbl>\n## 1     1     1     1\n## 2     2     1     2\n## 3     2     2     3\n## 4     3     3     1\nc(1, 1, 1, 2, 2, 1, 3, 3) %>% n_distinct()## [1] 3\ndf$z %>% n_distinct()## [1] 3\ndf %>%\n  group_by(x) %>%\n  summarise(\n    n = n_distinct(z)\n  )## # A tibble: 3 × 2\n##       x     n\n##   <dbl> <int>\n## 1     1     2\n## 2     2     2\n## 3     3     1"},{"path":"tidyverse-dplyr-apply.html","id":"有关na的计算","chapter":"第 12 章 dplyr进阶","heading":"12.4.6 有关NA的计算","text":"NA很讨厌，凡是它参与的四则运算，结果都是NA，所以需要事先把它删除，增加参数说明 na.rm = TRUE","code":"\nsum(c(1, 2, NA, 4))## [1] NA\nsum(c(1, 2, NA, 4), na.rm = TRUE)## [1] 7\nmean(c(1, 2, NA, 4), na.rm = TRUE)## [1] 2.333333"},{"path":"tidyverse-dplyr-apply.html","id":"寻找企鹅中的胖子","chapter":"第 12 章 dplyr进阶","heading":"12.4.7 寻找企鹅中的胖子","text":"随堂练习：用考试成绩的均值代替缺失值","code":"\npenguins %>% \n  mutate(\n    body = if_else(body_mass_g > 4200, \"you are fat\", \"you are fine\")\n)## # A tibble: 333 × 9\n##    species island    bill_length_mm bill_depth_mm flipper_length_mm body_mass_g\n##    <fct>   <fct>              <dbl>         <dbl>             <int>       <int>\n##  1 Adelie  Torgersen           39.1          18.7               181        3750\n##  2 Adelie  Torgersen           39.5          17.4               186        3800\n##  3 Adelie  Torgersen           40.3          18                 195        3250\n##  4 Adelie  Torgersen           36.7          19.3               193        3450\n##  5 Adelie  Torgersen           39.3          20.6               190        3650\n##  6 Adelie  Torgersen           38.9          17.8               181        3625\n##  7 Adelie  Torgersen           39.2          19.6               195        4675\n##  8 Adelie  Torgersen           41.1          17.6               182        3200\n##  9 Adelie  Torgersen           38.6          21.2               191        3800\n## 10 Adelie  Torgersen           34.6          21.1               198        4400\n## # ℹ 323 more rows\n## # ℹ 3 more variables: sex <fct>, year <int>, body <chr>\ndf <- tibble::tribble(\n    ~name,     ~type, ~score,\n  \"Alice\", \"english\",    80,\n  \"Alice\",    \"math\",    NA,\n    \"Bob\", \"english\",    70,\n    \"Bob\",    \"math\",    69,\n  \"Carol\", \"english\",    NA,\n  \"Carol\",    \"math\",    90\n  )\ndf## # A tibble: 6 × 3\n##   name  type    score\n##   <chr> <chr>   <dbl>\n## 1 Alice english    80\n## 2 Alice math       NA\n## 3 Bob   english    70\n## 4 Bob   math       69\n## 5 Carol english    NA\n## 6 Carol math       90\ndf %>% \n  group_by(type) %>% \n  mutate(mean_score = mean(score, na.rm = TRUE)) %>% \n  mutate(newscore = if_else(is.na(score), mean_score, score))## # A tibble: 6 × 5\n## # Groups:   type [2]\n##   name  type    score mean_score newscore\n##   <chr> <chr>   <dbl>      <dbl>    <dbl>\n## 1 Alice english    80       75       80  \n## 2 Alice math       NA       79.5     79.5\n## 3 Bob   english    70       75       70  \n## 4 Bob   math       69       79.5     69  \n## 5 Carol english    NA       75       75  \n## 6 Carol math       90       79.5     90"},{"path":"tidyverse-dplyr-apply.html","id":"给企鹅身材分类","chapter":"第 12 章 dplyr进阶","heading":"12.4.8 给企鹅身材分类","text":"随堂练习：按嘴峰长度分成A, B, C, D 4个等级","code":"\npenguins %>% \n  mutate(\n   body = case_when(\n     body_mass_g < 3500                       ~ \"best\",\n     body_mass_g >= 3500 & body_mass_g < 4500 ~ \"good\",\n     body_mass_g >= 4500 & body_mass_g < 5500 ~ \"general\",\n     TRUE                                     ~ \"other\"\n  )\n)## # A tibble: 333 × 9\n##    species island    bill_length_mm bill_depth_mm flipper_length_mm body_mass_g\n##    <fct>   <fct>              <dbl>         <dbl>             <int>       <int>\n##  1 Adelie  Torgersen           39.1          18.7               181        3750\n##  2 Adelie  Torgersen           39.5          17.4               186        3800\n##  3 Adelie  Torgersen           40.3          18                 195        3250\n##  4 Adelie  Torgersen           36.7          19.3               193        3450\n##  5 Adelie  Torgersen           39.3          20.6               190        3650\n##  6 Adelie  Torgersen           38.9          17.8               181        3625\n##  7 Adelie  Torgersen           39.2          19.6               195        4675\n##  8 Adelie  Torgersen           41.1          17.6               182        3200\n##  9 Adelie  Torgersen           38.6          21.2               191        3800\n## 10 Adelie  Torgersen           34.6          21.1               198        4400\n## # ℹ 323 more rows\n## # ℹ 3 more variables: sex <fct>, year <int>, body <chr>\npenguins %>% \n  mutate(\n    degree = case_when(\n      bill_length_mm < 35                        ~ \"A\",\n      bill_length_mm >= 35 & bill_length_mm < 45 ~ \"B\",\n      bill_length_mm >= 45 & bill_length_mm < 55 ~ \"C\",\n      TRUE                                       ~ \"D\"\n  )\n)## # A tibble: 333 × 9\n##    species island    bill_length_mm bill_depth_mm flipper_length_mm body_mass_g\n##    <fct>   <fct>              <dbl>         <dbl>             <int>       <int>\n##  1 Adelie  Torgersen           39.1          18.7               181        3750\n##  2 Adelie  Torgersen           39.5          17.4               186        3800\n##  3 Adelie  Torgersen           40.3          18                 195        3250\n##  4 Adelie  Torgersen           36.7          19.3               193        3450\n##  5 Adelie  Torgersen           39.3          20.6               190        3650\n##  6 Adelie  Torgersen           38.9          17.8               181        3625\n##  7 Adelie  Torgersen           39.2          19.6               195        4675\n##  8 Adelie  Torgersen           41.1          17.6               182        3200\n##  9 Adelie  Torgersen           38.6          21.2               191        3800\n## 10 Adelie  Torgersen           34.6          21.1               198        4400\n## # ℹ 323 more rows\n## # ℹ 3 more variables: sex <fct>, year <int>, degree <chr>"},{"path":"tidyverse-dplyr-apply.html","id":"每种类型企鹅有多少只","chapter":"第 12 章 dplyr进阶","heading":"12.4.9 每种类型企鹅有多少只？","text":"知识点：n()函数，统计当前分组数据框的行数统计某个变量中各组出现的次数，可以使用count()函数不同性别的企鹅各有多少可以统计不同组合出现的次数可以在count()里构建新变量，并利用这个新变量完成统计。\n比如，统计嘴巴长度大于40的企鹅个数常规做法count()做法解析思路：bill_length_mm > 40 比较算符 返回逻辑型向量，向量里面只有TRUR和FALSE两种值，因此上面的代码相当于统计TRUE有多少个，FALSE有多少个？","code":"\npenguins %>%\n  summarise(\n    n = n()\n  ) ## # A tibble: 1 × 1\n##       n\n##   <int>\n## 1   333\npenguins %>%\n  group_by(species) %>%\n  summarise(\n    n = n()\n  )## # A tibble: 3 × 2\n##   species       n\n##   <fct>     <int>\n## 1 Adelie      146\n## 2 Chinstrap    68\n## 3 Gentoo      119\npenguins %>% count(species)## # A tibble: 3 × 2\n##   species       n\n##   <fct>     <int>\n## 1 Adelie      146\n## 2 Chinstrap    68\n## 3 Gentoo      119\npenguins %>% count(sex, sort = TRUE)## # A tibble: 2 × 2\n##   sex        n\n##   <fct>  <int>\n## 1 male     168\n## 2 female   165\npenguins %>% count(island, species)## # A tibble: 5 × 3\n##   island    species       n\n##   <fct>     <fct>     <int>\n## 1 Biscoe    Adelie       44\n## 2 Biscoe    Gentoo      119\n## 3 Dream     Adelie       55\n## 4 Dream     Chinstrap    68\n## 5 Torgersen Adelie       47\npenguins %>%\n  filter(bill_length_mm > 40) %>% \n  summarise(\n    n = n()\n  )## # A tibble: 1 × 1\n##       n\n##   <int>\n## 1   237\npenguins %>% count(longer_bill = bill_length_mm > 40)## # A tibble: 2 × 2\n##   longer_bill     n\n##   <lgl>       <int>\n## 1 FALSE          96\n## 2 TRUE          237"},{"path":"tidyverse-dplyr-apply.html","id":"强制转换","chapter":"第 12 章 dplyr进阶","heading":"12.4.10 强制转换","text":"矢量中的元素必须是相同的类型，但如果不一样呢，会发生什么？\n这个时候R会强制转换成相同的类型。这就涉及数据类型的转换层级character > numeric > logicaldouble > integer比如这里会强制转换成字符串类型这里会强制转换成数值型随堂练习：补全下面代码，求嘴峰长度大于40mm的占比？","code":"\nc(\"foo\", 1, TRUE)## [1] \"foo\"  \"1\"    \"TRUE\"\nc(1, TRUE, FALSE)## [1] 1 1 0\nc(TRUE, TRUE, FALSE) %>% sum()## [1] 2\npenguins %>% \n  mutate(is_bigger40 = bill_length_mm > 40)## # A tibble: 333 × 9\n##    species island    bill_length_mm bill_depth_mm flipper_length_mm body_mass_g\n##    <fct>   <fct>              <dbl>         <dbl>             <int>       <int>\n##  1 Adelie  Torgersen           39.1          18.7               181        3750\n##  2 Adelie  Torgersen           39.5          17.4               186        3800\n##  3 Adelie  Torgersen           40.3          18                 195        3250\n##  4 Adelie  Torgersen           36.7          19.3               193        3450\n##  5 Adelie  Torgersen           39.3          20.6               190        3650\n##  6 Adelie  Torgersen           38.9          17.8               181        3625\n##  7 Adelie  Torgersen           39.2          19.6               195        4675\n##  8 Adelie  Torgersen           41.1          17.6               182        3200\n##  9 Adelie  Torgersen           38.6          21.2               191        3800\n## 10 Adelie  Torgersen           34.6          21.1               198        4400\n## # ℹ 323 more rows\n## # ℹ 3 more variables: sex <fct>, year <int>, is_bigger40 <lgl>"},{"path":"tidyverse-dplyr-apply.html","id":"across之美","chapter":"第 12 章 dplyr进阶","heading":"12.5 across()之美","text":"我们想知道，嘴巴长度和厚度的均值接着添加下个变量长度和厚度惊人的相等。我是不是发现新大陆了？","code":"\npenguins %>%\n  summarize(\n    length = mean(bill_length_mm)\n  )## # A tibble: 1 × 1\n##   length\n##    <dbl>\n## 1   44.0\npenguins %>%\n  summarize(\n    length = mean(bill_length_mm),\n    depth  = mean(bill_length_mm)\n  )## # A tibble: 1 × 2\n##   length depth\n##    <dbl> <dbl>\n## 1   44.0  44.0"},{"path":"tidyverse-dplyr-apply.html","id":"across函数","chapter":"第 12 章 dplyr进阶","heading":"12.5.1 across()函数","text":"更安全、更简练的写法，王老师的最爱翅膀的长度加进去看看还可以更简练喔across()函数用法用在 mutate() 和summarise() 函数里面across() 对多列执行相同的函数操作，返回数据框","code":"\npenguins %>%\n  summarize(\n     across(c(bill_depth_mm, bill_length_mm), mean)\n )## # A tibble: 1 × 2\n##   bill_depth_mm bill_length_mm\n##           <dbl>          <dbl>\n## 1          17.2           44.0\npenguins %>%\n  summarize(\n     across(c(bill_depth_mm, bill_length_mm, flipper_length_mm), mean)\n )## # A tibble: 1 × 3\n##   bill_depth_mm bill_length_mm flipper_length_mm\n##           <dbl>          <dbl>             <dbl>\n## 1          17.2           44.0              201.\npenguins %>%\n  summarize(\n    across(ends_with(\"_mm\"), mean)\n )## # A tibble: 1 × 3\n##   bill_length_mm bill_depth_mm flipper_length_mm\n##            <dbl>         <dbl>             <dbl>\n## 1           44.0          17.2              201.\nacross(.cols = everything(), .fns = NULL, ..., .names = NULL)"},{"path":"tidyverse-dplyr-apply.html","id":"数据中心化","chapter":"第 12 章 dplyr进阶","heading":"12.5.2 数据中心化","text":"更清晰的办法","code":"\npenguins %>%\n  mutate(\n    bill_length_mm = bill_length_mm - mean(bill_length_mm),\n    bill_depth_mm  = bill_depth_mm  - mean(bill_depth_mm)\n    )## # A tibble: 333 × 8\n##    species island    bill_length_mm bill_depth_mm flipper_length_mm body_mass_g\n##    <fct>   <fct>              <dbl>         <dbl>             <int>       <int>\n##  1 Adelie  Torgersen          -4.89         1.54                181        3750\n##  2 Adelie  Torgersen          -4.49         0.235               186        3800\n##  3 Adelie  Torgersen          -3.69         0.835               195        3250\n##  4 Adelie  Torgersen          -7.29         2.14                193        3450\n##  5 Adelie  Torgersen          -4.69         3.44                190        3650\n##  6 Adelie  Torgersen          -5.09         0.635               181        3625\n##  7 Adelie  Torgersen          -4.79         2.44                195        4675\n##  8 Adelie  Torgersen          -2.89         0.435               182        3200\n##  9 Adelie  Torgersen          -5.39         4.04                191        3800\n## 10 Adelie  Torgersen          -9.39         3.94                198        4400\n## # ℹ 323 more rows\n## # ℹ 2 more variables: sex <fct>, year <int>\ncentralized <- function(x) {\n  x - mean(x)\n}\n\n\npenguins %>%\n  mutate(\n    across(c(bill_length_mm, bill_depth_mm), centralized)\n  )## # A tibble: 333 × 8\n##    species island    bill_length_mm bill_depth_mm flipper_length_mm body_mass_g\n##    <fct>   <fct>              <dbl>         <dbl>             <int>       <int>\n##  1 Adelie  Torgersen          -4.89         1.54                181        3750\n##  2 Adelie  Torgersen          -4.49         0.235               186        3800\n##  3 Adelie  Torgersen          -3.69         0.835               195        3250\n##  4 Adelie  Torgersen          -7.29         2.14                193        3450\n##  5 Adelie  Torgersen          -4.69         3.44                190        3650\n##  6 Adelie  Torgersen          -5.09         0.635               181        3625\n##  7 Adelie  Torgersen          -4.79         2.44                195        4675\n##  8 Adelie  Torgersen          -2.89         0.435               182        3200\n##  9 Adelie  Torgersen          -5.39         4.04                191        3800\n## 10 Adelie  Torgersen          -9.39         3.94                198        4400\n## # ℹ 323 more rows\n## # ℹ 2 more variables: sex <fct>, year <int>"},{"path":"tidyverse-dplyr-apply.html","id":"数据标准化","chapter":"第 12 章 dplyr进阶","heading":"12.5.3 数据标准化","text":"或者使用更简洁的方法","code":"\nstd <- function(x) {\n  (x - mean(x, na.rm = TRUE)) / sd(x, na.rm = TRUE)\n}\n\n\npenguins %>%\n  mutate(\n    across(c(bill_length_mm, bill_depth_mm), std)\n  )## # A tibble: 333 × 8\n##    species island    bill_length_mm bill_depth_mm flipper_length_mm body_mass_g\n##    <fct>   <fct>              <dbl>         <dbl>             <int>       <int>\n##  1 Adelie  Torgersen         -0.895         0.780               181        3750\n##  2 Adelie  Torgersen         -0.822         0.119               186        3800\n##  3 Adelie  Torgersen         -0.675         0.424               195        3250\n##  4 Adelie  Torgersen         -1.33          1.08                193        3450\n##  5 Adelie  Torgersen         -0.858         1.74                190        3650\n##  6 Adelie  Torgersen         -0.931         0.323               181        3625\n##  7 Adelie  Torgersen         -0.876         1.24                195        4675\n##  8 Adelie  Torgersen         -0.529         0.221               182        3200\n##  9 Adelie  Torgersen         -0.986         2.05                191        3800\n## 10 Adelie  Torgersen         -1.72          2.00                198        4400\n## # ℹ 323 more rows\n## # ℹ 2 more variables: sex <fct>, year <int>\n# using across() and purrr style\npenguins %>%\n  summarise(\n    across(starts_with(\"bill_\"), ~ (.x - mean(.x)) / sd(.x))\n  )## Warning: Returning more (or less) than 1 row per `summarise()` group was deprecated in\n## dplyr 1.1.0.\n## ℹ Please use `reframe()` instead.\n## ℹ When switching from `summarise()` to `reframe()`, remember that `reframe()`\n##   always returns an ungrouped data frame and adjust accordingly.\n## Call `lifecycle::last_lifecycle_warnings()` to see where this warning was\n## generated.## # A tibble: 333 × 2\n##    bill_length_mm bill_depth_mm\n##             <dbl>         <dbl>\n##  1         -0.895         0.780\n##  2         -0.822         0.119\n##  3         -0.675         0.424\n##  4         -1.33          1.08 \n##  5         -0.858         1.74 \n##  6         -0.931         0.323\n##  7         -0.876         1.24 \n##  8         -0.529         0.221\n##  9         -0.986         2.05 \n## 10         -1.72          2.00 \n## # ℹ 323 more rows"},{"path":"tidyverse-dplyr-apply.html","id":"多列多个统计函数","chapter":"第 12 章 dplyr进阶","heading":"12.5.4 多列多个统计函数","text":"随堂练习：以sex分组，对”bill_“开头的列，求出每列的最大值和最小值在第 ?? 章到第 ?? 章会继续讲王老师的最爱across()函数。","code":"\npenguins %>%\n  group_by(species) %>%\n  summarise(\n    across(ends_with(\"_mm\"), list(mean = mean, sd = sd), na.rm = TRUE)\n  )## Warning: There was 1 warning in `summarise()`.\n## ℹ In argument: `across(ends_with(\"_mm\"), list(mean = mean, sd = sd), na.rm =\n##   TRUE)`.\n## ℹ In group 1: `species = Adelie`.\n## Caused by warning:\n## ! The `...` argument of `across()` is deprecated as of dplyr 1.1.0.\n## Supply arguments directly to `.fns` through an anonymous function instead.\n## \n##   # Previously\n##   across(a:b, mean, na.rm = TRUE)\n## \n##   # Now\n##   across(a:b, \\(x) mean(x, na.rm = TRUE))## # A tibble: 3 × 7\n##   species   bill_length_mm_mean bill_length_mm_sd bill_depth_mm_mean\n##   <fct>                   <dbl>             <dbl>              <dbl>\n## 1 Adelie                   38.8              2.66               18.3\n## 2 Chinstrap                48.8              3.34               18.4\n## 3 Gentoo                   47.6              3.11               15.0\n## # ℹ 3 more variables: bill_depth_mm_sd <dbl>, flipper_length_mm_mean <dbl>,\n## #   flipper_length_mm_sd <dbl>\npenguins %>%\n  group_by(sex) %>%\n  summarise(\n    across(starts_with(\"bill_\"), list(max = max, min = min), na.rm = TRUE)\n  )## # A tibble: 2 × 5\n##   sex    bill_length_mm_max bill_length_mm_min bill_depth_mm_max\n##   <fct>               <dbl>              <dbl>             <dbl>\n## 1 female               58                 32.1              20.7\n## 2 male                 59.6               34.6              21.5\n## # ℹ 1 more variable: bill_depth_mm_min <dbl>"},{"path":"tidyverse-tidyr.html","id":"tidyverse-tidyr","chapter":"第 13 章 数据规整1","heading":"第 13 章 数据规整1","text":"","code":"\nlibrary(tidyverse)"},{"path":"tidyverse-tidyr.html","id":"提问","chapter":"第 13 章 数据规整1","heading":"13.1 提问","text":"假定这里有 , B, C 和 D 四种植物每天生长的记录，\n大家想想，\n\n把植物高度大于或等于0.8cm的时刻筛选出来，怎么写语句?\n\n用不同的颜色画出四种植物生长曲线，怎么写语句?\n很显然，我们用第 11 章数据处理和第 18 章数据可视化的技术，可以写成这样然而，发现遇到了问题？数据的格式与我们期望的不一样！怎么解决呢？想用上面的语句，数据就得变形。那么怎么变形呢？下面任意一种都行：但我更推荐大家使用tidyr::pivot_longer(), 这是2019年9月份，tidyr 1.0.0新增的一组函数pivot_longer()/pivot_wider()，用来补充和完善原来的gather()/spread()gather()/pivot_longer 宽表格变成长表格spread()/pivot_wider 长表格变成宽表格","code":"\nplant_height <- data.frame(\n  Day = 1:5,\n  A = c(0.7, 1.0, 1.5, 1.8, 2.2),\n  B = c(0.5, 0.7, 0.9, 1.3, 1.8),\n  C = c(0.3, 0.6, 1.0, 1.2, 2.2),\n  D = c(0.4, 0.7, 1.2, 1.5, 3.2)\n)\n\n\nplant_height##   Day   A   B   C   D\n## 1   1 0.7 0.5 0.3 0.4\n## 2   2 1.0 0.7 0.6 0.7\n## 3   3 1.5 0.9 1.0 1.2\n## 4   4 1.8 1.3 1.2 1.5\n## 5   5 2.2 1.8 2.2 3.2plant_height %>% \n  filter( ___ >= 0.8)plant_height %>% \n  ggplot(aes(x = Day, y = ___, color = ___)) +\n  geom_line()\nmelted <- gather(plant_height, variable, value, 2:3)\n\n## Column names instead of indices\nmelted <- gather(plant_height, variable, value, A, B)\n\n## Excluding instead of including\nmelted <- gather(plant_height, variable, value, -1)\n\n## Excluding using column name\nmelted <- gather(plant_height, variable, value, -Day)"},{"path":"tidyverse-tidyr.html","id":"宽表格变成长表格","chapter":"第 13 章 数据规整1","heading":"13.2 宽表格变成长表格","text":"所以现在使用pivot_longer()函数这里pivot_longer()函数有三个主要的参数：参数cols，表示哪些列需要转换.参数names_to，表示cols选取的这些列的名字，构成了新的一列，这里需要取一个名字.参数values_to， 表示cols选取的这些列的值，构成了新的一列，这里也需要取一个名字.数据框总的信息量不会丢失当然，参数cols 的写法可以多种形式的，具体见第 ?? 章select()函数.画图的问题也就解决了","code":"\nlong <- plant_height %>%\n  pivot_longer(\n    cols = A:D,\n    names_to = \"plant\",\n    values_to = \"height\"\n  )\nlong## # A tibble: 20 × 3\n##      Day plant height\n##    <int> <chr>  <dbl>\n##  1     1 A        0.7\n##  2     1 B        0.5\n##  3     1 C        0.3\n##  4     1 D        0.4\n##  5     2 A        1  \n##  6     2 B        0.7\n##  7     2 C        0.6\n##  8     2 D        0.7\n##  9     3 A        1.5\n## 10     3 B        0.9\n## 11     3 C        1  \n## 12     3 D        1.2\n## 13     4 A        1.8\n## 14     4 B        1.3\n## 15     4 C        1.2\n## 16     4 D        1.5\n## 17     5 A        2.2\n## 18     5 B        1.8\n## 19     5 C        2.2\n## 20     5 D        3.2\nplant_height %>% \n  pivot_longer(\n  cols = -Day,         # A:D or c(A, B, C, D) or c(\"A\", \"B\", \"C\", \"D\")\n  names_to = \"plant\",\n  values_to = \"height\"\n)\nlong %>% \n  ggplot(aes(x = Day, y = height, color = plant)) +\n  geom_line()"},{"path":"tidyverse-tidyr.html","id":"长表格变成宽表格","chapter":"第 13 章 数据规整1","heading":"13.3 长表格变成宽表格","text":"如果，长表格变回宽表格呢？需要用到pivot_wider()","code":"\nwide <- long %>% \n  pivot_wider(\n  names_from = \"plant\",\n  values_from = \"height\"\n)\nwide## # A tibble: 5 × 5\n##     Day     A     B     C     D\n##   <int> <dbl> <dbl> <dbl> <dbl>\n## 1     1   0.7   0.5   0.3   0.4\n## 2     2   1     0.7   0.6   0.7\n## 3     3   1.5   0.9   1     1.2\n## 4     4   1.8   1.3   1.2   1.5\n## 5     5   2.2   1.8   2.2   3.2"},{"path":"tidyverse-tidyr.html","id":"列名转换成多个变量","chapter":"第 13 章 数据规整1","heading":"13.4 列名转换成多个变量","text":"假定 , B, C 三种植物每天生长的记录，包括三个特征（height, width, depth）我们想原始数据框的列名，转换成多个变量，比如A,B,C成为物种(species)变量，（height, width, depth）成为parameter变量用pivot_longer()函数，","code":"\nplant_record <- data.frame(\n         day = c(1L, 2L, 3L, 4L, 5L),\n    A_height = c(1.1, 1.2, 1.3, 1.4, 1.5),\n     A_width = c(2.1, 2.2, 2.3, 2.4, 2.5),\n     A_depth = c(3.1, 3.2, 3.3, 3.4, 3.5),\n    B_height = c(4.1, 4.2, 4.3, 4.4, 4.5),\n     B_width = c(5.1, 5.2, 5.3, 5.4, 5.5),\n     B_depth = c(6.1, 6.2, 6.3, 6.4, 6.5),\n    C_height = c(7.1, 7.2, 7.3, 7.4, 7.5),\n     C_width = c(8.1, 8.2, 8.3, 8.4, 8.5),\n     C_depth = c(9.1, 9.2, 9.3, 9.4, 9.5)\n)\nplant_record %>% \n  knitr::kable()\nplant_record %>% \n  tidyr::pivot_longer(\n    cols = !day,\n    names_to = c(\"species\", \"parameter\"),\n    names_pattern = \"(.*)_(.*)\",\n    values_to = \"value\"\n)## # A tibble: 45 × 4\n##      day species parameter value\n##    <int> <chr>   <chr>     <dbl>\n##  1     1 A       height      1.1\n##  2     1 A       width       2.1\n##  3     1 A       depth       3.1\n##  4     1 B       height      4.1\n##  5     1 B       width       5.1\n##  6     1 B       depth       6.1\n##  7     1 C       height      7.1\n##  8     1 C       width       8.1\n##  9     1 C       depth       9.1\n## 10     2 A       height      1.2\n## # ℹ 35 more rows"},{"path":"tidyverse-tidyr.html","id":"复杂的情形","chapter":"第 13 章 数据规整1","heading":"13.5 复杂的情形","text":"我们希望原始数据框的列名中，一部分进入变量，一部分保持原来的列名，比如，如果，反过来，又该怎么弄呢？\n看明白.value它代表的意思了吗？\n\n注意 .value\n而不是value，说明这里不是单个列名，而是匹配得到的多个值做列名\n","code":"\nplant_record_longer <- plant_record %>% \n  tidyr::pivot_longer(\n   cols = !day,\n   names_to = c(\"species\", \".value\"),\n   names_pattern = \"(.*)_(.*)\"\n)\nplant_record_longer## # A tibble: 15 × 5\n##      day species height width depth\n##    <int> <chr>    <dbl> <dbl> <dbl>\n##  1     1 A          1.1   2.1   3.1\n##  2     1 B          4.1   5.1   6.1\n##  3     1 C          7.1   8.1   9.1\n##  4     2 A          1.2   2.2   3.2\n##  5     2 B          4.2   5.2   6.2\n##  6     2 C          7.2   8.2   9.2\n##  7     3 A          1.3   2.3   3.3\n##  8     3 B          4.3   5.3   6.3\n##  9     3 C          7.3   8.3   9.3\n## 10     4 A          1.4   2.4   3.4\n## 11     4 B          4.4   5.4   6.4\n## 12     4 C          7.4   8.4   9.4\n## 13     5 A          1.5   2.5   3.5\n## 14     5 B          4.5   5.5   6.5\n## 15     5 C          7.5   8.5   9.5\nus_rent_income %>%\n  pivot_wider(\n    names_from = variable,\n    names_glue = \"{variable}_{.value}\",\n    values_from = c(estimate, moe)\n  )\nplant_record_longer %>% \n  tidyr::pivot_wider(\n    names_from = species,\n    values_from = c(height, width, depth),\n    names_glue = \"{species}_{.value}\"\n  )## # A tibble: 5 × 10\n##     day A_height B_height C_height A_width B_width C_width A_depth B_depth\n##   <int>    <dbl>    <dbl>    <dbl>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl>\n## 1     1      1.1      4.1      7.1     2.1     5.1     8.1     3.1     6.1\n## 2     2      1.2      4.2      7.2     2.2     5.2     8.2     3.2     6.2\n## 3     3      1.3      4.3      7.3     2.3     5.3     8.3     3.3     6.3\n## 4     4      1.4      4.4      7.4     2.4     5.4     8.4     3.4     6.4\n## 5     5      1.5      4.5      7.5     2.5     5.5     8.5     3.5     6.5\n## # ℹ 1 more variable: C_depth <dbl>"},{"path":"tidyverse-tidyr.html","id":"tidy-data原则","chapter":"第 13 章 数据规整1","heading":"13.6 tidy data原则","text":"Hadley Wickhamt提出了数据科学tidy原则，我结合自己的理解，tidy思想体现在:一切都是数据框，任何数据都可以规整数据框的一列代表一个变量，数据框的一行代表一次观察函数处理数据时，数据框进数据框出（函数的第一个参数始终为数据框）根据Hadley Wickham的思想，这里的宽表格(plant_heigt和 wide)不是tidy的，只有长表格(long)才是tidy的，\n以后，我们会意识到tidyverse中的很多函数都喜欢tidy的（尤其是ggplot2时）！\n","code":"\nlong## # A tibble: 20 × 3\n##      Day plant height\n##    <int> <chr>  <dbl>\n##  1     1 A        0.7\n##  2     1 B        0.5\n##  3     1 C        0.3\n##  4     1 D        0.4\n##  5     2 A        1  \n##  6     2 B        0.7\n##  7     2 C        0.6\n##  8     2 D        0.7\n##  9     3 A        1.5\n## 10     3 B        0.9\n## 11     3 C        1  \n## 12     3 D        1.2\n## 13     4 A        1.8\n## 14     4 B        1.3\n## 15     4 C        1.2\n## 16     4 D        1.5\n## 17     5 A        2.2\n## 18     5 B        1.8\n## 19     5 C        2.2\n## 20     5 D        3.2"},{"path":"tidyverse-tidyr.html","id":"案例","chapter":"第 13 章 数据规整1","heading":"13.7 案例","text":"请见第 ?? 章、第 ?? 章和第 ?? 章.","code":""},{"path":"tidyverse-tidyr2.html","id":"tidyverse-tidyr2","chapter":"第 14 章 数据规整2","heading":"第 14 章 数据规整2","text":"接着上一章，罗列一些tidyr的函数","code":"\nlibrary(tidyverse)"},{"path":"tidyverse-tidyr2.html","id":"fill-缺失值填充","chapter":"第 14 章 数据规整2","heading":"14.1 fill() 缺失值填充","text":"利用所在列的上下值进行缺失值填充也可以控制填充的方向","code":"\nsales <- tibble::tribble(\n  ~quarter, ~year, ~sales,\n      \"Q1\",  2000,  66013,\n      \"Q2\",    NA,  69182,\n      \"Q3\",    NA,  53175,\n      \"Q4\",    NA,  21001,\n      \"Q1\",  2001,  46036,\n      \"Q2\",    NA,  58842,\n      \"Q3\",    NA,  44568,\n      \"Q4\",    NA,  50197,\n      \"Q1\",  2002,  39113,\n      \"Q2\",    NA,  41668,\n      \"Q3\",    NA,  30144,\n      \"Q4\",    NA,  52897\n  )\nsales## # A tibble: 12 × 3\n##    quarter  year sales\n##    <chr>   <dbl> <dbl>\n##  1 Q1       2000 66013\n##  2 Q2         NA 69182\n##  3 Q3         NA 53175\n##  4 Q4         NA 21001\n##  5 Q1       2001 46036\n##  6 Q2         NA 58842\n##  7 Q3         NA 44568\n##  8 Q4         NA 50197\n##  9 Q1       2002 39113\n## 10 Q2         NA 41668\n## 11 Q3         NA 30144\n## 12 Q4         NA 52897\nsales %>% fill(year)## # A tibble: 12 × 3\n##    quarter  year sales\n##    <chr>   <dbl> <dbl>\n##  1 Q1       2000 66013\n##  2 Q2       2000 69182\n##  3 Q3       2000 53175\n##  4 Q4       2000 21001\n##  5 Q1       2001 46036\n##  6 Q2       2001 58842\n##  7 Q3       2001 44568\n##  8 Q4       2001 50197\n##  9 Q1       2002 39113\n## 10 Q2       2002 41668\n## 11 Q3       2002 30144\n## 12 Q4       2002 52897\nsales %>% fill(year, .direction = \"up\")## # A tibble: 12 × 3\n##    quarter  year sales\n##    <chr>   <dbl> <dbl>\n##  1 Q1       2000 66013\n##  2 Q2       2001 69182\n##  3 Q3       2001 53175\n##  4 Q4       2001 21001\n##  5 Q1       2001 46036\n##  6 Q2       2002 58842\n##  7 Q3       2002 44568\n##  8 Q4       2002 50197\n##  9 Q1       2002 39113\n## 10 Q2         NA 41668\n## 11 Q3         NA 30144\n## 12 Q4         NA 52897"},{"path":"tidyverse-tidyr2.html","id":"expand-与-complete","chapter":"第 14 章 数据规整2","heading":"14.2 expand() 与 complete()","text":"指定数据框的若干列，根据其向量元素值，产生所有可能的交叉组合nesting()用于限定只产生数据框已出现的组合。complete() 补全，可以看做是 expand(nesting()) + fill()数据在complete补全的时候，会面临有两种缺失值：补位的时候造成的空缺数据原先就存在缺失值补位的时候造成的空缺，可通过fill = list(x = 0) 控制填充数据原先就存在缺失值，最好通过 explicit = FALSE显式地控制是否填充","code":"\ndf <- tibble::tribble(\n  ~x, ~y, ~z,\n  1L, 1L, 4L,\n  1L, 2L, 5L,\n  2L, 1L, NA,\n  3L, 2L, 6L\n)\n\n\ndf %>% expand(x, y)## # A tibble: 6 × 2\n##       x     y\n##   <int> <int>\n## 1     1     1\n## 2     1     2\n## 3     2     1\n## 4     2     2\n## 5     3     1\n## 6     3     2\ndf %>% expand(nesting(x, y))## # A tibble: 4 × 2\n##       x     y\n##   <int> <int>\n## 1     1     1\n## 2     1     2\n## 3     2     1\n## 4     3     2\ndf %>% expand(nesting(x, y), z)## # A tibble: 16 × 3\n##        x     y     z\n##    <int> <int> <int>\n##  1     1     1     4\n##  2     1     1     5\n##  3     1     1     6\n##  4     1     1    NA\n##  5     1     2     4\n##  6     1     2     5\n##  7     1     2     6\n##  8     1     2    NA\n##  9     2     1     4\n## 10     2     1     5\n## 11     2     1     6\n## 12     2     1    NA\n## 13     3     2     4\n## 14     3     2     5\n## 15     3     2     6\n## 16     3     2    NA\ndf %>% complete(x, y)## # A tibble: 6 × 3\n##       x     y     z\n##   <int> <int> <int>\n## 1     1     1     4\n## 2     1     2     5\n## 3     2     1    NA\n## 4     2     2    NA\n## 5     3     1    NA\n## 6     3     2     6\ndf %>% complete(x, y, fill = list(z = 0))## # A tibble: 6 × 3\n##       x     y     z\n##   <int> <int> <int>\n## 1     1     1     4\n## 2     1     2     5\n## 3     2     1     0\n## 4     2     2     0\n## 5     3     1     0\n## 6     3     2     6\ndf %>% complete(x, y)## # A tibble: 6 × 3\n##       x     y     z\n##   <int> <int> <int>\n## 1     1     1     4\n## 2     1     2     5\n## 3     2     1    NA\n## 4     2     2    NA\n## 5     3     1    NA\n## 6     3     2     6\ndf %>% complete(x, y, fill = list(z = 0))## # A tibble: 6 × 3\n##       x     y     z\n##   <int> <int> <int>\n## 1     1     1     4\n## 2     1     2     5\n## 3     2     1     0\n## 4     2     2     0\n## 5     3     1     0\n## 6     3     2     6\ndf %>% complete(x, y, fill = list(z = 0), explicit = FALSE)## # A tibble: 6 × 3\n##       x     y     z\n##   <int> <int> <int>\n## 1     1     1     4\n## 2     1     2     5\n## 3     2     1    NA\n## 4     2     2     0\n## 5     3     1     0\n## 6     3     2     6"},{"path":"tidyverse-tidyr2.html","id":"expand_grid-与-crossing","chapter":"第 14 章 数据规整2","heading":"14.3 expand_grid() 与 crossing()","text":"产生一个新的数据框，每行对应着向量元素的所有交叉组合向量换成数据框也可以，其结果就是数据框行与元素的交叉组合crossing()可以看作是expand_grid() + distinct()， 即crossing()在完成交叉组合之后会自动去重，比如","code":"\nexpand_grid(x = 1:3, y = 1:2)## # A tibble: 6 × 2\n##       x     y\n##   <int> <int>\n## 1     1     1\n## 2     1     2\n## 3     2     1\n## 4     2     2\n## 5     3     1\n## 6     3     2\ncrossing(x = 1:3, y = 1:2)## # A tibble: 6 × 2\n##       x     y\n##   <int> <int>\n## 1     1     1\n## 2     1     2\n## 3     2     1\n## 4     2     2\n## 5     3     1\n## 6     3     2\nexpand_grid(df = data.frame(x = 1:2, y = c(2, 1)), z = 1:3)## # A tibble: 6 × 2\n##    df$x    $y     z\n##   <int> <dbl> <int>\n## 1     1     2     1\n## 2     1     2     2\n## 3     1     2     3\n## 4     2     1     1\n## 5     2     1     2\n## 6     2     1     3\ncrossing(df = data.frame(x = 1:2, y = c(2, 1)), z = 1:3)## # A tibble: 6 × 2\n##    df$x    $y     z\n##   <int> <dbl> <int>\n## 1     1     2     1\n## 2     1     2     2\n## 3     1     2     3\n## 4     2     1     1\n## 5     2     1     2\n## 6     2     1     3\nexpand_grid(x = c(1, 1), y = c(1:2))  # 不考虑去重## # A tibble: 4 × 2\n##       x     y\n##   <dbl> <int>\n## 1     1     1\n## 2     1     2\n## 3     1     1\n## 4     1     2\ncrossing(x = c(1, 1), y = c(1:2))    # 考虑去重 ## # A tibble: 2 × 2\n##       x     y\n##   <dbl> <int>\n## 1     1     1\n## 2     1     2"},{"path":"tidyverse-tidyr2.html","id":"separate-与-unite","chapter":"第 14 章 数据规整2","heading":"14.4 separate() 与 unite()","text":"有时候分隔符搞不定的，可以用正则表达式，将捕获的每组弄成一列","code":"\ntb <- tibble::tribble(\n  ~day, ~price,\n  1,   \"30-45\",\n  2,   \"40-95\",\n  3,   \"89-65\",\n  4,   \"45-63\",\n  5,   \"52-42\"\n)\ntb1 <- tb %>%\n  separate(price, into = c(\"low\", \"high\"), sep = \"-\")\ntb1## # A tibble: 5 × 3\n##     day low   high \n##   <dbl> <chr> <chr>\n## 1     1 30    45   \n## 2     2 40    95   \n## 3     3 89    65   \n## 4     4 45    63   \n## 5     5 52    42\ntb1 %>%\n  unite(col = \"price\", c(low, high), sep = \":\", remove = FALSE)## # A tibble: 5 × 4\n##     day price low   high \n##   <dbl> <chr> <chr> <chr>\n## 1     1 30:45 30    45   \n## 2     2 40:95 40    95   \n## 3     3 89:65 89    65   \n## 4     4 45:63 45    63   \n## 5     5 52:42 52    42\ndfc <- tibble(x = c(\"1-12week\", \"1-10wk\", \"5-12w\", \"01-05weeks\"))\ndfc## # A tibble: 4 × 1\n##   x         \n##   <chr>     \n## 1 1-12week  \n## 2 1-10wk    \n## 3 5-12w     \n## 4 01-05weeks\ndfc %>% tidyr::extract(\n  x,\n  c(\"start\", \"end\", \"letter\"), \"(\\\\d+)-(\\\\d+)([a-z]+)\",\n  remove = FALSE\n)## # A tibble: 4 × 4\n##   x          start end   letter\n##   <chr>      <chr> <chr> <chr> \n## 1 1-12week   1     12    week  \n## 2 1-10wk     1     10    wk    \n## 3 5-12w      5     12    w     \n## 4 01-05weeks 01    05    weeks"},{"path":"tidyverse-tidyr2.html","id":"删除缺失值所在行drop_na与replace_na","chapter":"第 14 章 数据规整2","heading":"14.5 删除缺失值所在行drop_na()与replace_na()","text":"如果score列中有缺失值NA，就删除所在的row或者用across()所有列，如果有缺失值NA，就删除所在的row现在有更简便的方法也可指定某一列没来参加考试，视为0分，可以用replace_na()或者使用coalesce()没来参加考试，用平均分代替当然也可以用if_else()来做","code":"\ndf <- tibble::tribble(\n    ~name,     ~type, ~score, ~extra,\n  \"Alice\", \"english\",     80,     10,\n  \"Alice\",    \"math\",     NA,      5,\n    \"Bob\", \"english\",     NA,      9,\n    \"Bob\",    \"math\",     69,     NA,\n  \"Carol\", \"english\",     80,     10,\n  \"Carol\",    \"math\",     90,      5\n  )\n\ndf## # A tibble: 6 × 4\n##   name  type    score extra\n##   <chr> <chr>   <dbl> <dbl>\n## 1 Alice english    80    10\n## 2 Alice math       NA     5\n## 3 Bob   english    NA     9\n## 4 Bob   math       69    NA\n## 5 Carol english    80    10\n## 6 Carol math       90     5\ndf %>%\n  filter(!is.na(score))## # A tibble: 4 × 4\n##   name  type    score extra\n##   <chr> <chr>   <dbl> <dbl>\n## 1 Alice english    80    10\n## 2 Bob   math       69    NA\n## 3 Carol english    80    10\n## 4 Carol math       90     5\ndf %>%\n  filter(\n    across(score, ~ !is.na(.x))\n  )## Warning: Using `across()` in `filter()` was deprecated in dplyr 1.0.8.\n## ℹ Please use `if_any()` or `if_all()` instead.\n## Call `lifecycle::last_lifecycle_warnings()` to see where this warning was\n## generated.## # A tibble: 4 × 4\n##   name  type    score extra\n##   <chr> <chr>   <dbl> <dbl>\n## 1 Alice english    80    10\n## 2 Bob   math       69    NA\n## 3 Carol english    80    10\n## 4 Carol math       90     5\ndf %>%\n  filter(\n    across(everything(), ~ !is.na(.x))\n  )## Warning: Using `across()` in `filter()` was deprecated in dplyr 1.0.8.\n## ℹ Please use `if_any()` or `if_all()` instead.\n## Call `lifecycle::last_lifecycle_warnings()` to see where this warning was\n## generated.## # A tibble: 3 × 4\n##   name  type    score extra\n##   <chr> <chr>   <dbl> <dbl>\n## 1 Alice english    80    10\n## 2 Carol english    80    10\n## 3 Carol math       90     5\ndf %>%\n  drop_na()## # A tibble: 3 × 4\n##   name  type    score extra\n##   <chr> <chr>   <dbl> <dbl>\n## 1 Alice english    80    10\n## 2 Carol english    80    10\n## 3 Carol math       90     5\ndf %>%\n  drop_na(score)## # A tibble: 4 × 4\n##   name  type    score extra\n##   <chr> <chr>   <dbl> <dbl>\n## 1 Alice english    80    10\n## 2 Bob   math       69    NA\n## 3 Carol english    80    10\n## 4 Carol math       90     5\ndf %>% mutate(score = replace_na(score, 0))## # A tibble: 6 × 4\n##   name  type    score extra\n##   <chr> <chr>   <dbl> <dbl>\n## 1 Alice english    80    10\n## 2 Alice math        0     5\n## 3 Bob   english     0     9\n## 4 Bob   math       69    NA\n## 5 Carol english    80    10\n## 6 Carol math       90     5\ndf %>% mutate(score = coalesce(score, 0))## # A tibble: 6 × 4\n##   name  type    score extra\n##   <chr> <chr>   <dbl> <dbl>\n## 1 Alice english    80    10\n## 2 Alice math        0     5\n## 3 Bob   english     0     9\n## 4 Bob   math       69    NA\n## 5 Carol english    80    10\n## 6 Carol math       90     5\ndf %>%\n  mutate(\n    across(c(score, extra), ~ coalesce(.x, 0))\n  )## # A tibble: 6 × 4\n##   name  type    score extra\n##   <chr> <chr>   <dbl> <dbl>\n## 1 Alice english    80    10\n## 2 Alice math        0     5\n## 3 Bob   english     0     9\n## 4 Bob   math       69     0\n## 5 Carol english    80    10\n## 6 Carol math       90     5\ndf %>%\n  mutate(\n    score = replace_na(score, mean(score, na.rm = TRUE))\n  )## # A tibble: 6 × 4\n##   name  type    score extra\n##   <chr> <chr>   <dbl> <dbl>\n## 1 Alice english  80      10\n## 2 Alice math     79.8     5\n## 3 Bob   english  79.8     9\n## 4 Bob   math     69      NA\n## 5 Carol english  80      10\n## 6 Carol math     90       5\ndf %>%\n  mutate(\n    score = if_else(is.na(score), mean(score, na.rm = TRUE), score)\n  )## # A tibble: 6 × 4\n##   name  type    score extra\n##   <chr> <chr>   <dbl> <dbl>\n## 1 Alice english  80      10\n## 2 Alice math     79.8     5\n## 3 Bob   english  79.8     9\n## 4 Bob   math     69      NA\n## 5 Carol english  80      10\n## 6 Carol math     90       5"},{"path":"tidyverse-stringr.html","id":"tidyverse-stringr","chapter":"第 15 章 正则表达式","heading":"第 15 章 正则表达式","text":"","code":"\nlibrary(tidyverse)\nlibrary(stringr)"},{"path":"tidyverse-stringr.html","id":"问题","chapter":"第 15 章 正则表达式","heading":"15.1 问题","text":"这是一份关于地址信息的数据问题：如何提取Sichuan Univ后面的学院？这需要用到正则表达式的知识。","code":"## # A tibble: 8 × 2\n##      No address                      \n##   <int> <chr>                        \n## 1     1 Sichuan Univ, Coll Chem      \n## 2     2 Sichuan Univ, Coll Elect Engn\n## 3     3 Sichuan Univ, Dept Phys      \n## 4     4 Sichuan Univ, Coll Life Sci  \n## 5     6 Sichuan Univ, Food Engn      \n## 6     7 Sichuan Univ, Coll Phys      \n## 7     8 Sichuan Univ, Sch Business   \n## 8     9 Wuhan Univ, Mat Sci"},{"path":"tidyverse-stringr.html","id":"什么是正则表达式","chapter":"第 15 章 正则表达式","heading":"15.2 什么是正则表达式","text":"我们在word文档或者excel中，经常使用查找和替换, 然而有些情况，word是解决不了的，比如条件搜索\n统计文中，前面有 “data”, “computer” “statistical” 的 “analysis”，这个单词的个数\n找出文中重复的单词，比如“love love ”\n统计文中，前面有 “data”, “computer” “statistical” 的 “analysis”，这个单词的个数找出文中重复的单词，比如“love love ”拼写检查\n电话号码（邮件，密码等）是否正确格式\n日期书写的规范与统一\n电话号码（邮件，密码等）是否正确格式日期书写的规范与统一提取信息\n提取文本特定位置的数据\n提取文本特定位置的数据文本挖掘\n非结构化的提取成结构化\n非结构化的提取成结构化这个时候就需要用到正则表达式（Regular Expression），这一强大、便捷、高效的文本处理工具。那么，什么是正则表达式呢？简单点说，正则表达式是处理字符串的。复杂点说，正则表达式描述了一种字符串匹配的模式（pattern），通常被用来检索、替换那些符合某个模式(规则)的文本。这种固定的格式的文本，生活中常见的有电话号码、网络地址、邮件地址和日期格式等等。正则表达式并不是R语言特有的，事实上，几乎所有程序语言都支持正则表达式 (e.g. Perl, Python, Java, Ruby, etc).R 语言中很多函数都需要使用正则表达式，然而正则表达式不太好学。幸运的是，大神Hadley Wickham开发的stringr包让正则表达式简单易懂，因此今天我们就介绍这个包。本章的内容与《R data science》第10章基本一致。本章目的教大家写简单的正则表示式就行了。","code":""},{"path":"tidyverse-stringr.html","id":"字符串基础","chapter":"第 15 章 正则表达式","heading":"15.3 字符串基础","text":"","code":""},{"path":"tidyverse-stringr.html","id":"字符串长度","chapter":"第 15 章 正则表达式","heading":"15.3.1 字符串长度","text":"想获取字符串的长度，可以使用str_length()函数字符串向量，也适用数据框里配合dplyr函数，同样很方便","code":"\nstr_length(\"R for data science\")## [1] 18\nstr_length(c(\"a\", \"R for data science\", NA))## [1]  1 18 NA\ndata.frame(\n  x = c(\"a\", \"R for data science\", NA)\n) %>%\n  mutate(y = str_length(x))##                    x  y\n## 1                  a  1\n## 2 R for data science 18\n## 3               <NA> NA"},{"path":"tidyverse-stringr.html","id":"字符串组合","chapter":"第 15 章 正则表达式","heading":"15.3.2 字符串组合","text":"把字符串拼接在一起，使用 str_c() 函数把字符串拼接在一起，可以设置中间的间隔是不是和你想象的不一样，那就?str_c，或者试试这个用在数据框里使用collapse选项，是先组合，然后再转换成单个字符串，大家对比下","code":"\nstr_c(\"x\", \"y\")## [1] \"xy\"\nstr_c(\"x\", \"y\", sep = \", \")## [1] \"x, y\"\nstr_c(c(\"x\", \"y\", \"z\"), sep = \", \")## [1] \"x\" \"y\" \"z\"\nstr_c(c(\"x\", \"y\", \"z\"), c(\"x\", \"y\", \"z\"), sep = \", \")## [1] \"x, x\" \"y, y\" \"z, z\"\ndata.frame(\n  x = c(\"I\", \"love\", \"you\"),\n  y = c(\"you\", \"like\", \"me\")\n) %>%\n  mutate(z = str_c(x, y, sep = \"|\"))##      x    y         z\n## 1    I  you     I|you\n## 2 love like love|like\n## 3  you   me    you|me\nstr_c(c(\"x\", \"y\", \"z\"), c(\"a\", \"b\", \"c\"), sep = \"|\")## [1] \"x|a\" \"y|b\" \"z|c\"\nstr_c(c(\"x\", \"y\", \"z\"), c(\"a\", \"b\", \"c\"), collapse = \"|\")## [1] \"xa|yb|zc\""},{"path":"tidyverse-stringr.html","id":"字符串取子集","chapter":"第 15 章 正则表达式","heading":"15.3.3 字符串取子集","text":"截取字符串的一部分，需要指定截取的开始位置和结束位置开始位置和结束位置如果是负整数，就表示位置是从后往前数，比如下面这段代码，截取倒数第3个至倒数第1个位置上的字符串也可以进行赋值，如果该位置上有字符，就用新的字符替换旧的字符","code":"\nx <- c(\"Apple\", \"Banana\", \"Pear\")\nstr_sub(x, 1, 3)## [1] \"App\" \"Ban\" \"Pea\"\nx <- c(\"Apple\", \"Banana\", \"Pear\")\nstr_sub(x, -3, -1)## [1] \"ple\" \"ana\" \"ear\"\nx <- c(\"Apple\", \"Banana\", \"Pear\")\nx## [1] \"Apple\"  \"Banana\" \"Pear\"\nstr_sub(x, 1, 1)## [1] \"A\" \"B\" \"P\"\nstr_sub(x, 1, 1) <- \"Q\"\nx## [1] \"Qpple\"  \"Qanana\" \"Qear\""},{"path":"tidyverse-stringr.html","id":"使用正则表达式进行模式匹配","chapter":"第 15 章 正则表达式","heading":"15.4 使用正则表达式进行模式匹配","text":"正则表示式慢慢会呈现了","code":""},{"path":"tidyverse-stringr.html","id":"基础匹配","chapter":"第 15 章 正则表达式","heading":"15.4.1 基础匹配","text":"str_view() 是查看string是否匹配pattern，如果匹配，就高亮显示有时候，我们希望在字符a前后都有字符（即，a处在两字符中间，如rap, bad, sad, wave，spear等等）这里的. 代表任意字符。如果向表达.本身呢？","code":"\nx <- c(\"apple\", \"banana\", \"pear\")\nstr_view(string = x, pattern = \"an\")## [2] │ b<an><an>a\nx <- c(\"apple\", \"banana\", \"pear\")\nstr_view(x, \".a.\")## [2] │ <ban>ana\n## [3] │ p<ear>\nc(\"s.d\") %>%\n  str_view(\".\")## [1] │ <s><.><d>\nc(\"s.d\") %>%\n  str_view(\"\\\\.\")## [1] │ s<.>d"},{"path":"tidyverse-stringr.html","id":"锚点","chapter":"第 15 章 正则表达式","heading":"15.4.2 锚点","text":"希望a是字符串的开始希望a是一字符串的末尾","code":"\nx <- c(\"apple\", \"banana\", \"pear\")\nstr_view(x, \"^a\")## [1] │ <a>pple\nx <- c(\"apple\", \"banana\", \"pear\")\nstr_view(x, \"a$\")## [2] │ banan<a>\nx <- c(\"apple pie\", \"apple\", \"apple cake\")\nstr_view(x, \"^apple$\")## [2] │ <apple>"},{"path":"tidyverse-stringr.html","id":"字符类与字符选项","chapter":"第 15 章 正则表达式","heading":"15.4.3 字符类与字符选项","text":"前面提到，.匹配任意字符，事实上还有很多这种特殊含义的字符：\\d: matches digit.\\s: matches whitespace (e.g. space, tab, newline).[abc]: matches , b, c.[^abc]: matches anything except , b, c.","code":"\nstr_view(c(\"grey\", \"gray\"), \"gr[ea]y\")## [1] │ <grey>\n## [2] │ <gray>"},{"path":"tidyverse-stringr.html","id":"重复","chapter":"第 15 章 正则表达式","heading":"15.4.4 重复","text":"控制匹配次数:?: 0 1+: 1 *: 0 more控制匹配次数:{n}: exactly n{n,}: n {,m}: m{n,m}: n m默认的情况，*, + 匹配都是贪婪的，也就是它会尽可能的匹配更多如果想让它不贪婪，而是变得懒惰起来，可以在*, + 加个?小结一下呢","code":"\nx <- \"Roman numerals: MDCCCLXXXVIII\"\nstr_view(x, \"CC?\")## [1] │ Roman numerals: MD<CC><C>LXXXVIII\nstr_view(x, \"X+\")## [1] │ Roman numerals: MDCCCL<XXX>VIII\nx <- \"Roman numerals: MDCCCLXXXVIII\"\nstr_view(x, \"C{2}\")## [1] │ Roman numerals: MD<CC>CLXXXVIII\nstr_view(x, \"C{2,}\")## [1] │ Roman numerals: MD<CCC>LXXXVIII\nstr_view(x, \"C{2,3}\")## [1] │ Roman numerals: MD<CCC>LXXXVIII\nx <- \"Roman numerals: MDCCCLXXXVIII\"\n\nstr_view(x, \"CLX+\")## [1] │ Roman numerals: MDCC<CLXXX>VIII\nstr_view(x, \"CLX+?\")## [1] │ Roman numerals: MDCC<CLX>XXVIII"},{"path":"tidyverse-stringr.html","id":"分组与回溯引用","chapter":"第 15 章 正则表达式","heading":"15.4.5 分组与回溯引用","text":"我们想看看这些单词里，有哪些字母是重复两次的，比如aa, pp. 如果用上面学的方法发现不是和我们的预想不一样呢。所以需要用到新技术 分组与回溯引用，. 是匹配任何字符(.) 将匹配项括起来，它就用了一个名字，叫\\\\1； 如果有两个括号，就叫\\\\1和\\\\2\\\\1 表示回溯引用，表示引用\\\\1对于的(.)所以(.)\\\\1的意思就是，匹配到了字符，后面还希望有个同样的字符如果是匹配abab, wcwc如果是匹配abba, wccw呢？是不是很神奇？","code":"\nft <- fruit %>% head(10)\nft##  [1] \"apple\"        \"apricot\"      \"avocado\"      \"banana\"       \"bell pepper\" \n##  [6] \"bilberry\"     \"blackberry\"   \"blackcurrant\" \"blood orange\" \"blueberry\"\nstr_view(ft, \".{2}\", match = TRUE)##  [1] │ <ap><pl>e\n##  [2] │ <ap><ri><co>t\n##  [3] │ <av><oc><ad>o\n##  [4] │ <ba><na><na>\n##  [5] │ <be><ll>< p><ep><pe>r\n##  [6] │ <bi><lb><er><ry>\n##  [7] │ <bl><ac><kb><er><ry>\n##  [8] │ <bl><ac><kc><ur><ra><nt>\n##  [9] │ <bl><oo><d ><or><an><ge>\n## [10] │ <bl><ue><be><rr>y\nstr_view(ft, \"(.)\\\\1\", match = TRUE)##  [1] │ a<pp>le\n##  [5] │ be<ll> pe<pp>er\n##  [6] │ bilbe<rr>y\n##  [7] │ blackbe<rr>y\n##  [8] │ blackcu<rr>ant\n##  [9] │ bl<oo>d orange\n## [10] │ bluebe<rr>y\nstr_view(ft, \"(..)\\\\1\", match = TRUE)## [4] │ b<anan>a\nstr_view(ft, \"(.)(.)\\\\2\\\\1\", match = TRUE)## [5] │ bell p<eppe>r"},{"path":"tidyverse-stringr.html","id":"大小写敏感","chapter":"第 15 章 正则表达式","heading":"15.4.6 大小写敏感","text":"希望找出线上平台是google和meet的记录，显然Google和google是一个意思，都应该被筛选出方法1，使用stringr::regex()方法2，使用(?)","code":"\ndf <- tibble::tribble(\n  ~tch_id,  ~online_platform,\n      105,          \"Google\",\n      106,            \"meet\",\n      107,            \"Zoom\",\n      108,            \"zoom\",\n      109,     \"Google Meet\",\n      112, \"Microsoft Teams\",\n      113,                NA\n  )\ndf## # A tibble: 7 × 2\n##   tch_id online_platform\n##    <dbl> <chr>          \n## 1    105 Google         \n## 2    106 meet           \n## 3    107 Zoom           \n## 4    108 zoom           \n## 5    109 Google Meet    \n## 6    112 Microsoft Teams\n## 7    113 <NA>\ndf %>%\n   filter(\n      str_detect(online_platform, regex(\"google|meet\", ignore_case = TRUE))\n   )## # A tibble: 3 × 2\n##   tch_id online_platform\n##    <dbl> <chr>          \n## 1    105 Google         \n## 2    106 meet           \n## 3    109 Google Meet\ndf %>%\n   filter(\n      str_detect(online_platform, \"(?i)google|meet\")\n   )## # A tibble: 3 × 2\n##   tch_id online_platform\n##    <dbl> <chr>          \n## 1    105 Google         \n## 2    106 meet           \n## 3    109 Google Meet"},{"path":"tidyverse-stringr.html","id":"解决实际问题","chapter":"第 15 章 正则表达式","heading":"15.5 解决实际问题","text":"","code":""},{"path":"tidyverse-stringr.html","id":"确定一个字符向量是否匹配一种模式","chapter":"第 15 章 正则表达式","heading":"15.5.1 确定一个字符向量是否匹配一种模式","text":"实际问题中，想判断是否匹配？可以用到str_detect()函数数据框中也是一样用于筛选也很方便stringr::words包含了牛津字典里常用单词我们统计下以t开头的单词，有多少个？我们又一次看到了强制转换.以元音结尾的单词，占比多少？放在数据框里看看, 看看以x结尾的单词是哪些？str_detect() 有一个功能类似的函数str_count()，区别在于，后者不是简单地返回是或否，而是返回字符串中匹配的数量","code":"\nx <- c(\"apple\", \"banana\", \"pear\")\nstr_detect(x, \"e\")## [1]  TRUE FALSE  TRUE## # A tibble: 3 × 1\n##   x     \n##   <chr> \n## 1 apple \n## 2 banana\n## 3 pear\nd %>% mutate(has_e = str_detect(x, \"e\"))## # A tibble: 3 × 2\n##   x      has_e\n##   <chr>  <lgl>\n## 1 apple  TRUE \n## 2 banana FALSE\n## 3 pear   TRUE\nd %>% dplyr::filter(str_detect(x, \"e\"))## # A tibble: 2 × 1\n##   x    \n##   <chr>\n## 1 apple\n## 2 pear\nstringr::words %>% head()## [1] \"a\"        \"able\"     \"about\"    \"absolute\" \"accept\"   \"account\"\n# How many common words start with t?\nsum(str_detect(words, \"^t\"))## [1] 65\n# proportion of common words end with a vowel?\nmean(str_detect(words, \"[aeiou]$\"))## [1] 0.2765306\ntibble(\n  word = words\n) %>%\n  dplyr::filter(str_detect(word, \"x$\"))## # A tibble: 4 × 1\n##   word \n##   <chr>\n## 1 box  \n## 2 sex  \n## 3 six  \n## 4 tax\nx <- c(\"apple\", \"banana\", \"pear\")\nstr_count(x, \"a\")## [1] 1 3 1\ntibble(\n  word = words\n) %>%\n  mutate(\n    vowels = str_count(word, \"[aeiou]\"),\n    consonants = str_count(word, \"[^aeiou]\")\n  )## # A tibble: 980 × 3\n##    word     vowels consonants\n##    <chr>     <int>      <int>\n##  1 a             1          0\n##  2 able          2          2\n##  3 about         3          2\n##  4 absolute      4          4\n##  5 accept        2          4\n##  6 account       3          4\n##  7 achieve       4          3\n##  8 across        2          4\n##  9 act           1          2\n## 10 active        3          3\n## # ℹ 970 more rows"},{"path":"tidyverse-stringr.html","id":"确定匹配的位置","chapter":"第 15 章 正则表达式","heading":"15.5.2 确定匹配的位置","text":"大家放心，正则表达式不会重叠匹配。比如用\"aba\"去匹配\"abababa\"，肉眼感觉是三次，但正则表达式告诉我们是两次，因为不会重叠匹配这里插播一个正则表达式”，它用于匹配单词字符与非单词字符（比如逗号、空格、句点）之间的位置。比如这里返回字符串中s的个数这里的s后面必须跟一个非字符的符号，比如逗号、空格、句点等，因此是2个","code":"\nstr_count(\"abababa\", \"aba\")## [1] 2\nstr_view_all(\"abababa\", \"aba\")## Warning: `str_view()` was deprecated in stringr 1.5.0.\n## ℹ Please use `str_view_all()` instead.\n## This warning is displayed once every 8 hours.\n## Call `lifecycle::last_lifecycle_warnings()` to see where this warning was\n## generated.## [1] │ <aba>b<aba>\nc(\"she sells seashells\") %>% str_count(pattern = \"s\")## [1] 6\nc(\"she sells seashells\") %>% str_count(pattern = \"s\\\\b\")## [1] 2"},{"path":"tidyverse-stringr.html","id":"提取匹配的内容","chapter":"第 15 章 正则表达式","heading":"15.5.3 提取匹配的内容","text":"colour_match 这里是一个字符串，放在pattern参数位置上也是正则表达式了,这里注意以下两者的区别取出sentences中，含有有两种和两种颜色以上的句子。不过，不喜欢这种写法，看着费劲，还是用tidyverse的方法str_extract()提取匹配, 谁先匹配就提取谁str_extract_all()提取全部匹配项","code":"\ncolours <- c(\n  \"red\", \"orange\", \"yellow\",\n  \"green\", \"blue\", \"purple\"\n)\ncolour_match <- str_c(colours, collapse = \"|\")\ncolour_match## [1] \"red|orange|yellow|green|blue|purple\"\nstr_view(\"abcd\", \"ab|cd\")\nstr_view(\"abc\", \"a[bc]d\")\nmore <- \"It is hard to erase blue or red ink.\"\nstr_extract(more, pattern = colour_match)## [1] \"blue\"\nstr_extract_all(more, pattern = colour_match)## [[1]]\n## [1] \"blue\" \"red\"\nmore <- sentences[str_count(sentences, colour_match) > 1]\nmore## [1] \"It is hard to erase blue or red ink.\"          \n## [2] \"The green light in the brown box flickered.\"   \n## [3] \"The sky in the west is tinged with orange red.\"\ntibble(sentence = sentences) %>%\n  filter(str_count(sentences, colour_match) > 1)## # A tibble: 3 × 1\n##   sentence                                      \n##   <chr>                                         \n## 1 It is hard to erase blue or red ink.          \n## 2 The green light in the brown box flickered.   \n## 3 The sky in the west is tinged with orange red.\ntibble(x = more) %>%\n  mutate(color = str_extract(x, colour_match))## # A tibble: 3 × 2\n##   x                                              color \n##   <chr>                                          <chr> \n## 1 It is hard to erase blue or red ink.           blue  \n## 2 The green light in the brown box flickered.    green \n## 3 The sky in the west is tinged with orange red. orange\ntibble(x = more) %>%\n  mutate(color = str_extract_all(x, colour_match))## # A tibble: 3 × 2\n##   x                                              color    \n##   <chr>                                          <list>   \n## 1 It is hard to erase blue or red ink.           <chr [2]>\n## 2 The green light in the brown box flickered.    <chr [2]>\n## 3 The sky in the west is tinged with orange red. <chr [2]>\ntibble(x = more) %>%\n  mutate(color = str_extract_all(x, colour_match)) %>%\n  unnest(color)## # A tibble: 6 × 2\n##   x                                              color \n##   <chr>                                          <chr> \n## 1 It is hard to erase blue or red ink.           blue  \n## 2 It is hard to erase blue or red ink.           red   \n## 3 The green light in the brown box flickered.    green \n## 4 The green light in the brown box flickered.    red   \n## 5 The sky in the west is tinged with orange red. orange\n## 6 The sky in the west is tinged with orange red. red"},{"path":"tidyverse-stringr.html","id":"替换匹配内容","chapter":"第 15 章 正则表达式","heading":"15.5.4 替换匹配内容","text":"只替换匹配的第一项替换全部匹配项","code":"\nx <- c(\"apple\", \"pear\", \"banana\")\nstr_replace(x, \"[aeiou]\", \"-\")## [1] \"-pple\"  \"p-ar\"   \"b-nana\"\nstr_replace_all(x, \"[aeiou]\", \"-\")## [1] \"-ppl-\"  \"p--r\"   \"b-n-n-\""},{"path":"tidyverse-stringr.html","id":"拆分字符串","chapter":"第 15 章 正则表达式","heading":"15.5.5 拆分字符串","text":"这个和str_c()是相反的操作","code":"\nlines <- \"I love my country\"\nlines## [1] \"I love my country\"\nstr_split(lines, \" \")## [[1]]\n## [1] \"I\"       \"love\"    \"my\"      \"country\"\nfields <- c(\"Name: Hadley\", \"Country: NZ\", \"Age: 35\")\nfields %>% str_split(\": \", n = 2, simplify = TRUE)##      [,1]      [,2]    \n## [1,] \"Name\"    \"Hadley\"\n## [2,] \"Country\" \"NZ\"    \n## [3,] \"Age\"     \"35\""},{"path":"tidyverse-stringr.html","id":"进阶部分","chapter":"第 15 章 正则表达式","heading":"15.6 进阶部分","text":"带有条件的匹配","code":""},{"path":"tidyverse-stringr.html","id":"look-ahead","chapter":"第 15 章 正则表达式","heading":"15.6.1 look ahead","text":"想匹配Windows，同时希望Windows右侧是\"95\", \"98\", \"NT\", \"2000\"中的一个Windows后面的 () 是匹配条件，事实上，有四种情形：(?=pattern) 要求此位置的后面必须匹配表达式pattern(?!pattern) 要求此位置的后面不能匹配表达式pattern(?<=pattern) 要求此位置的前面必须匹配表达式pattern(?<!pattern) 要求此位置的前面不能匹配表达式pattern\n注意：对于正则表达式引擎来说，它是从文本头部向尾部（从左到右）开始解析的，因此对于文本尾部方向，称为“前”，因为这个时候，正则引擎还没走到那块；而对文本头部方向，则称为“后”，因为正则引擎已经走过了那一块地方。\n","code":"\nwin <- c(\"Windows2000\", \"Windows\", \"Windows3.1\")\nstr_view(win, \"Windows(?=95|98|NT|2000)\")## [1] │ <Windows>2000\nwin <- c(\"Windows2000\", \"Windows\", \"Windows3.1\")\nstr_view(win, \"Windows(?!95|98|NT|2000)\")## [2] │ <Windows>\n## [3] │ <Windows>3.1"},{"path":"tidyverse-stringr.html","id":"look-behind","chapter":"第 15 章 正则表达式","heading":"15.6.2 look behind","text":"","code":"\nwin <- c(\"2000Windows\", \"Windows\", \"3.1Windows\")\nstr_view(win, \"(?<=95|98|NT|2000)Windows\")## [1] │ 2000<Windows>\nwin <- c(\"2000Windows\", \"Windows\", \"3.1Windows\")\nstr_view(win, \"(?<!95|98|NT|2000)Windows\")## [2] │ <Windows>\n## [3] │ 3.1<Windows>"},{"path":"tidyverse-stringr.html","id":"案例分析","chapter":"第 15 章 正则表达式","heading":"15.7 案例分析","text":"","code":""},{"path":"tidyverse-stringr.html","id":"案例1","chapter":"第 15 章 正则表达式","heading":"15.7.1 案例1","text":"我们希望能提取第二列中的数值，构成新的一列","code":"\ndt <- tibble(\n  x = 1:4,\n  y = c(\"wk 3\", \"week-1\", \"7\", \"w#9\")\n)\ndt## # A tibble: 4 × 2\n##       x y     \n##   <int> <chr> \n## 1     1 wk 3  \n## 2     2 week-1\n## 3     3 7     \n## 4     4 w#9\ndt %>%\n  mutate(\n    z = str_extract(y, \"[0-9]\")\n  )## # A tibble: 4 × 3\n##       x y      z    \n##   <int> <chr>  <chr>\n## 1     1 wk 3   3    \n## 2     2 week-1 1    \n## 3     3 7      7    \n## 4     4 w#9    9"},{"path":"tidyverse-stringr.html","id":"案例2","chapter":"第 15 章 正则表达式","heading":"15.7.2 案例2","text":"提取第二列中的大写字母","code":"\ndf <- data.frame(\n  x = seq_along(1:7),\n  y = c(\"2016123456\", \"20150513\", \"AB2016123456\", \"J2017000987\", \"B2017000987C\", \"aksdf\", \"2014\")\n)\ndf##   x            y\n## 1 1   2016123456\n## 2 2     20150513\n## 3 3 AB2016123456\n## 4 4  J2017000987\n## 5 5 B2017000987C\n## 6 6        aksdf\n## 7 7         2014\ndf %>%\n  mutate(\n    item = str_extract_all(y, \"[A-Z]\")\n  ) %>%\n  tidyr::unnest(item)## # A tibble: 5 × 3\n##       x y            item \n##   <int> <chr>        <chr>\n## 1     3 AB2016123456 A    \n## 2     3 AB2016123456 B    \n## 3     4 J2017000987  J    \n## 4     5 B2017000987C B    \n## 5     5 B2017000987C C"},{"path":"tidyverse-stringr.html","id":"案例3","chapter":"第 15 章 正则表达式","heading":"15.7.3 案例3","text":"要求：中英文分开","code":"\ntb %>%\n  tidyr::extract(\n    # x, c(\"en\", \"cn\"), \"([:alpha:]+)([^:alpha:]+)\",\n    x, c(\"en\", \"cn\"), \"([a-zA-Z]+)([^a-zA-Z]+)\",\n    remove = FALSE\n  )## # A tibble: 3 × 3\n##   x      en    cn   \n##   <chr>  <chr> <chr>\n## 1 I我    I     我   \n## 2 love爱 love  爱   \n## 3 you你  you   你"},{"path":"tidyverse-stringr.html","id":"案例4","chapter":"第 15 章 正则表达式","heading":"15.7.4 案例4","text":"要求：提取起始数字","code":"\ndf <- tibble(x = c(\"1-12week\", \"1-10week\", \"5-12week\"))\ndf## # A tibble: 3 × 1\n##   x       \n##   <chr>   \n## 1 1-12week\n## 2 1-10week\n## 3 5-12week\ndf %>% extract(\n  x,\n  # c(\"start\", \"end\", \"cn\"), \"([:digit:]+)-([:digit:]+)([^:alpha:]+)\",\n  c(\"start\", \"end\", \"cn\"), \"(\\\\d+)-(\\\\d+)(\\\\D+)\",\n  remove = FALSE\n)## # A tibble: 3 × 4\n##   x        start end   cn   \n##   <chr>    <chr> <chr> <chr>\n## 1 1-12week 1     12    week \n## 2 1-10week 1     10    week \n## 3 5-12week 5     12    week"},{"path":"tidyverse-stringr.html","id":"案例5","chapter":"第 15 章 正则表达式","heading":"15.7.5 案例5","text":"要求：提取大写字母后的数字思考题，如何提取大写字母后的连续数字，比如B217C后面的217如何提取提取数字前的大写字母？为什么第一个正则表达式返回结果为””“?”的意思是匹配0次或者1次","code":"\ndf <- tibble(\n  x = c(\"12W34\", \"AB2C46\", \"B217C\", \"akTs6df\", \"21WD4\")\n)\ndf %>%\n  mutate(item = str_extract_all(x, \"(?<=[A-Z])[0-9]\")) %>%\n  tidyr::unnest(item)## # A tibble: 5 × 2\n##   x      item \n##   <chr>  <chr>\n## 1 12W34  3    \n## 2 AB2C46 2    \n## 3 AB2C46 4    \n## 4 B217C  2    \n## 5 21WD4  4\nx <- \"Roman numerals: MDCCCLXXXVIII\"\nstr_match_all(x, \"C?\") ## [[1]]\n##       [,1]\n##  [1,] \"\"  \n##  [2,] \"\"  \n##  [3,] \"\"  \n##  [4,] \"\"  \n##  [5,] \"\"  \n##  [6,] \"\"  \n##  [7,] \"\"  \n##  [8,] \"\"  \n##  [9,] \"\"  \n## [10,] \"\"  \n## [11,] \"\"  \n## [12,] \"\"  \n## [13,] \"\"  \n## [14,] \"\"  \n## [15,] \"\"  \n## [16,] \"\"  \n## [17,] \"\"  \n## [18,] \"\"  \n## [19,] \"C\" \n## [20,] \"C\" \n## [21,] \"C\" \n## [22,] \"\"  \n## [23,] \"\"  \n## [24,] \"\"  \n## [25,] \"\"  \n## [26,] \"\"  \n## [27,] \"\"  \n## [28,] \"\"  \n## [29,] \"\"  \n## [30,] \"\"\nstr_match_all(x, \"CC?\")## [[1]]\n##      [,1]\n## [1,] \"CC\"\n## [2,] \"C\""},{"path":"tidyverse-stringr.html","id":"案例6","chapter":"第 15 章 正则表达式","heading":"15.7.6 案例6","text":"提取数字并求和","code":"\ndf <- tibble(\n  x = c(\"1234\", \"B246\", \"217C\", \"2357f\", \"21WD4\")\n)\ndf## # A tibble: 5 × 1\n##   x    \n##   <chr>\n## 1 1234 \n## 2 B246 \n## 3 217C \n## 4 2357f\n## 5 21WD4\ndf %>%\n  mutate(num = str_match_all(x, \"\\\\d\")) %>%\n  unnest(num) %>%\n  mutate_at(vars(num), as.numeric) %>%\n  group_by(x) %>%\n  summarise(sum = sum(num))## # A tibble: 5 × 2\n##   x       sum\n##   <chr> <dbl>\n## 1 1234     10\n## 2 217C     10\n## 3 21WD4     7\n## 4 2357f    17\n## 5 B246     12"},{"path":"tidyverse-stringr.html","id":"案例7","chapter":"第 15 章 正则表达式","heading":"15.7.7 案例7","text":"","code":"\ntext <- \"Quantum entanglement is a physical phenomenon that occurs when pairs or groups of particles are generated, interact, or share spatial proximity in ways such that the quantum state of each particle cannot be described independently of the state of the others, even when the particles are separated by a large distance.\"\n\n\npairs <-\n  tibble::tribble(\n    ~item, ~code,\n    \"Quantum entanglement\", \"A01\",\n    \"physical phenomenon\", \"A02\",\n    \"quantum state\", \"A03\",\n    \"quantum mechanics\", \"A04\"\n  ) %>%\n  tibble::deframe()\n\n\n\ntext %>% str_replace_all(pairs)## [1] \"A01 is a A02 that occurs when pairs or groups of particles are generated, interact, or share spatial proximity in ways such that the A03 of each particle cannot be described independently of the state of the others, even when the particles are separated by a large distance.\""},{"path":"tidyverse-stringr.html","id":"回答提问","chapter":"第 15 章 正则表达式","heading":"15.8 回答提问","text":"回到上课前的提问：如何提取Sichuan Univ后面的学院？当然还有其他的解决办法","code":"## # A tibble: 8 × 2\n##      No address                      \n##   <int> <chr>                        \n## 1     1 Sichuan Univ, Coll Chem      \n## 2     2 Sichuan Univ, Coll Elect Engn\n## 3     3 Sichuan Univ, Dept Phys      \n## 4     4 Sichuan Univ, Coll Life Sci  \n## 5     6 Sichuan Univ, Food Engn      \n## 6     7 Sichuan Univ, Coll Phys      \n## 7     8 Sichuan Univ, Sch Business   \n## 8     9 Wuhan Univ, Mat Sci\nd %>%\n  dplyr::mutate(\n    coll = str_extract(address, \"(?<=Sichuan Univ,).*\")\n  ) %>%\n  tidyr::unnest(coll, keep_empty = TRUE)## # A tibble: 8 × 3\n##      No address                       coll              \n##   <int> <chr>                         <chr>             \n## 1     1 Sichuan Univ, Coll Chem       \" Coll Chem\"      \n## 2     2 Sichuan Univ, Coll Elect Engn \" Coll Elect Engn\"\n## 3     3 Sichuan Univ, Dept Phys       \" Dept Phys\"      \n## 4     4 Sichuan Univ, Coll Life Sci   \" Coll Life Sci\"  \n## 5     6 Sichuan Univ, Food Engn       \" Food Engn\"      \n## 6     7 Sichuan Univ, Coll Phys       \" Coll Phys\"      \n## 7     8 Sichuan Univ, Sch Business    \" Sch Business\"   \n## 8     9 Wuhan Univ, Mat Sci            <NA>\nd %>% mutate(\n  coll = str_remove_all(address, \".*,\")\n)\nd %>% tidyr::separate(\n  address,\n  into = c(\"univ\", \"coll\"), sep = \",\", remove = FALSE\n)\nd %>%\n  tidyr::extract(\n    address, c(\"univ\", \"coll\"), \"(Sichuan Univ), (.+)\",\n    remove = FALSE\n  )"},{"path":"tidyverse-tibble.html","id":"tidyverse-tibble","chapter":"第 16 章 简单数据框","heading":"第 16 章 简单数据框","text":"事实上，library(tidyverse)已经加装了library(tibble)","code":"\nlibrary(tidyverse)\nlibrary(tibble) "},{"path":"tidyverse-tibble.html","id":"tidyverse-家族","chapter":"第 16 章 简单数据框","heading":"16.1 tidyverse 家族","text":"前面陆续介绍了tidyverse家族，家庭主要成员包括","code":""},{"path":"tidyverse-tibble.html","id":"人性化的tibble","chapter":"第 16 章 简单数据框","heading":"16.2 人性化的tibble","text":"tibble是用来替换data.frame类型的扩展的数据框tibble继承了data.frame，是弱类型的。换句话说，tibble是data.frame的子类型tibble与data.frame有相同的语法，使用起来更方便tibble更早的检查数据，方便写出更干净、更多富有表现力的代码tibble对data.frame做了重新的设定：tibble，不关心输入类型，可存储任意类型，包括list类型tibble，没有行名设置 row.namestibble，支持任意的列名tibble，会自动添加列名tibble，类型只能回收长度为1的输入tibble，会懒加载参数，并按顺序运行tibble，是tbl_df类型","code":""},{"path":"tidyverse-tibble.html","id":"tibble-与-data.frame","chapter":"第 16 章 简单数据框","heading":"16.3 tibble 与 data.frame","text":"传统创建数据框发现，data.frame()会自动将字符串型的变量转换成因子型，如果想保持原来的字符串型，就得\nNote： - 在R 4.0 后，data.frame()\n不会将字符串型变量自动转换成因子型\n用tibble创建数据框，不会这么麻烦，输出的就是原来的字符串类型我们有时候喜欢这样，构建两个有关联的变量， 比如但是，如果用传统的data.frame()来构建，会报错因此，在这一点上tibble()做的比较人性化。大家还可以发现tibble另一个优势：tibble输出时，会显示多一行，用来指定每一列的类型。tibble用缩写定义了7种类型：","code":"\ndata.frame(\n  a = 1:5,\n  b = letters[1:5]\n)##   a b\n## 1 1 a\n## 2 2 b\n## 3 3 c\n## 4 4 d\n## 5 5 e\ndata.frame(\n  a = 1:5,\n  b = letters[1:5],\n  stringsAsFactors = FALSE\n)##   a b\n## 1 1 a\n## 2 2 b\n## 3 3 c\n## 4 4 d\n## 5 5 e\ntibble(\n  a = 1:5,\n  b = letters[1:5]\n)## # A tibble: 5 × 2\n##       a b    \n##   <int> <chr>\n## 1     1 a    \n## 2     2 b    \n## 3     3 c    \n## 4     4 d    \n## 5     5 e\ntb <- tibble(\n  x = 1:3,\n  y = x + 2\n)\ntb## # A tibble: 3 × 2\n##       x     y\n##   <int> <dbl>\n## 1     1     3\n## 2     2     4\n## 3     3     5\ndf <- data.frame(\n  x = 1:3,\n  y = x + 2\n)## Error in eval(expr, envir, enclos): object 'x' not found\ndf## function (x, df1, df2, ncp, log = FALSE) \n## {\n##     if (missing(ncp)) \n##         .Call(C_df, x, df1, df2, log)\n##     else .Call(C_dnf, x, df1, df2, ncp, log)\n## }\n## <bytecode: 0x127f3b340>\n## <environment: namespace:stats>"},{"path":"tidyverse-tibble.html","id":"tibble数据操作","chapter":"第 16 章 简单数据框","heading":"16.4 tibble数据操作","text":"","code":""},{"path":"tidyverse-tibble.html","id":"创建tibble","chapter":"第 16 章 简单数据框","heading":"16.4.1 创建tibble","text":"tibble()创建一个tibble类型的data.frame:刚才提到了，可以这样，为了让每列更加直观，也可以tribble()创建，数据量不大的时候，挺方便的","code":"\ntibble(a = 1:5, b = letters[1:5])## # A tibble: 5 × 2\n##       a b    \n##   <int> <chr>\n## 1     1 a    \n## 2     2 b    \n## 3     3 c    \n## 4     4 d    \n## 5     5 e\ntibble(\n  a = 1:5,\n  b = 10:14,\n  c = a + b\n)## # A tibble: 5 × 3\n##       a     b     c\n##   <int> <int> <int>\n## 1     1    10    11\n## 2     2    11    13\n## 3     3    12    15\n## 4     4    13    17\n## 5     5    14    19\ntribble(\n  ~x, ~y, ~z,\n  \"a\", 2, 3.6,\n  \"b\", 1, 8.5\n)## # A tibble: 2 × 3\n##   x         y     z\n##   <chr> <dbl> <dbl>\n## 1 a         2   3.6\n## 2 b         1   8.5"},{"path":"tidyverse-tibble.html","id":"转换成tibble类型","chapter":"第 16 章 简单数据框","heading":"16.4.2 转换成tibble类型","text":"转换成tibble类型意思就是说，刚开始不是tibble, 现在转换成tibble， 包括data.frame转换成tibblevector转换成tibblelist转换成tibblematrix转换成tibble","code":""},{"path":"tidyverse-tibble.html","id":"data.frame转换成tibble","chapter":"第 16 章 简单数据框","heading":"16.4.2.1 data.frame转换成tibble","text":"","code":"\nt1 <- iris[1:6, 1:4] # data.frame\nclass(t1)## [1] \"data.frame\"\nas_tibble(t1)## # A tibble: 6 × 4\n##   Sepal.Length Sepal.Width Petal.Length Petal.Width\n##          <dbl>       <dbl>        <dbl>       <dbl>\n## 1          5.1         3.5          1.4         0.2\n## 2          4.9         3            1.4         0.2\n## 3          4.7         3.2          1.3         0.2\n## 4          4.6         3.1          1.5         0.2\n## 5          5           3.6          1.4         0.2\n## 6          5.4         3.9          1.7         0.4"},{"path":"tidyverse-tibble.html","id":"vector转型到tibble","chapter":"第 16 章 简单数据框","heading":"16.4.2.2 vector转型到tibble","text":"","code":"\nx <- as_tibble(1:5) # Use `tibble::enframe()\nx## # A tibble: 5 × 1\n##   value\n##   <int>\n## 1     1\n## 2     2\n## 3     3\n## 4     4\n## 5     5"},{"path":"tidyverse-tibble.html","id":"把list转型为tibble","chapter":"第 16 章 简单数据框","heading":"16.4.2.3 把list转型为tibble","text":"把tibble再转为list? .list(df)","code":"\ndf <- as_tibble(list(x = 1:6, y = runif(6), z = 6:1))\ndf## # A tibble: 6 × 3\n##       x     y     z\n##   <int> <dbl> <int>\n## 1     1 0.762     6\n## 2     2 0.609     5\n## 3     3 0.449     4\n## 4     4 0.905     3\n## 5     5 0.378     2\n## 6     6 0.682     1"},{"path":"tidyverse-tibble.html","id":"把matrix转型为tibble","chapter":"第 16 章 简单数据框","heading":"16.4.2.4 把matrix转型为tibble","text":"tibble转回matrix? .matrix(df)","code":"\nm <- matrix(rnorm(15), ncol = 5)\nas_tibble(m)## Warning: The `x` argument of `as_tibble.matrix()` must have unique column names if\n## `.name_repair` is omitted as of tibble 2.0.0.\n## ℹ Using compatibility `.name_repair`.\n## This warning is displayed once every 8 hours.\n## Call `lifecycle::last_lifecycle_warnings()` to see where this warning was\n## generated.## # A tibble: 3 × 5\n##       V1     V2     V3      V4     V5\n##    <dbl>  <dbl>  <dbl>   <dbl>  <dbl>\n## 1 -0.255 -0.105  2.23   0.0852  1.16 \n## 2  0.626  0.638  2.04  -0.762  -0.562\n## 3 -0.325  1.51  -0.830 -0.197  -1.06"},{"path":"tidyverse-tibble.html","id":"tibble简单操作","chapter":"第 16 章 简单数据框","heading":"16.4.3 tibble简单操作","text":"构建一个简单的数据框增加一列增加一行在第二行，增加一行","code":"\ndf <- tibble(\n  x = 1:2,\n  y = 2:1\n)\n\ndf## # A tibble: 2 × 2\n##       x     y\n##   <int> <int>\n## 1     1     2\n## 2     2     1\nadd_column(df, z = 0:1, w = 0)## # A tibble: 2 × 4\n##       x     y     z     w\n##   <int> <int> <int> <dbl>\n## 1     1     2     0     0\n## 2     2     1     1     0\nadd_row(df, x = 99, y = 9)## # A tibble: 3 × 2\n##       x     y\n##   <dbl> <dbl>\n## 1     1     2\n## 2     2     1\n## 3    99     9\nadd_row(df, x = 99, y = 9, .before = 2)## # A tibble: 3 × 2\n##       x     y\n##   <dbl> <dbl>\n## 1     1     2\n## 2    99     9\n## 3     2     1"},{"path":"tidyverse-tibble.html","id":"有用的函数lst","chapter":"第 16 章 简单数据框","heading":"16.4.4 有用的函数lst","text":"lst，创建一个list，具有tibble特性的list。","code":"\nlst(n = 5, x = runif(n), y = TRUE)## $n\n## [1] 5\n## \n## $x\n## [1] 0.70030508 0.12103882 0.00577521 0.32726819 0.52189998\n## \n## $y\n## [1] TRUE"},{"path":"tidyverse-tibble.html","id":"有用的函数enframe","chapter":"第 16 章 简单数据框","heading":"16.4.5 有用的函数enframe","text":"enframe()将矢量快速创建tibble，，创建的tibble只有2列: name和value","code":"\nenframe(1:3)## # A tibble: 3 × 2\n##    name value\n##   <int> <int>\n## 1     1     1\n## 2     2     2\n## 3     3     3\nenframe(c(a = 5, b = 7, c = 9))## # A tibble: 3 × 2\n##   name  value\n##   <chr> <dbl>\n## 1 a         5\n## 2 b         7\n## 3 c         9"},{"path":"tidyverse-tibble.html","id":"有用的函数deframe","chapter":"第 16 章 简单数据框","heading":"16.4.6 有用的函数deframe","text":"deframe()可以看做是enframe() 的反操作，把tibble反向转成向量","code":"\ndf <- enframe(c(a = 5, b = 7))\ndf## # A tibble: 2 × 2\n##   name  value\n##   <chr> <dbl>\n## 1 a         5\n## 2 b         7\n# change to vector\ndeframe(df)## a b \n## 5 7"},{"path":"tidyverse-tibble.html","id":"读取文件-1","chapter":"第 16 章 简单数据框","heading":"16.4.7 读取文件","text":"read_csv()读取文件时，生成的直接就是tibble","code":"\nread_csv(\"./demo_data/wages.csv\")## Rows: 1379 Columns: 6\n## ── Column specification ────────────────────────────────────────────────────────\n## Delimiter: \",\"\n## chr (2): sex, race\n## dbl (4): earn, height, ed, age\n## \n## ℹ Use `spec()` to retrieve the full column specification for this data.\n## ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.## # A tibble: 1,379 × 6\n##      earn height sex    race        ed   age\n##     <dbl>  <dbl> <chr>  <chr>    <dbl> <dbl>\n##  1 79571.   73.9 male   white       16    49\n##  2 96397.   66.2 female white       16    62\n##  3 48711.   63.8 female white       16    33\n##  4 80478.   63.2 female other       16    95\n##  5 82089.   63.1 female white       17    43\n##  6 15313.   64.5 female white       15    30\n##  7 47104.   61.5 female white       12    53\n##  8 50960.   73.3 male   white       17    50\n##  9  3213.   72.2 male   hispanic    15    25\n## 10 42997.   72.4 male   white       12    30\n## # ℹ 1,369 more rows"},{"path":"tidyverse-tibble.html","id":"关于行名","chapter":"第 16 章 简单数据框","heading":"16.5 关于行名","text":"data.frame是支持行名的，但tibble不支持行名，这也是两者不同的地方判断是否有行名但是对于tibble需要注意的：有时候遇到含有行名的data.frame，转换成tibble后，行名会被丢弃如果想保留行名，就需要把行名转换成单独的一列举个例子把行名转换为单独的一列把行索引转换为单独的一列","code":"\n#  create data.frame\ndf <- data.frame(x = 1:3, y = 3:1)\n\n# add row name\nrow.names(df) <- LETTERS[1:3]\ndf##   x y\n## A 1 3\n## B 2 2\n## C 3 1\nhas_rownames(df)## [1] TRUE\ntb <- tibble(x = 1:3, y = 3:1)\n\nrow.names(tb) <- LETTERS[1:3]## Warning: Setting row names on a tibble is deprecated.\ndf <- mtcars[1:3, 1:3]\ndf##                mpg cyl disp\n## Mazda RX4     21.0   6  160\n## Mazda RX4 Wag 21.0   6  160\n## Datsun 710    22.8   4  108\nrownames_to_column(df, var = \"rowname\")##         rowname  mpg cyl disp\n## 1     Mazda RX4 21.0   6  160\n## 2 Mazda RX4 Wag 21.0   6  160\n## 3    Datsun 710 22.8   4  108\nrowid_to_column(df, var = \"rowid\")##   rowid  mpg cyl disp\n## 1     1 21.0   6  160\n## 2     2 21.0   6  160\n## 3     3 22.8   4  108"},{"path":"tidyverse-tibble.html","id":"修复列名","chapter":"第 16 章 简单数据框","heading":"16.6 修复列名","text":"规范的来说，数据框的列名应该是唯一。但现实中代码是人写的，因此可能会稀奇古怪的，所幸的是tibble也提供了人性化的解决方案.name_repair = \"check_unique\" 检查列名唯一性，但不做修复（默认）.name_repair = \"check_unique\" 检查列名唯一性，但不做修复（默认）.name_repair = \"minimal\"， 不检查也不修复，维持现状.name_repair = \"minimal\"， 不检查也不修复，维持现状.name_repair = \"unique\" 修复列名，使得列名唯一且不为空.name_repair = \"unique\" 修复列名，使得列名唯一且不为空.name_repair = \"universal\" 修复列名，使得列名唯一且语法可读.name_repair = \"universal\" 修复列名，使得列名唯一且语法可读具体使用方法：如果认为x...1, x...2 不符合自己的审美，可以指定修复函数注意make.unique(names, sep = \".\")和make.names(names, unique = FALSE, allow_ = TRUE) 是基础包的函数，可通过?make.unique()或者make.names()获取说明文档。当然也可以自定义函数感觉越说越复杂了，事实上，我们写数据框的时候，完全可以避免上述问题，只要做到规范列名。如果真正遇到比较乱的列名，推荐使用janitor::clean_names()一步到位。","code":"\ntibble(x = 1, x = 2)## Error in `tibble()`:\n## ! Column name `x` must not be duplicated.\n## Use `.name_repair` to specify repair.\n## Caused by error in `repaired_names()`:\n## ! Names must be unique.\n## ✖ These names are duplicated:\n##   * \"x\" at locations 1 and 2.\ntibble(x = 1, x = 2, .name_repair = \"minimal\")## # A tibble: 1 × 2\n##       x     x\n##   <dbl> <dbl>\n## 1     1     2\ntibble(x = 1, x = 2, .name_repair = \"unique\")## New names:\n## • `x` -> `x...1`\n## • `x` -> `x...2`## # A tibble: 1 × 2\n##   x...1 x...2\n##   <dbl> <dbl>\n## 1     1     2\ntibble(x = 1, x = 2, .name_repair = \"universal\")## New names:\n## • `x` -> `x...1`\n## • `x` -> `x...2`## # A tibble: 1 × 2\n##   x...1 x...2\n##   <dbl> <dbl>\n## 1     1     2\ntibble(`a 1` = 1, `a 2` = 2, .name_repair = \"universal\")## New names:\n## • `a 1` -> `a.1`\n## • `a 2` -> `a.2`## # A tibble: 1 × 2\n##     a.1   a.2\n##   <dbl> <dbl>\n## 1     1     2\ntibble(x = 1, x = 2, .name_repair = make.unique)## # A tibble: 1 × 2\n##       x   x.1\n##   <dbl> <dbl>\n## 1     1     2\ntibble(x = 1, x = 2, .name_repair = ~ make.unique(.x, sep = \"_\"))## # A tibble: 1 × 2\n##       x   x_1\n##   <dbl> <dbl>\n## 1     1     2\ntibble(x = 1, x = 2, .name_repair = ~ make.names(., unique = TRUE))## # A tibble: 1 × 2\n##       x   x.1\n##   <dbl> <dbl>\n## 1     1     2\nfix_names <- function(x) gsub(\"\\\\s+\", \"_\", x)\n\ntibble(`year 1` = 1, `year 2` = 2, .name_repair = fix_names)## # A tibble: 1 × 2\n##   year_1 year_2\n##    <dbl>  <dbl>\n## 1      1      2\nlibrary(janitor)## \n## Attaching package: 'janitor'## The following objects are masked from 'package:stats':\n## \n##     chisq.test, fisher.test\ntibble(`year 1` = 1, `year 2` = 2) %>%\n  clean_names()## # A tibble: 1 × 2\n##   year_1 year_2\n##    <dbl>  <dbl>\n## 1      1      2"},{"path":"tidyverse-tibble.html","id":"list-columns-列表列","chapter":"第 16 章 简单数据框","heading":"16.7 List-columns (列表列)","text":"tibble 本质上是向量构成的列表。如下图所示大多情况下，我们接触到的向量是原子型向量(atomic vectors)，所谓原子型向量就是向量元素为单个值，比如 \"\" 或者 1tibble还有可以允许某一列为列表(list)，那么列表构成的列，称之为列表列（list columns）这样一来，列表列非常灵活，因为列表元素可以是原子型向量、列表、矩阵或者小的tibble","code":""},{"path":"tidyverse-tibble.html","id":"nested-tibble","chapter":"第 16 章 简单数据框","heading":"16.8 nested tibble","text":"tibble的列表列装载数据的能力很强大，也很灵活。下面，我们将介绍如何创建和操控有列表列的tibble。","code":""},{"path":"tidyverse-tibble.html","id":"creating","chapter":"第 16 章 简单数据框","heading":"16.8.1 creating","text":"假定我们这里有一个tibble， 我们有三种方法可以创建列表列nest()summarize() list()mutate() map()","code":""},{"path":"tidyverse-tibble.html","id":"tidyrnest","chapter":"第 16 章 简单数据框","heading":"16.8.1.1 tidyr::nest()","text":"使用tidyr::nest()函数，创建有列表列的tibble。nest() 为每种species创建了一个小的tibble， 每个小的tibble对应一个species可以看到，tb的整个data列是一个list如果想偷懒，也可以用select()的语法可以同时创建多个列表列","code":"\nlibrary(tidyverse)\nlibrary(palmerpenguins)\ndf <- penguins %>% \n  drop_na() %>% \n  select(species, bill_length_mm, bill_depth_mm, body_mass_g)\ndf## # A tibble: 333 × 4\n##    species bill_length_mm bill_depth_mm body_mass_g\n##    <fct>            <dbl>         <dbl>       <int>\n##  1 Adelie            39.1          18.7        3750\n##  2 Adelie            39.5          17.4        3800\n##  3 Adelie            40.3          18          3250\n##  4 Adelie            36.7          19.3        3450\n##  5 Adelie            39.3          20.6        3650\n##  6 Adelie            38.9          17.8        3625\n##  7 Adelie            39.2          19.6        4675\n##  8 Adelie            41.1          17.6        3200\n##  9 Adelie            38.6          21.2        3800\n## 10 Adelie            34.6          21.1        4400\n## # ℹ 323 more rows\ntb <- df %>% \n  nest(data = c(bill_length_mm, bill_depth_mm, body_mass_g))\n\ntb## # A tibble: 3 × 2\n##   species   data              \n##   <fct>     <list>            \n## 1 Adelie    <tibble [146 × 3]>\n## 2 Gentoo    <tibble [119 × 3]>\n## 3 Chinstrap <tibble [68 × 3]>\ntb$data[[1]]## # A tibble: 146 × 3\n##    bill_length_mm bill_depth_mm body_mass_g\n##             <dbl>         <dbl>       <int>\n##  1           39.1          18.7        3750\n##  2           39.5          17.4        3800\n##  3           40.3          18          3250\n##  4           36.7          19.3        3450\n##  5           39.3          20.6        3650\n##  6           38.9          17.8        3625\n##  7           39.2          19.6        4675\n##  8           41.1          17.6        3200\n##  9           38.6          21.2        3800\n## 10           34.6          21.1        4400\n## # ℹ 136 more rows\ntb$data %>% typeof()## [1] \"list\"\ndf %>% \n  nest(data = !species)## # A tibble: 3 × 2\n##   species   data              \n##   <fct>     <list>            \n## 1 Adelie    <tibble [146 × 3]>\n## 2 Gentoo    <tibble [119 × 3]>\n## 3 Chinstrap <tibble [68 × 3]>\ndf %>% \n  nest(data1 = c(bill_length_mm, bill_depth_mm), data2 = body_mass_g)## # A tibble: 3 × 3\n##   species   data1              data2             \n##   <fct>     <list>             <list>            \n## 1 Adelie    <tibble [146 × 2]> <tibble [146 × 1]>\n## 2 Gentoo    <tibble [119 × 2]> <tibble [119 × 1]>\n## 3 Chinstrap <tibble [68 × 2]>  <tibble [68 × 1]>"},{"path":"tidyverse-tibble.html","id":"tidyrsummarise","chapter":"第 16 章 简单数据框","heading":"16.8.1.2 tidyr::summarise()","text":"第 11 章介绍数据处理， group_by() 和 summarize()组合可以将向量分组后分别压缩成单个值，事实上，summarize()还可以创建列表列。data就是构建的列表列，它的每个元素都是一个向量，对应一个species。这种方法和nest()方法很相似，不同在于，summarise() + list() 构建的列表列其元素是原子型向量，而nest()构建的是tibble.summarise() + list()的方法还可以在创建列表列之前，对数据简单处理，比如排序或者做筛选","code":"\ndf_collapsed <- df %>% \n  group_by(species) %>% \n  summarise(\n    data = list(bill_length_mm)\n  )\n\ndf_collapsed## # A tibble: 3 × 2\n##   species   data       \n##   <fct>     <list>     \n## 1 Adelie    <dbl [146]>\n## 2 Chinstrap <dbl [68]> \n## 3 Gentoo    <dbl [119]>\ndf_collapsed$data[[1]] %>% typeof()## [1] \"double\"\ndf %>% \n  group_by(species) %>% \n  summarise(\n    data = list(sort(bill_length_mm))\n  )## # A tibble: 3 × 2\n##   species   data       \n##   <fct>     <list>     \n## 1 Adelie    <dbl [146]>\n## 2 Chinstrap <dbl [68]> \n## 3 Gentoo    <dbl [119]>\ndf %>% \n  group_by(species) %>% \n  summarise(\n    data = list(bill_length_mm[bill_length_mm > 45])\n  )## # A tibble: 3 × 2\n##   species   data      \n##   <fct>     <list>    \n## 1 Adelie    <dbl [3]> \n## 2 Chinstrap <dbl [62]>\n## 3 Gentoo    <dbl [98]>"},{"path":"tidyverse-tibble.html","id":"dplyrmutate","chapter":"第 16 章 简单数据框","heading":"16.8.1.3 dplyr::mutate()","text":"第三种方法是用rowwise() + mutate()，比如，下面为每个岛屿(island) 创建一个与该岛企鹅数量等长的随机数向量，简单点说，这个岛屿上企鹅有多少只，那么随机数的个数就有多少个。","code":"\npenguins %>% \n  drop_na() %>% \n  group_by(island) %>% \n  summarise(\n    n_num = n()\n  ) %>% \n  \n  rowwise() %>% \n  mutate(random = list(rnorm(n = n_num))) %>% \n  ungroup()## # A tibble: 3 × 3\n##   island    n_num random     \n##   <fct>     <int> <list>     \n## 1 Biscoe      163 <dbl [163]>\n## 2 Dream       123 <dbl [123]>\n## 3 Torgersen    47 <dbl [47]>"},{"path":"tidyverse-tibble.html","id":"unnesting","chapter":"第 16 章 简单数据框","heading":"16.8.2 Unnesting","text":"用unnest()函数可以把列表列转换成常规列的形式，比如上节中的tb这里把想要打开的列data，作为参数提供给unnest(cols = )","code":"\ntb## # A tibble: 3 × 2\n##   species   data              \n##   <fct>     <list>            \n## 1 Adelie    <tibble [146 × 3]>\n## 2 Gentoo    <tibble [119 × 3]>\n## 3 Chinstrap <tibble [68 × 3]>\ntb %>% \n  unnest(cols = data)## # A tibble: 333 × 4\n##    species bill_length_mm bill_depth_mm body_mass_g\n##    <fct>            <dbl>         <dbl>       <int>\n##  1 Adelie            39.1          18.7        3750\n##  2 Adelie            39.5          17.4        3800\n##  3 Adelie            40.3          18          3250\n##  4 Adelie            36.7          19.3        3450\n##  5 Adelie            39.3          20.6        3650\n##  6 Adelie            38.9          17.8        3625\n##  7 Adelie            39.2          19.6        4675\n##  8 Adelie            41.1          17.6        3200\n##  9 Adelie            38.6          21.2        3800\n## 10 Adelie            34.6          21.1        4400\n## # ℹ 323 more rows"},{"path":"tidyverse-tibble.html","id":"manipulating","chapter":"第 16 章 简单数据框","heading":"16.8.3 Manipulating","text":"操控列表列是一件有趣的事情，我们常常会借助于行方向的操作(rowwise), 请看第 ?? 章。比如找出每个岛屿企鹅的数量，我们需要对data列表列的元素依次迭代，再比如，求每组下企鹅嘴峰长度与嘴峰厚度的相关系数","code":"\ntb %>% \n  rowwise() %>% \n  mutate(num_species = nrow(data))## # A tibble: 3 × 3\n## # Rowwise: \n##   species   data               num_species\n##   <fct>     <list>                   <int>\n## 1 Adelie    <tibble [146 × 3]>         146\n## 2 Gentoo    <tibble [119 × 3]>         119\n## 3 Chinstrap <tibble [68 × 3]>           68\ntb %>% \n  rowwise() %>% \n  mutate(corr_coef = cor(data$bill_length_mm, data$bill_depth_mm))## # A tibble: 3 × 3\n## # Rowwise: \n##   species   data               corr_coef\n##   <fct>     <list>                 <dbl>\n## 1 Adelie    <tibble [146 × 3]>     0.386\n## 2 Gentoo    <tibble [119 × 3]>     0.654\n## 3 Chinstrap <tibble [68 × 3]>      0.654"},{"path":"tidyverse-tibble.html","id":"延伸阅读-1","chapter":"第 16 章 简单数据框","heading":"16.9 延伸阅读","text":"1、阅读Hadley Wickham的r4ds这本书第10章。2、 tibble的官方主页：https://tibble.tidyverse.org/3、创建列表列的方法，可以参考nested tibble和\nlist-columns4、本章借鉴了https://dcl-prog.stanford.edu/的图片，特此感谢。","code":""},{"path":"tidyverse-workflow.html","id":"tidyverse-workflow","chapter":"第 17 章 回望tidyverse之旅","heading":"第 17 章 回望tidyverse之旅","text":"本章做个小结，通过案例复习和串讲下tidyverse中常用的核心部件（事实上，tidyverse套餐比我们列出的要丰富）。\n图 17.1: 图片来源Silvia Canelón在R-Ladies Chicago的报告\n","code":"\nlibrary(tidyverse)## ── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n## ✔ dplyr     1.1.3     ✔ readr     2.1.4\n## ✔ forcats   1.0.0     ✔ stringr   1.5.0\n## ✔ ggplot2   3.4.3     ✔ tibble    3.2.1\n## ✔ lubridate 1.9.2     ✔ tidyr     1.3.0\n## ✔ purrr     1.0.2     \n## ── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n## ✖ dplyr::filter() masks stats::filter()\n## ✖ dplyr::lag()    masks stats::lag()\n## ℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors"},{"path":"tidyverse-workflow.html","id":"readr-宏包","chapter":"第 17 章 回望tidyverse之旅","heading":"17.1 readr 宏包","text":"读入数据是第一步，我们可以用readr导入数据\n提示：\n\n逗号(,)分割的文件 read_csv()\n\n制表符(tab)分割的文件 read_tsv()\n\n任意的分割符 read_delim()\n\n固定宽度的文件 read_fwf()\n\n空格分割的文件 read_table()\n\n网页log文件 read_log()\n读取外部数据保存到外部文件","code":"\npenguins <- read_csv(\"./demo_data/penguins.csv\") ## Rows: 344 Columns: 8\n## ── Column specification ────────────────────────────────────────────────────────\n## Delimiter: \",\"\n## chr (3): species, island, sex\n## dbl (5): bill_length_mm, bill_depth_mm, flipper_length_mm, body_mass_g, year\n## \n## ℹ Use `spec()` to retrieve the full column specification for this data.\n## ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\npenguins %>% write_csv(\"newdata.csv\")"},{"path":"tidyverse-workflow.html","id":"tibble-宏包","chapter":"第 17 章 回望tidyverse之旅","heading":"17.2 tibble 宏包","text":"R中的对多变量数据的标准保存形式是 dataframe，而tibble是dataframe的进化版，它有如下优点： 1. 生成的数据框数据每列可以保持原来的数据格式，不会被强制性改变,即字符串，不会莫名其妙的变成因子格式； 2. 查看数据时，不再会一行显示不下，多行显示得非常丑； 3. 数据操作速度会更快如下图，直接查看tibble格式的数据，可以一目了然的看清数据的大小和每列的格式有两种方式来创建tibble格式的数据用tibble函数直接创建\n用tibble函数直接创建其他格式转化, 例如用read.csv读取的数据默认是dataframe格式，就可以使用as_tibble转换为tibble格式\n其他格式转化, 例如用read.csv读取的数据默认是dataframe格式，就可以使用as_tibble转换为tibble格式下面你可以看到两者的区别：在R Markdown里两者区别不大，但在console中，区别很明显的。比如tibble不一样的地方有：列出了变量的类型(这个很不错)只列出10行只列出有限的列数（与屏幕适应的）高亮 NAs","code":"\nas_tibble(penguins)## # A tibble: 344 × 8\n##    species island    bill_length_mm bill_depth_mm flipper_length_mm body_mass_g\n##    <chr>   <chr>              <dbl>         <dbl>             <dbl>       <dbl>\n##  1 Adelie  Torgersen           39.1          18.7               181        3750\n##  2 Adelie  Torgersen           39.5          17.4               186        3800\n##  3 Adelie  Torgersen           40.3          18                 195        3250\n##  4 Adelie  Torgersen           NA            NA                  NA          NA\n##  5 Adelie  Torgersen           36.7          19.3               193        3450\n##  6 Adelie  Torgersen           39.3          20.6               190        3650\n##  7 Adelie  Torgersen           38.9          17.8               181        3625\n##  8 Adelie  Torgersen           39.2          19.6               195        4675\n##  9 Adelie  Torgersen           34.1          18.1               193        3475\n## 10 Adelie  Torgersen           42            20.2               190        4250\n## # ℹ 334 more rows\n## # ℹ 2 more variables: sex <chr>, year <dbl>\nas.data.frame(penguins) %>% head()##   species    island bill_length_mm bill_depth_mm flipper_length_mm body_mass_g\n## 1  Adelie Torgersen           39.1          18.7               181        3750\n## 2  Adelie Torgersen           39.5          17.4               186        3800\n## 3  Adelie Torgersen           40.3          18.0               195        3250\n## 4  Adelie Torgersen             NA            NA                NA          NA\n## 5  Adelie Torgersen           36.7          19.3               193        3450\n## 6  Adelie Torgersen           39.3          20.6               190        3650\n##      sex year\n## 1   male 2007\n## 2 female 2007\n## 3 female 2007\n## 4   <NA> 2007\n## 5 female 2007\n## 6   male 2007"},{"path":"tidyverse-workflow.html","id":"ggplot2-宏包","chapter":"第 17 章 回望tidyverse之旅","heading":"17.3 ggplot2 宏包","text":"","code":""},{"path":"tidyverse-workflow.html","id":"查看数据","chapter":"第 17 章 回望tidyverse之旅","heading":"17.3.1 查看数据","text":"我们先查看下数据","code":"\nglimpse(penguins)## Rows: 344\n## Columns: 8\n## $ species           <chr> \"Adelie\", \"Adelie\", \"Adelie\", \"Adelie\", \"Adelie\", \"A…\n## $ island            <chr> \"Torgersen\", \"Torgersen\", \"Torgersen\", \"Torgersen\", …\n## $ bill_length_mm    <dbl> 39.1, 39.5, 40.3, NA, 36.7, 39.3, 38.9, 39.2, 34.1, …\n## $ bill_depth_mm     <dbl> 18.7, 17.4, 18.0, NA, 19.3, 20.6, 17.8, 19.6, 18.1, …\n## $ flipper_length_mm <dbl> 181, 186, 195, NA, 193, 190, 181, 195, 193, 190, 186…\n## $ body_mass_g       <dbl> 3750, 3800, 3250, NA, 3450, 3650, 3625, 4675, 3475, …\n## $ sex               <chr> \"male\", \"female\", \"female\", NA, \"female\", \"male\", \"f…\n## $ year              <dbl> 2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007…"},{"path":"tidyverse-workflow.html","id":"散点图","chapter":"第 17 章 回望tidyverse之旅","heading":"17.3.2 散点图","text":"体重在性别上有很大区别？","code":"\nggplot(data = penguins, aes(x = sex, y = body_mass_g)) +\n  geom_point()## Warning: Removed 2 rows containing missing values (`geom_point()`)."},{"path":"tidyverse-workflow.html","id":"箱线图","chapter":"第 17 章 回望tidyverse之旅","heading":"17.3.3 箱线图","text":"我们可能看到：Gentoo 类的企鹅 比 Adelie 和 Chinstrap 类的企鹅体重更重Gentoo 类型中，雄性企鹅比雌性企鹅体重更重Adelie 和 Chinstrap 两种类型的企鹅，区别不是很明显sex 这个变量有缺失值，主要集中在 Gentoo 和 Chinstrap 两种类型那么每种类型的企鹅，数据中有多少是NA呢？ 上dplyr吧！","code":"\nggplot(data = penguins, aes(x = sex, y = body_mass_g)) +\n  geom_boxplot()## Warning: Removed 2 rows containing non-finite values (`stat_boxplot()`).\nggplot(data = penguins, aes(x = sex, y = body_mass_g)) +\n  geom_boxplot(aes(fill = species))## Warning: Removed 2 rows containing non-finite values (`stat_boxplot()`)."},{"path":"tidyverse-workflow.html","id":"dplyr-宏包","chapter":"第 17 章 回望tidyverse之旅","heading":"17.4 dplyr 宏包","text":"dplyr 宏包可以:创建新变量 mutate()分组统计 summarize() + group_by()筛选 filter()重命名变量 rename()排序 arrange()更多","code":""},{"path":"tidyverse-workflow.html","id":"选取列","chapter":"第 17 章 回望tidyverse之旅","heading":"17.4.1 选取列","text":"下面两个有什么区别？","code":"\nselect(penguins, species, sex, body_mass_g)## # A tibble: 344 × 3\n##    species sex    body_mass_g\n##    <chr>   <chr>        <dbl>\n##  1 Adelie  male          3750\n##  2 Adelie  female        3800\n##  3 Adelie  female        3250\n##  4 Adelie  <NA>            NA\n##  5 Adelie  female        3450\n##  6 Adelie  male          3650\n##  7 Adelie  female        3625\n##  8 Adelie  male          4675\n##  9 Adelie  <NA>          3475\n## 10 Adelie  <NA>          4250\n## # ℹ 334 more rows\npenguins %>%\n  select(species, sex, body_mass_g)## # A tibble: 344 × 3\n##    species sex    body_mass_g\n##    <chr>   <chr>        <dbl>\n##  1 Adelie  male          3750\n##  2 Adelie  female        3800\n##  3 Adelie  female        3250\n##  4 Adelie  <NA>            NA\n##  5 Adelie  female        3450\n##  6 Adelie  male          3650\n##  7 Adelie  female        3625\n##  8 Adelie  male          4675\n##  9 Adelie  <NA>          3475\n## 10 Adelie  <NA>          4250\n## # ℹ 334 more rows"},{"path":"tidyverse-workflow.html","id":"行方向排序","chapter":"第 17 章 回望tidyverse之旅","heading":"17.4.2 行方向排序","text":"","code":"\nglimpse(penguins)## Rows: 344\n## Columns: 8\n## $ species           <chr> \"Adelie\", \"Adelie\", \"Adelie\", \"Adelie\", \"Adelie\", \"A…\n## $ island            <chr> \"Torgersen\", \"Torgersen\", \"Torgersen\", \"Torgersen\", …\n## $ bill_length_mm    <dbl> 39.1, 39.5, 40.3, NA, 36.7, 39.3, 38.9, 39.2, 34.1, …\n## $ bill_depth_mm     <dbl> 18.7, 17.4, 18.0, NA, 19.3, 20.6, 17.8, 19.6, 18.1, …\n## $ flipper_length_mm <dbl> 181, 186, 195, NA, 193, 190, 181, 195, 193, 190, 186…\n## $ body_mass_g       <dbl> 3750, 3800, 3250, NA, 3450, 3650, 3625, 4675, 3475, …\n## $ sex               <chr> \"male\", \"female\", \"female\", NA, \"female\", \"male\", \"f…\n## $ year              <dbl> 2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007…\npenguins %>%\n  select(species, sex, body_mass_g) %>%\n  arrange(desc(body_mass_g))## # A tibble: 344 × 3\n##    species sex   body_mass_g\n##    <chr>   <chr>       <dbl>\n##  1 Gentoo  male         6300\n##  2 Gentoo  male         6050\n##  3 Gentoo  male         6000\n##  4 Gentoo  male         6000\n##  5 Gentoo  male         5950\n##  6 Gentoo  male         5950\n##  7 Gentoo  male         5850\n##  8 Gentoo  male         5850\n##  9 Gentoo  male         5850\n## 10 Gentoo  male         5800\n## # ℹ 334 more rows"},{"path":"tidyverse-workflow.html","id":"分组统计","chapter":"第 17 章 回望tidyverse之旅","heading":"17.4.3 分组统计","text":"","code":"\npenguins %>% \n  group_by(species, sex) %>%\n  summarize(count = n())## `summarise()` has grouped output by 'species'. You can override using the\n## `.groups` argument.## # A tibble: 8 × 3\n## # Groups:   species [3]\n##   species   sex    count\n##   <chr>     <chr>  <int>\n## 1 Adelie    female    73\n## 2 Adelie    male      73\n## 3 Adelie    <NA>       6\n## 4 Chinstrap female    34\n## 5 Chinstrap male      34\n## 6 Gentoo    female    58\n## 7 Gentoo    male      61\n## 8 Gentoo    <NA>       5"},{"path":"tidyverse-workflow.html","id":"增加列","chapter":"第 17 章 回望tidyverse之旅","heading":"17.4.4 增加列","text":"","code":"\npenguins %>% \n  group_by(species) %>%\n  mutate(count_species = n()) %>%\n  ungroup() %>%\n  group_by(species, sex, count_species) %>%\n  summarize(count = n()) %>%\n  mutate(prop = count/count_species*100)## `summarise()` has grouped output by 'species', 'sex'. You can override using\n## the `.groups` argument.## # A tibble: 8 × 5\n## # Groups:   species, sex [8]\n##   species   sex    count_species count  prop\n##   <chr>     <chr>          <int> <int> <dbl>\n## 1 Adelie    female           152    73 48.0 \n## 2 Adelie    male             152    73 48.0 \n## 3 Adelie    <NA>             152     6  3.95\n## 4 Chinstrap female            68    34 50   \n## 5 Chinstrap male              68    34 50   \n## 6 Gentoo    female           124    58 46.8 \n## 7 Gentoo    male             124    61 49.2 \n## 8 Gentoo    <NA>             124     5  4.03"},{"path":"tidyverse-workflow.html","id":"筛选","chapter":"第 17 章 回望tidyverse之旅","heading":"17.4.5 筛选","text":"","code":"\npenguins %>% \n  group_by(species) %>%\n  mutate(count_species = n()) %>%\n  ungroup() %>%\n  group_by(species, sex, count_species) %>%\n  summarize(count = n()) %>%\n  mutate(percentage = count/count_species*100) %>%\n  filter(species == \"Chinstrap\")## `summarise()` has grouped output by 'species', 'sex'. You can override using\n## the `.groups` argument.## # A tibble: 2 × 5\n## # Groups:   species, sex [2]\n##   species   sex    count_species count percentage\n##   <chr>     <chr>          <int> <int>      <dbl>\n## 1 Chinstrap female            68    34         50\n## 2 Chinstrap male              68    34         50"},{"path":"tidyverse-workflow.html","id":"forcats-宏包","chapter":"第 17 章 回望tidyverse之旅","heading":"17.5 forcats 宏包","text":"forcats 宏包主要用于分类变量和因子型变量，比如这里的 species, island, sex.对于不是因子型的变量，比如这里 year 是数值型变量，我们也可以通过 factor() 函数 将它转换成因子型变量。我们保存到新的数据集中，再看看有什么变化大家回想下，弄成因子型变量有什么好处呢？","code":"\npenguins %>%\n  mutate(year_factor = factor(year, levels = unique(year)))## # A tibble: 344 × 9\n##    species island    bill_length_mm bill_depth_mm flipper_length_mm body_mass_g\n##    <chr>   <chr>              <dbl>         <dbl>             <dbl>       <dbl>\n##  1 Adelie  Torgersen           39.1          18.7               181        3750\n##  2 Adelie  Torgersen           39.5          17.4               186        3800\n##  3 Adelie  Torgersen           40.3          18                 195        3250\n##  4 Adelie  Torgersen           NA            NA                  NA          NA\n##  5 Adelie  Torgersen           36.7          19.3               193        3450\n##  6 Adelie  Torgersen           39.3          20.6               190        3650\n##  7 Adelie  Torgersen           38.9          17.8               181        3625\n##  8 Adelie  Torgersen           39.2          19.6               195        4675\n##  9 Adelie  Torgersen           34.1          18.1               193        3475\n## 10 Adelie  Torgersen           42            20.2               190        4250\n## # ℹ 334 more rows\n## # ℹ 3 more variables: sex <chr>, year <dbl>, year_factor <fct>\npenguins_new <-\n  penguins %>%\n  mutate(year_factor = factor(year, levels = unique(year)))\npenguins_new## # A tibble: 344 × 9\n##    species island    bill_length_mm bill_depth_mm flipper_length_mm body_mass_g\n##    <chr>   <chr>              <dbl>         <dbl>             <dbl>       <dbl>\n##  1 Adelie  Torgersen           39.1          18.7               181        3750\n##  2 Adelie  Torgersen           39.5          17.4               186        3800\n##  3 Adelie  Torgersen           40.3          18                 195        3250\n##  4 Adelie  Torgersen           NA            NA                  NA          NA\n##  5 Adelie  Torgersen           36.7          19.3               193        3450\n##  6 Adelie  Torgersen           39.3          20.6               190        3650\n##  7 Adelie  Torgersen           38.9          17.8               181        3625\n##  8 Adelie  Torgersen           39.2          19.6               195        4675\n##  9 Adelie  Torgersen           34.1          18.1               193        3475\n## 10 Adelie  Torgersen           42            20.2               190        4250\n## # ℹ 334 more rows\n## # ℹ 3 more variables: sex <chr>, year <dbl>, year_factor <fct>\nclass(penguins_new$year_factor)## [1] \"factor\"\nlevels(penguins_new$year_factor)## [1] \"2007\" \"2008\" \"2009\""},{"path":"tidyverse-workflow.html","id":"stringr-宏包","chapter":"第 17 章 回望tidyverse之旅","heading":"17.6 stringr 宏包","text":"stringr宏包包含了非常丰富的处理字符串的函数，比如匹配字符串子集字符串长度字符串合并字符串分割更多","code":""},{"path":"tidyverse-workflow.html","id":"字符串转换","chapter":"第 17 章 回望tidyverse之旅","heading":"17.6.1 字符串转换","text":"","code":"\npenguins %>%\n  select(species, island) %>%\n  mutate(ISLAND = str_to_upper(island))## # A tibble: 344 × 3\n##    species island    ISLAND   \n##    <chr>   <chr>     <chr>    \n##  1 Adelie  Torgersen TORGERSEN\n##  2 Adelie  Torgersen TORGERSEN\n##  3 Adelie  Torgersen TORGERSEN\n##  4 Adelie  Torgersen TORGERSEN\n##  5 Adelie  Torgersen TORGERSEN\n##  6 Adelie  Torgersen TORGERSEN\n##  7 Adelie  Torgersen TORGERSEN\n##  8 Adelie  Torgersen TORGERSEN\n##  9 Adelie  Torgersen TORGERSEN\n## 10 Adelie  Torgersen TORGERSEN\n## # ℹ 334 more rows"},{"path":"tidyverse-workflow.html","id":"字符串合并","chapter":"第 17 章 回望tidyverse之旅","heading":"17.6.2 字符串合并","text":"","code":"\npenguins %>%\n  select(species, island) %>%\n  mutate(ISLAND = str_to_upper(island)) %>%\n  mutate(species_island = str_c(species, ISLAND, sep = \"_\"))## # A tibble: 344 × 4\n##    species island    ISLAND    species_island  \n##    <chr>   <chr>     <chr>     <chr>           \n##  1 Adelie  Torgersen TORGERSEN Adelie_TORGERSEN\n##  2 Adelie  Torgersen TORGERSEN Adelie_TORGERSEN\n##  3 Adelie  Torgersen TORGERSEN Adelie_TORGERSEN\n##  4 Adelie  Torgersen TORGERSEN Adelie_TORGERSEN\n##  5 Adelie  Torgersen TORGERSEN Adelie_TORGERSEN\n##  6 Adelie  Torgersen TORGERSEN Adelie_TORGERSEN\n##  7 Adelie  Torgersen TORGERSEN Adelie_TORGERSEN\n##  8 Adelie  Torgersen TORGERSEN Adelie_TORGERSEN\n##  9 Adelie  Torgersen TORGERSEN Adelie_TORGERSEN\n## 10 Adelie  Torgersen TORGERSEN Adelie_TORGERSEN\n## # ℹ 334 more rows"},{"path":"tidyverse-workflow.html","id":"tidyr-宏包","chapter":"第 17 章 回望tidyverse之旅","heading":"17.7 tidyr 宏包","text":"想想什么叫tidy data？","code":""},{"path":"tidyverse-workflow.html","id":"长表格变宽表格","chapter":"第 17 章 回望tidyverse之旅","heading":"17.7.1 长表格变宽表格","text":"","code":"\nuntidy_penguins <-\n  penguins %>%\n    pivot_wider(names_from = sex,\n                values_from = body_mass_g)\nuntidy_penguins## # A tibble: 344 × 9\n##    species island    bill_length_mm bill_depth_mm flipper_length_mm  year  male\n##    <chr>   <chr>              <dbl>         <dbl>             <dbl> <dbl> <dbl>\n##  1 Adelie  Torgersen           39.1          18.7               181  2007  3750\n##  2 Adelie  Torgersen           39.5          17.4               186  2007    NA\n##  3 Adelie  Torgersen           40.3          18                 195  2007    NA\n##  4 Adelie  Torgersen           NA            NA                  NA  2007    NA\n##  5 Adelie  Torgersen           36.7          19.3               193  2007    NA\n##  6 Adelie  Torgersen           39.3          20.6               190  2007  3650\n##  7 Adelie  Torgersen           38.9          17.8               181  2007    NA\n##  8 Adelie  Torgersen           39.2          19.6               195  2007  4675\n##  9 Adelie  Torgersen           34.1          18.1               193  2007    NA\n## 10 Adelie  Torgersen           42            20.2               190  2007    NA\n## # ℹ 334 more rows\n## # ℹ 2 more variables: female <dbl>, `NA` <dbl>"},{"path":"tidyverse-workflow.html","id":"宽表格变长表格","chapter":"第 17 章 回望tidyverse之旅","heading":"17.7.2 宽表格变长表格","text":"","code":"\nuntidy_penguins %>%\n  pivot_longer(cols = male:`NA`, \n               names_to = \"sex\",\n               values_to = \"body_mass_g\")## # A tibble: 1,032 × 8\n##    species island    bill_length_mm bill_depth_mm flipper_length_mm  year sex   \n##    <chr>   <chr>              <dbl>         <dbl>             <dbl> <dbl> <chr> \n##  1 Adelie  Torgersen           39.1          18.7               181  2007 male  \n##  2 Adelie  Torgersen           39.1          18.7               181  2007 female\n##  3 Adelie  Torgersen           39.1          18.7               181  2007 NA    \n##  4 Adelie  Torgersen           39.5          17.4               186  2007 male  \n##  5 Adelie  Torgersen           39.5          17.4               186  2007 female\n##  6 Adelie  Torgersen           39.5          17.4               186  2007 NA    \n##  7 Adelie  Torgersen           40.3          18                 195  2007 male  \n##  8 Adelie  Torgersen           40.3          18                 195  2007 female\n##  9 Adelie  Torgersen           40.3          18                 195  2007 NA    \n## 10 Adelie  Torgersen           NA            NA                  NA  2007 male  \n## # ℹ 1,022 more rows\n## # ℹ 1 more variable: body_mass_g <dbl>"},{"path":"tidyverse-workflow.html","id":"purrr-宏包","chapter":"第 17 章 回望tidyverse之旅","heading":"17.8 purrr 宏包","text":"purrr 宏包提供了map()等一系列函数，取代 和 while循环方式，实现高效迭代，保持语法一致性，同时增强了代码的可读性。","code":"\npenguins %>% map(~sum(is.na(.)))## $species\n## [1] 0\n## \n## $island\n## [1] 0\n## \n## $bill_length_mm\n## [1] 2\n## \n## $bill_depth_mm\n## [1] 2\n## \n## $flipper_length_mm\n## [1] 2\n## \n## $body_mass_g\n## [1] 2\n## \n## $sex\n## [1] 11\n## \n## $year\n## [1] 0\npenguins %>%\n  group_nest(species) %>%\n  mutate(model = purrr::map(data, ~ lm(bill_depth_mm ~ bill_length_mm, data = .))) %>%\n  mutate(result = purrr::map(model, ~ broom::tidy(.))) %>%\n  tidyr::unnest(result)## # A tibble: 6 × 8\n##   species                 data model term  estimate std.error statistic  p.value\n##   <chr>     <list<tibble[,7]>> <lis> <chr>    <dbl>     <dbl>     <dbl>    <dbl>\n## 1 Adelie             [152 × 7] <lm>  (Int…   11.4      1.34        8.52 1.61e-14\n## 2 Adelie             [152 × 7] <lm>  bill…    0.179    0.0344      5.19 6.67e- 7\n## 3 Chinstrap           [68 × 7] <lm>  (Int…    7.57     1.55        4.88 6.99e- 6\n## 4 Chinstrap           [68 × 7] <lm>  bill…    0.222    0.0317      7.01 1.53e- 9\n## 5 Gentoo             [124 × 7] <lm>  (Int…    5.25     1.05        4.98 2.15e- 6\n## 6 Gentoo             [124 × 7] <lm>  bill…    0.205    0.0222      9.24 1.02e-15"},{"path":"tidyverse-ggplot2-aes.html","id":"tidyverse-ggplot2-aes","chapter":"第 18 章 数据可视化","heading":"第 18 章 数据可视化","text":"我们介绍R语言最强大的可视化，看看都有哪些炫酷的操作。","code":"\nlibrary(tidyverse) # install.packages(\"tidyverse\")\nlibrary(patchwork) # install.packages(\"patchwork\")"},{"path":"tidyverse-ggplot2-aes.html","id":"什么是数据可视化","chapter":"第 18 章 数据可视化","heading":"18.1 什么是数据可视化","text":"","code":""},{"path":"tidyverse-ggplot2-aes.html","id":"图形属性视觉元素","chapter":"第 18 章 数据可视化","heading":"18.1.1 图形属性(视觉元素)","text":"我们在图中画一个点，那么这个点就有（形状，大小，颜色，位置，透明度）等属性，\n这些属性就是图形属性（有时也称之为图形元素或者视觉元素），下图 18.1列出了常用的图形属性。\n图 18.1: 常用的图形元素\n点和线常用的图形属性R有最初的基本绘图， 这是从S语言继承过来的， 还有一些功能更易用、更强大的绘图系统， 如lattice、ggplot2。 基本绘图使用简单(如barplot画条形图)， 灵活性强， 但是为了做出满意的图形需要比较多的调整，重要的是颜值低！！！ 所以推荐ggplot2画图。","code":""},{"path":"tidyverse-ggplot2-aes.html","id":"宏包ggplot2","chapter":"第 18 章 数据可视化","heading":"18.2 宏包ggplot2","text":"ggplot2是RStudio首席科学家Hadley Wickham在2005年读博士期间的作品。很多人学习R语言，就是因为ggplot2宏包。目前，\nggplot2已经发展成为最受欢迎的R宏包，没有之一。","code":""},{"path":"tidyverse-ggplot2-aes.html","id":"ggplot2-的图形语法","chapter":"第 18 章 数据可视化","heading":"18.2.1 ggplot2 的图形语法","text":"ggplot2有一套优雅的绘图语法，包名中“gg”是grammar graphics的简称。\nHadley Wickham将这套可视化语法诠释为:一张统计图形就是从数据到几何形状(geometric object，缩写geom)所包含的图形属性(aesthetic attribute，缩写aes)的一种映射。通俗解释：就是我们的数据通过图形的视觉元素表示出来。比如点的位置，如果坐标x值越大，水平方向离原点的位置就越远，数值越小，水平方向离原点的位置就越近。\n数值的大小变成了视觉能感知的东西。\n图 18.2: 数值到图形属性的映射过程\n同理，我们希望用点的大小代表这个位置上的某个变量（比如，降雨量，产品销量等等），那么变量的数值越小，点的半径就小一点，数值越大，点就可以大一点；或者变量的数值大，点的颜色就深一点，数值小，点的颜色就浅一点。即，数值到图形属性的映射过程。映射是一个数学词汇，这里您可以理解为一一对应。","code":""},{"path":"tidyverse-ggplot2-aes.html","id":"怎么写代码","chapter":"第 18 章 数据可视化","heading":"18.2.2 怎么写代码","text":"ggplot()函数包括9个部件：数据 (data) （数据框）映射 (mapping)几何形状 (geom)统计变换 (stats)标度 (scale)坐标系 (coord)分面 (facet)主题 (theme)存储和输出 (output)其中前三个是必需的。语法模板此外，图形中还可能包含数据的统计变换(statistical transformation，缩写stats)，最后绘制在某个特定的坐标系(coordinate\nsystem，缩写coord)中，而分面(facet)则可以用来生成数据不同子集的图形。先来点小菜。先看一个简单的案例（1880-2014年温度变化和二氧化碳排放量）注：如果用read.csv读取文件，返回一个通常的数据框data.frame我们只需要在相应位置填入数据框，和数据框的变量，就可以画图是不是很简单?","code":"ggplot(data = <DATA>) + \n   <GEOM_FUNCTION>(mapping = aes(<MAPPINGS>))\nlibrary(tidyverse)\nd <- read_csv(here::here(\"demo_data\", \"temp_carbon.csv\"))\nd %>% head(5)## # A tibble: 5 × 5\n##    year temp_anomaly land_anomaly ocean_anomaly carbon_emissions\n##   <dbl>        <dbl>        <dbl>         <dbl>            <dbl>\n## 1  1880        -0.11        -0.48         -0.01              236\n## 2  1881        -0.08        -0.4           0.01              243\n## 3  1882        -0.1         -0.48          0                 256\n## 4  1883        -0.18        -0.66         -0.04              272\n## 5  1884        -0.26        -0.69         -0.14              275library(ggplot2)\nggplot(___) + \n  geom_point(\n    mapping = aes(x = ___, y = ___)\n  )\nggplot(data = d) +\n  geom_point(mapping = aes(x = year, y = carbon_emissions)) +\n  xlab(\"Year\") +\n  ylab(\"Carbon emissions (metric tons)\") +\n  ggtitle(\"Annual global carbon emissions, 1880-2014\")"},{"path":"tidyverse-ggplot2-aes.html","id":"映射","chapter":"第 18 章 数据可视化","heading":"18.3 映射","text":"我们这里用科考人员收集的企鹅体征数据来演示。我们会用到penguins数据集其中的四个变量","code":"\nlibrary(tidyverse)\npenguins <- read_csv(here::here(\"demo_data\", \"penguins.csv\")) %>%\n  janitor::clean_names() %>% \n  drop_na()\n\npenguins %>%\n  head()## # A tibble: 6 × 8\n##   species island    bill_length_mm bill_depth_mm flipper_length_mm body_mass_g\n##   <chr>   <chr>              <dbl>         <dbl>             <dbl>       <dbl>\n## 1 Adelie  Torgersen           39.1          18.7               181        3750\n## 2 Adelie  Torgersen           39.5          17.4               186        3800\n## 3 Adelie  Torgersen           40.3          18                 195        3250\n## 4 Adelie  Torgersen           36.7          19.3               193        3450\n## 5 Adelie  Torgersen           39.3          20.6               190        3650\n## 6 Adelie  Torgersen           38.9          17.8               181        3625\n## # ℹ 2 more variables: sex <chr>, year <dbl>\npenguins %>%\n  select(species, sex, bill_length_mm, bill_depth_mm) %>%\n  head(4)"},{"path":"tidyverse-ggplot2-aes.html","id":"嘴巴越长嘴巴也会越厚","chapter":"第 18 章 数据可视化","heading":"18.3.1 嘴巴越长，嘴巴也会越厚？","text":"这里提出一个问题，嘴巴越长，嘴巴也会越厚？为考察嘴峰长度(bill_length_mm)与嘴峰深度(bill_depth_mm)之间的关联，先绘制这两个变量的散点图，ggplot() 初始化绘图，相当于打开了一张纸，准备画画。ggplot() 初始化绘图，相当于打开了一张纸，准备画画。ggplot(data = penguins) 表示使用penguins这个数据框来画图。ggplot(data = penguins) 表示使用penguins这个数据框来画图。+表示添加图层。+表示添加图层。geom_point()表示绘制散点图。geom_point()表示绘制散点图。aes()表示数值和视觉属性之间的映射。aes()表示数值和视觉属性之间的映射。aes(x = bill_length_mm, y = bill_depth_mm)，意思是变量bill_length_mm作为（映射为）x轴方向的位置，变量bill_depth_mm作为（映射为）y轴方向的位置。aes()除了位置上映射，还可以实现色彩、形状或透明度等视觉属性的映射。运行脚本后生成图片：刚才看到的是位置上的映射，ggplot()还包含了颜色、形状以及透明度等图形属性的映射，比如我们在aes()里增加一个颜色映射color = species, 这样做就是希望，不同的企鹅类型, 用不同的颜色来表现。这里，企鹅类型有三组，那么就用三种不同的颜色来表示此图绘制不同类型的企鹅，嘴峰长度与嘴峰深度散点图，并用颜色来实现了分组。大家试试下面代码呢，也可更多映射为什么图中是这样的颜色呢？那是因为ggplot()内部有一套默认的设置不喜欢默认的颜色，可以自己定义喔。请往下看","code":"\nggplot(penguins) +\n  geom_point(aes(x = bill_length_mm, y = bill_depth_mm, color = species))\nggplot(penguins) +\n  geom_point(aes(x = bill_length_mm, y = bill_depth_mm, size = species))\nggplot(penguins) +\n  geom_point(aes(x = bill_length_mm, y = bill_depth_mm, shape = species))\nggplot(penguins) +\n  geom_point(aes(x = bill_length_mm, y = bill_depth_mm, alpha = species))\nggplot(penguins) +\n  geom_point(\n    aes(x = bill_length_mm, y = bill_depth_mm, color = species, alpha = sex)\n  )## Warning: Using alpha for a discrete variable is not advised."},{"path":"tidyverse-ggplot2-aes.html","id":"映射-vs.设置","chapter":"第 18 章 数据可视化","heading":"18.4 映射 vs.设置","text":"想把图中的点指定为某一种颜色，可以使用设置语句，比如大家也可以试试下面","code":"\nggplot(penguins) +\n  geom_point(aes(x = bill_length_mm, y = bill_depth_mm), color = \"blue\")\nggplot(penguins) +\n  geom_point(aes(x = bill_length_mm, y = bill_depth_mm), size = 5)\nggplot(penguins) +\n  geom_point(aes(x = bill_length_mm, y = bill_depth_mm), shape = 2)\nggplot(penguins) +\n  geom_point(aes(x = bill_length_mm, y = bill_depth_mm), alpha = 0.5)"},{"path":"tidyverse-ggplot2-aes.html","id":"提问-1","chapter":"第 18 章 数据可视化","heading":"18.4.1 提问","text":"思考下左图中aes(color = \"blue\")为什么会变成了红色的点？","code":""},{"path":"tidyverse-ggplot2-aes.html","id":"几何形状","chapter":"第 18 章 数据可视化","heading":"18.5 几何形状","text":"geom_point() 可以画散点图，也可以使用geom_smooth()绘制平滑曲线，","code":"\nggplot(penguins) +\n  geom_smooth(aes(x = bill_length_mm, y = bill_depth_mm))## `geom_smooth()` using method = 'loess' and formula = 'y ~ x'"},{"path":"tidyverse-ggplot2-aes.html","id":"图层叠加","chapter":"第 18 章 数据可视化","heading":"18.6 图层叠加","text":"很强大，但相同的代码让我写两遍，我不高兴。要在偷懒的路上追求简约以上两段代码出来的图为什么是一样？背后的含义有什么不同？接着往下看","code":"\nggplot(penguins) +\n  geom_point(aes(x = bill_length_mm, y = bill_depth_mm)) +\n  geom_smooth(aes(x = bill_length_mm, y = bill_depth_mm))## `geom_smooth()` using method = 'loess' and formula = 'y ~ x'\nggplot(penguins, aes(x = bill_length_mm, y = bill_depth_mm)) +\n  geom_point() +\n  geom_smooth()## `geom_smooth()` using method = 'loess' and formula = 'y ~ x'"},{"path":"tidyverse-ggplot2-aes.html","id":"global-vs.-local","chapter":"第 18 章 数据可视化","heading":"18.7 Global vs. Local","text":"大家可以看到，以上两段代码出来的图是一样。但背后的含义却不同。映射关系aes(x = bill_length_mm, y = bill_depth_mm) 写在ggplot()里, 为全局声明。那么，当geom_point()画图时，发现缺少图形所需要的映射关系（点的位置、点的大小、点的颜色等等），就会从ggplot()全局变量中继承映射关系。映射关系aes(x = bill_length_mm, y = bill_depth_mm) 写在ggplot()里, 为全局声明。那么，当geom_point()画图时，发现缺少图形所需要的映射关系（点的位置、点的大小、点的颜色等等），就会从ggplot()全局变量中继承映射关系。如果映射关系aes(x = bill_length_mm, y = bill_depth_mm) 写在几何形状geom_point()里, 那么此处的映射关系就为局部声明, 那么geom_point()绘图时，发现所需要的映射关系已经存在，就不会继承全局变量的映射关系。如果映射关系aes(x = bill_length_mm, y = bill_depth_mm) 写在几何形状geom_point()里, 那么此处的映射关系就为局部声明, 那么geom_point()绘图时，发现所需要的映射关系已经存在，就不会继承全局变量的映射关系。看下面这个例子，这里的 geom_point() 和 geom_smooth() 都会从全局变量中继承位置映射关系。再看下面这个例子，局部变量中的映射关系\naes(color = )已经存在，因此不会从全局变量中继承，沿用当前的映射关系。","code":"\nggplot(penguins, aes(x = bill_length_mm, y = bill_depth_mm, color = species)) +\n  geom_point()\nggplot(penguins) +\n  geom_point(aes(x = bill_length_mm, y = bill_depth_mm, color = species))\nggplot(penguins, aes(x = bill_length_mm, y = bill_depth_mm)) +\n  geom_point(aes(color = species)) +\n  geom_smooth()\nggplot(penguins,aes(x = bill_length_mm, y = bill_depth_mm, color = species)) +\n  geom_point(aes(color = sex))"},{"path":"tidyverse-ggplot2-aes.html","id":"图层之间没有继承关系","chapter":"第 18 章 数据可视化","heading":"18.7.1 图层之间没有继承关系","text":"","code":"\nggplot(penguins, aes(x = bill_length_mm, y = bill_depth_mm)) +\n  geom_point(aes(color = species)) +\n  geom_smooth(method = \"lm\")## `geom_smooth()` using formula = 'y ~ x'\nggplot(penguins, aes(x = bill_length_mm, y = bill_depth_mm, color = species)) +\n  geom_point() +\n  geom_smooth(method = \"lm\", aes(color = sex)) ## `geom_smooth()` using formula = 'y ~ x'"},{"path":"tidyverse-ggplot2-aes.html","id":"保存图片","chapter":"第 18 章 数据可视化","heading":"18.8 保存图片","text":"可以使用ggsave()函数，将图片保存为所需要的格式，如”.pdf”, “.png”等，\n还可以指定图片的高度和宽度，默认units是英寸，也可以使用”cm”, “mm”.","code":"\ngg <- penguins %>% \n  ggplot(aes(x = bill_length_mm, y = bill_depth_mm)) +\n  geom_smooth(method = lm) +\n  geom_point(aes(color = species)) +\n  ggtitle(\"This is my first plot\")\n\nggsave(\n  plot = gg,\n  filename = \"my_plot.pdf\",\n  width = 8,\n  height = 6,\n  dpi = 300\n)\n# 推荐下面的方式\ncowplot::save_plot(filename=\"my_plot.pdf\", plot=gg, base_width = 7, base_height = 5)"},{"path":"tidyverse-ggplot2-aes.html","id":"画图时要注意因子变量","chapter":"第 18 章 数据可视化","heading":"18.9 画图时要注意因子变量","text":"画图时所有的变量都会转化为因子变量，因此确保因子变量的因子顺序就非常重要。","code":"\nggplot(penguins, aes(y = species)) +\n  geom_bar()\npenguins$species <- factor(penguins$species, levels = c(\"Adelie\",\"Gentoo\",\"Chinstrap\"))\nggplot(penguins, aes(y = species)) +\n  geom_bar()"},{"path":"tidyverse-ggplot2-aes.html","id":"画多个子图","chapter":"第 18 章 数据可视化","heading":"18.10 画多个子图","text":"使用facet_wrap函数，可以按照某一个变量的取值个数来画多个子图","code":""},{"path":"tidyverse-ggplot2-aes.html","id":"课堂作业","chapter":"第 18 章 数据可视化","heading":"18.11 课堂作业","text":"补充代码，要求在一张图中画出企鹅嘴巴长度和嘴巴厚度的散点图不同企鹅种类用不同的颜色整体的线性拟合不同种类分别线性拟合","code":"ggplot(penguins, aes(x = ___, y = ___)) +\n  geom_point() +\n  geom_smooth() +\n  geom_smooth() "},{"path":"tidyverse-ggplot2-aes.html","id":"小结-2","chapter":"第 18 章 数据可视化","heading":"18.12 小结","text":"\n图 18.3: Evolution layered plot\n","code":""},{"path":"tidyverse-ggplot2-aes.html","id":"延伸阅读-2","chapter":"第 18 章 数据可视化","heading":"18.13 延伸阅读","text":"在第 19 章到第 23 章会再讲ggplot2一个点有位置、颜色、大小、形状外，还有哪些属性？如果画线条，应该有哪些视觉属性？\n打开 https://ggplot2tor.com/aesthetics\n输入 geom_point 或者 geom_line 试试\n打开 https://ggplot2tor.com/aesthetics输入 geom_point 或者 geom_line 试试https://osf.io/bj83f/https://ggplot2.tidyverse.org/","code":"## Warning in rm(corrs, d, dat, data, means, penguins, N, p, p1, p2, p3, Sigma):\n## object 'corrs' not found## Warning in rm(corrs, d, dat, data, means, penguins, N, p, p1, p2, p3, Sigma):\n## object 'dat' not found## Warning in rm(corrs, d, dat, data, means, penguins, N, p, p1, p2, p3, Sigma):\n## object 'data' not found## Warning in rm(corrs, d, dat, data, means, penguins, N, p, p1, p2, p3, Sigma):\n## object 'means' not found## Warning in rm(corrs, d, dat, data, means, penguins, N, p, p1, p2, p3, Sigma):\n## object 'N' not found## Warning in rm(corrs, d, dat, data, means, penguins, N, p, p1, p2, p3, Sigma):\n## object 'p' not found## Warning in rm(corrs, d, dat, data, means, penguins, N, p, p1, p2, p3, Sigma):\n## object 'p1' not found## Warning in rm(corrs, d, dat, data, means, penguins, N, p, p1, p2, p3, Sigma):\n## object 'p2' not found## Warning in rm(corrs, d, dat, data, means, penguins, N, p, p1, p2, p3, Sigma):\n## object 'p3' not found## Warning in rm(corrs, d, dat, data, means, penguins, N, p, p1, p2, p3, Sigma):\n## object 'Sigma' not found"},{"path":"tidyverse-ggplot2-geom.html","id":"tidyverse-ggplot2-geom","chapter":"第 19 章 ggplot2之几何形状","heading":"第 19 章 ggplot2之几何形状","text":"采菊东篱下，悠然见南山。根据大家投票，觉得ggplot2是最想掌握的技能，我想这就是R语言中最有质感的部分吧。所以，这里专门拿出一节课讲ggplot2，也算是补上之前第 18 章数据可视化没讲的内容。","code":"\nlibrary(tidyverse)"},{"path":"tidyverse-ggplot2-geom.html","id":"一个有趣的案例","chapter":"第 19 章 ggplot2之几何形状","heading":"19.1 一个有趣的案例","text":"先看一组数据先用dataset分组后，然后计算每组下x的均值和方差，y的均值和方差，以及x，y两者的相关系数。可视化是数据探索中非常重要的部分。本章的目的就是带领大家学习ggplot2基本的绘图技能。","code":"\ndf <- read_csv(\"./demo_data/datasaurus.csv\")## Rows: 1846 Columns: 3\n## ── Column specification ────────────────────────────────────────────────────────\n## Delimiter: \",\"\n## chr (1): dataset\n## dbl (2): x, y\n## \n## ℹ Use `spec()` to retrieve the full column specification for this data.\n## ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\ndf## # A tibble: 1,846 × 3\n##    dataset     x     y\n##    <chr>   <dbl> <dbl>\n##  1 dino     55.4  97.2\n##  2 dino     51.5  96.0\n##  3 dino     46.2  94.5\n##  4 dino     42.8  91.4\n##  5 dino     40.8  88.3\n##  6 dino     38.7  84.9\n##  7 dino     35.6  79.9\n##  8 dino     33.1  77.6\n##  9 dino     29.0  74.5\n## 10 dino     26.2  71.4\n## # ℹ 1,836 more rows\ndf %>%\n  group_by(dataset) %>%\n  summarize(\n    mean_x = mean(x),\n    mean_y = mean(y),\n    std_dev_x = sd(x),\n    std_dev_y = sd(y),\n    corr_x_y = cor(x, y)\n  )## # A tibble: 13 × 6\n##    dataset    mean_x mean_y std_dev_x std_dev_y corr_x_y\n##    <chr>       <dbl>  <dbl>     <dbl>     <dbl>    <dbl>\n##  1 away         54.3   47.8      16.8      26.9  -0.0641\n##  2 bullseye     54.3   47.8      16.8      26.9  -0.0686\n##  3 circle       54.3   47.8      16.8      26.9  -0.0683\n##  4 dino         54.3   47.8      16.8      26.9  -0.0645\n##  5 dots         54.3   47.8      16.8      26.9  -0.0603\n##  6 h_lines      54.3   47.8      16.8      26.9  -0.0617\n##  7 high_lines   54.3   47.8      16.8      26.9  -0.0685\n##  8 slant_down   54.3   47.8      16.8      26.9  -0.0690\n##  9 slant_up     54.3   47.8      16.8      26.9  -0.0686\n## 10 star         54.3   47.8      16.8      26.9  -0.0630\n## 11 v_lines      54.3   47.8      16.8      26.9  -0.0694\n## 12 wide_lines   54.3   47.8      16.8      26.9  -0.0666\n## 13 x_shape      54.3   47.8      16.8      26.9  -0.0656"},{"path":"tidyverse-ggplot2-geom.html","id":"学习目标","chapter":"第 19 章 ggplot2之几何形状","heading":"19.2 学习目标","text":"","code":""},{"path":"tidyverse-ggplot2-geom.html","id":"图形语法","chapter":"第 19 章 ggplot2之几何形状","heading":"19.2.1 图形语法","text":"图形语法 “grammar graphics” (“ggplot2” 中的gg 就来源于此) 使用图层(layer)去描述和构建图形，下图是ggplot2图层概念的示意图\n","code":""},{"path":"tidyverse-ggplot2-geom.html","id":"图形部件","chapter":"第 19 章 ggplot2之几何形状","heading":"19.2.2 图形部件","text":"一张统计图形就是从数据到几何形状(geometric object，缩写geom)所包含的图形属性(aesthetic attribute，缩写aes)的一种映射。data: 数据框data.frame (注意，不支持向量vector和列表list类型）data: 数据框data.frame (注意，不支持向量vector和列表list类型）aes: 数据框中的数据变量映射到图形属性。什么叫图形属性？就是图中点的位置、形状，大小，颜色等眼睛能看到的东西。什么叫映射？就是一种对应关系，比如数学中的函数b = f()就是a和b之间的一种映射关系, a的值决定或者控制了b的值，在ggplot2语法里，a就是我们输入的数据变量，b就是图形属性， 这些图形属性包括：\nx（x轴方向的位置）\ny（y轴方向的位置）\ncolor（点或者线等元素的颜色）\nsize（点或者线等元素的大小）\nshape（点或者线等元素的形状）\nalpha（点或者线等元素的透明度）\naes: 数据框中的数据变量映射到图形属性。什么叫图形属性？就是图中点的位置、形状，大小，颜色等眼睛能看到的东西。什么叫映射？就是一种对应关系，比如数学中的函数b = f()就是a和b之间的一种映射关系, a的值决定或者控制了b的值，在ggplot2语法里，a就是我们输入的数据变量，b就是图形属性， 这些图形属性包括：x（x轴方向的位置）y（y轴方向的位置）color（点或者线等元素的颜色）size（点或者线等元素的大小）shape（点或者线等元素的形状）alpha（点或者线等元素的透明度）geoms: 几何形状，确定我们想画什么样的图，一个geom_***确定一种形状。更多几何形状推荐阅读这里\ngeom_bar()\ngeom_density()\ngeom_freqpoly()\ngeom_histogram()\ngeom_violin()\ngeom_boxplot()\ngeom_col()\ngeom_point()\ngeom_smooth()\ngeom_tile()\ngeom_density2d()\ngeom_bin2d()\ngeom_hex()\ngeom_count()\ngeom_text()\ngeom_sf()\ngeoms: 几何形状，确定我们想画什么样的图，一个geom_***确定一种形状。更多几何形状推荐阅读这里geom_bar()geom_density()geom_freqpoly()geom_histogram()geom_violin()geom_boxplot()geom_col()geom_point()geom_smooth()geom_tile()geom_density2d()geom_bin2d()geom_hex()geom_count()geom_text()geom_sf()\n图 19.1: Source: ggplot2 book\nstats: 统计变换scales: 标度coord: 坐标系统facet: 分面layer： 增加图层theme: 主题风格save: 保存图片\n图 19.2: ggplot2语法\n","code":""},{"path":"tidyverse-ggplot2-geom.html","id":"开始-1","chapter":"第 19 章 ggplot2之几何形状","heading":"19.3 开始","text":"\nR语言数据类型，有字符串型、数值型、因子型、逻辑型、日期型等。\nggplot2会将字符串型、因子型、逻辑型默认为离散变量，而数值型默认为连续变量，将日期时间为日期变量：\n\n\n离散变量: 字符串型, 因子型,\n逻辑型\n\n离散变量: 字符串型, 因子型,\n逻辑型\n\n连续变量: 双精度数值,\n整数数值\n\n连续变量: 双精度数值,\n整数数值\n\n日期变量: 日期, 时间,\n日期时间\n\n日期变量: 日期, 时间,\n日期时间\n我们在呈现数据的时候，可能会同时用到多种类型的数据，比如\n\n\n一个离散\n\n\n一个离散\n\n\n一个连续\n\n\n一个连续\n\n\n两个离散\n\n\n两个离散\n\n\n两个连续\n\n\n两个连续\n\n\n一个离散, 一个连续\n\n\n一个离散, 一个连续\n\n\n三个连续\n\n\n三个连续\n","code":""},{"path":"tidyverse-ggplot2-geom.html","id":"导入数据-1","chapter":"第 19 章 ggplot2之几何形状","heading":"19.3.1 导入数据","text":"","code":"\ngapdata <- read_csv(\"./demo_data/gapminder.csv\")## Rows: 1704 Columns: 6\n## ── Column specification ────────────────────────────────────────────────────────\n## Delimiter: \",\"\n## chr (2): country, continent\n## dbl (4): year, lifeExp, pop, gdpPercap\n## \n## ℹ Use `spec()` to retrieve the full column specification for this data.\n## ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\ngapdata## # A tibble: 1,704 × 6\n##    country     continent  year lifeExp      pop gdpPercap\n##    <chr>       <chr>     <dbl>   <dbl>    <dbl>     <dbl>\n##  1 Afghanistan Asia       1952    28.8  8425333      779.\n##  2 Afghanistan Asia       1957    30.3  9240934      821.\n##  3 Afghanistan Asia       1962    32.0 10267083      853.\n##  4 Afghanistan Asia       1967    34.0 11537966      836.\n##  5 Afghanistan Asia       1972    36.1 13079460      740.\n##  6 Afghanistan Asia       1977    38.4 14880372      786.\n##  7 Afghanistan Asia       1982    39.9 12881816      978.\n##  8 Afghanistan Asia       1987    40.8 13867957      852.\n##  9 Afghanistan Asia       1992    41.7 16317921      649.\n## 10 Afghanistan Asia       1997    41.8 22227415      635.\n## # ℹ 1,694 more rows"},{"path":"tidyverse-ggplot2-geom.html","id":"检查数据","chapter":"第 19 章 ggplot2之几何形状","heading":"19.3.2 检查数据","text":"是否有缺失值country 代表国家countinet 表示所在的洲year 时间lifeExp 平均寿命pop 人口数量gdpPercap 人均GDP\n接下来，我们需要思考我们应该选择什么样的图，呈现这些不同类型的数据，探索数据背后的故事\n","code":"\ngapdata %>%\n  summarise(\n    across(everything(), ~ sum(is.na(.)))\n  )## # A tibble: 1 × 6\n##   country continent  year lifeExp   pop gdpPercap\n##     <int>     <int> <int>   <int> <int>     <int>\n## 1       0         0     0       0     0         0"},{"path":"tidyverse-ggplot2-geom.html","id":"基本绘图","chapter":"第 19 章 ggplot2之几何形状","heading":"19.4 基本绘图","text":"","code":""},{"path":"tidyverse-ggplot2-geom.html","id":"柱状图","chapter":"第 19 章 ggplot2之几何形状","heading":"19.4.1 柱状图","text":"常用于一个离散变量可见，geom_bar() 自动完成了这个统计，更多geom与stat对应关系见这里我个人比较喜欢先统计，然后画图","code":"\ngapdata %>%\n  ggplot(aes(x = continent)) +\n  geom_bar()\ngapdata %>%\n  ggplot(aes(x = reorder(continent, continent, length))) +\n  geom_bar()\ngapdata %>%\n  ggplot(aes(x = reorder(continent, continent, length))) +\n  geom_bar() +\n  coord_flip()\n# geom_bar vs stat_count\ngapdata %>%\n  ggplot(aes(x = continent)) +\n  stat_count()\ngapdata %>% count(continent)## # A tibble: 5 × 2\n##   continent     n\n##   <chr>     <int>\n## 1 Africa      624\n## 2 Americas    300\n## 3 Asia        396\n## 4 Europe      360\n## 5 Oceania      24\ngapdata %>%\n  distinct(continent, country) %>%\n  ggplot(aes(x = continent)) +\n  geom_bar()\ngapdata %>%\n  distinct(continent, country) %>%\n  group_by(continent) %>%\n  summarise(num = n()) %>%\n  ggplot(aes(x = continent, y = num)) +\n  geom_col()"},{"path":"tidyverse-ggplot2-geom.html","id":"直方图","chapter":"第 19 章 ggplot2之几何形状","heading":"19.4.2 直方图","text":"常用于一个连续变量geom_histograms(), 默认使用 position = \"stack\"也可以指定 position = \"identity\"","code":"\ngapdata %>%\n  ggplot(aes(x = lifeExp)) +\n  geom_histogram() # corresponding to stat_bin()## `stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\ngapdata %>%\n  ggplot(aes(x = lifeExp)) +\n  geom_histogram(binwidth = 1)\ngapdata %>%\n  ggplot(aes(x = lifeExp, fill = continent)) +\n  geom_histogram()## `stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\ngapdata %>%\n  ggplot(aes(x = lifeExp, fill = continent)) +\n  geom_histogram(position = \"identity\")## `stat_bin()` using `bins = 30`. Pick better value with `binwidth`."},{"path":"tidyverse-ggplot2-geom.html","id":"频次图","chapter":"第 19 章 ggplot2之几何形状","heading":"19.4.3 频次图","text":"","code":"\ngapdata %>%\n  ggplot(aes(x = lifeExp, color = continent)) +\n  geom_freqpoly()## `stat_bin()` using `bins = 30`. Pick better value with `binwidth`."},{"path":"tidyverse-ggplot2-geom.html","id":"密度图","chapter":"第 19 章 ggplot2之几何形状","heading":"19.4.4 密度图","text":"如果不喜欢下面那条线，可以这样geom_density() 中adjust 用于调节bandwidth, adjust = 1/2 means use half default bandwidth.直方图和密度图画在一起。注意y = stat(density)表示y是由x新生成的变量，这是一种固定写法，类似的还有stat(count), stat(level)","code":"\n#' smooth histogram = density plot\ngapdata %>%\n  ggplot(aes(x = lifeExp)) +\n  geom_density()\ngapdata %>%\n  ggplot(aes(x = lifeExp)) +\n  geom_line(stat = \"density\")\ngapdata %>%\n  ggplot(aes(x = lifeExp)) +\n  geom_density(adjust = 1)\ngapdata %>%\n  ggplot(aes(x = lifeExp)) +\n  geom_density(adjust = 0.2)\ngapdata %>%\n  ggplot(aes(x = lifeExp, color = continent)) +\n  geom_density()\ngapdata %>%\n  ggplot(aes(x = lifeExp, fill = continent)) +\n  geom_density(alpha = 0.2)\ngapdata %>%\n  filter(continent != \"Oceania\") %>%\n  ggplot(aes(x = lifeExp, fill = continent)) +\n  geom_density(alpha = 0.2)\ngapdata %>%\n  filter(continent != \"Oceania\") %>%\n  ggplot(aes(x = lifeExp, y = stat(density))) +\n  geom_histogram(aes(fill = continent)) +\n  geom_density() ## Warning: `stat(density)` was deprecated in ggplot2 3.4.0.\n## ℹ Please use `after_stat(density)` instead.\n## This warning is displayed once every 8 hours.\n## Call `lifecycle::last_lifecycle_warnings()` to see where this warning was\n## generated.## `stat_bin()` using `bins = 30`. Pick better value with `binwidth`."},{"path":"tidyverse-ggplot2-geom.html","id":"箱线图-1","chapter":"第 19 章 ggplot2之几何形状","heading":"19.4.5 箱线图","text":"一个离散变量 + 一个连续变量，思考下结果为什么是这样？数据框中的year变量是数值型，需要先转换成因子型，弄成离散型变量明确指定分组变量","code":"\ngapdata %>%\n  ggplot(aes(x = year, y = lifeExp)) +\n  geom_boxplot()## Warning: Continuous x aesthetic\n## ℹ did you forget `aes(group = ...)`?\ngapdata %>%\n  ggplot(aes(x = as.factor(year), y = lifeExp)) +\n  geom_boxplot()\ngapdata %>%\n  ggplot(aes(x = year, y = lifeExp)) +\n  geom_boxplot(aes(group = year))\ngapdata %>%\n  ggplot(aes(x = year, y = lifeExp)) +\n  geom_violin(aes(group = year)) +\n  geom_jitter(alpha = 1 / 4) +\n  geom_smooth(se = FALSE)## `geom_smooth()` using method = 'gam' and formula = 'y ~ s(x, bs = \"cs\")'"},{"path":"tidyverse-ggplot2-geom.html","id":"抖散图","chapter":"第 19 章 ggplot2之几何形状","heading":"19.4.6 抖散图","text":"点重叠的处理方案注意到我们已经提到过 stat_count / stat_bin / stat_summary ","code":"\ngapdata %>% \n  ggplot(aes(x = continent, y = lifeExp)) +\n  geom_point()\ngapdata %>% \n  ggplot(aes(x = continent, y = lifeExp)) +\n  geom_jitter()\ngapdata %>% \n  ggplot(aes(x = continent, y = lifeExp)) +\n  geom_boxplot()\ngapdata %>% \n  ggplot(aes(x = continent, y = lifeExp)) +\n  geom_boxplot() +\n  geom_jitter()\ngapdata %>%\n  ggplot(aes(x = continent, y = lifeExp)) +\n  geom_jitter() +\n  stat_summary(fun.y = median, colour = \"red\", geom = \"point\", size = 5)## Warning: The `fun.y` argument of `stat_summary()` is deprecated as of ggplot2 3.3.0.\n## ℹ Please use the `fun` argument instead.\n## This warning is displayed once every 8 hours.\n## Call `lifecycle::last_lifecycle_warnings()` to see where this warning was\n## generated.\ngapdata %>%\n  ggplot(aes(reorder(x = continent, lifeExp), y = lifeExp)) +\n  geom_jitter() +\n  stat_summary(fun.y = median, colour = \"red\", geom = \"point\", size = 5)\ngapdata %>%\n  ggplot(aes(x = continent, y = lifeExp)) +\n  geom_violin(\n    trim = FALSE,\n    alpha = 0.5\n  ) +\n  stat_summary(\n    fun.y = mean,\n    fun.ymax = function(x) {\n      mean(x) + sd(x)\n    },\n    fun.ymin = function(x) {\n      mean(x) - sd(x)\n    },\n    geom = \"pointrange\"\n  )## Warning: The `fun.ymin` argument of `stat_summary()` is deprecated as of ggplot2 3.3.0.\n## ℹ Please use the `fun.min` argument instead.\n## This warning is displayed once every 8 hours.\n## Call `lifecycle::last_lifecycle_warnings()` to see where this warning was\n## generated.## Warning: The `fun.ymax` argument of `stat_summary()` is deprecated as of ggplot2 3.3.0.\n## ℹ Please use the `fun.max` argument instead.\n## This warning is displayed once every 8 hours.\n## Call `lifecycle::last_lifecycle_warnings()` to see where this warning was\n## generated."},{"path":"tidyverse-ggplot2-geom.html","id":"山峦图","chapter":"第 19 章 ggplot2之几何形状","heading":"19.4.7 山峦图","text":"常用于一个离散变量 + 一个连续变量","code":"\ngapdata %>%\n  ggplot(aes(\n    x = lifeExp,\n    y = continent,\n    fill = continent\n  )) +\n  ggridges::geom_density_ridges()## Picking joint bandwidth of 2.23\n# https://learnui.design/tools/data-color-picker.html#palette\ngapdata %>%\n  ggplot(aes(\n    x = lifeExp,\n    y = continent,\n    fill = continent\n  )) +\n  ggridges::geom_density_ridges() +\n  scale_fill_manual(\n    values = c(\"#003f5c\", \"#58508d\", \"#bc5090\", \"#ff6361\", \"#ffa600\")\n  )## Picking joint bandwidth of 2.23\ngapdata %>%\n  ggplot(aes(\n    x = lifeExp,\n    y = continent,\n    fill = continent\n  )) +\n  ggridges::geom_density_ridges() +\n  scale_fill_manual(\n    values = colorspace::sequential_hcl(5, palette = \"Peach\")\n  )## Picking joint bandwidth of 2.23"},{"path":"tidyverse-ggplot2-geom.html","id":"散点图-1","chapter":"第 19 章 ggplot2之几何形状","heading":"19.4.8 散点图","text":"常用于两个连续变量这是一种技巧，但我更推荐以下方法如果觉得麻烦，就用gghighlight宏包吧","code":"\ngapdata %>%\n  ggplot(aes(x = gdpPercap, y = lifeExp)) +\n  geom_point()\ngapdata %>%\n  ggplot(aes(x = log(gdpPercap), y = lifeExp)) +\n  geom_point()\ngapdata %>%\n  ggplot(aes(x = gdpPercap, y = lifeExp)) +\n  geom_point() +\n  scale_x_log10() # A better way to log transform\ngapdata %>%\n  ggplot(aes(x = gdpPercap, y = lifeExp)) +\n  geom_point(aes(color = continent))\ngapdata %>%\n  ggplot(aes(x = gdpPercap, y = lifeExp)) +\n  geom_point(alpha = (1 / 3), size = 2)\ngapdata %>%\n  ggplot(aes(x = gdpPercap, y = lifeExp)) +\n  geom_point() +\n  geom_smooth()## `geom_smooth()` using method = 'gam' and formula = 'y ~ s(x, bs = \"cs\")'\ngapdata %>%\n  ggplot(aes(x = gdpPercap, y = lifeExp)) +\n  geom_point() +\n  geom_smooth(lwd = 3, se = FALSE)## `geom_smooth()` using method = 'gam' and formula = 'y ~ s(x, bs = \"cs\")'\ngapdata %>%\n  ggplot(aes(x = gdpPercap, y = lifeExp)) +\n  geom_point() +\n  geom_smooth(lwd = 3, se = FALSE, method = \"lm\")## `geom_smooth()` using formula = 'y ~ x'\ngapdata %>%\n  ggplot(aes(x = gdpPercap, y = lifeExp, color = continent)) +\n  geom_point() +\n  geom_smooth(lwd = 3, se = FALSE, method = \"lm\")## `geom_smooth()` using formula = 'y ~ x'\njCountries <- c(\"Canada\", \"Rwanda\", \"Cambodia\", \"Mexico\")\n\ngapdata %>%\n  filter(country %in% jCountries) %>%\n  ggplot(aes(x = year, y = lifeExp, color = country)) +\n  geom_line() +\n  geom_point()\ngapdata %>%\n  filter(country %in% jCountries) %>%\n  ggplot(aes(\n    x = year, y = lifeExp,\n    color = reorder(country, -1 * lifeExp, max)\n  )) +\n  geom_line() +\n  geom_point()\nd1 <- gapdata %>%\n  filter(country %in% jCountries) %>%\n  group_by(country) %>%\n  mutate(end_label = if_else(year == max(year), country, NA_character_))\n\nd1## # A tibble: 48 × 7\n## # Groups:   country [4]\n##    country  continent  year lifeExp      pop gdpPercap end_label\n##    <chr>    <chr>     <dbl>   <dbl>    <dbl>     <dbl> <chr>    \n##  1 Cambodia Asia       1952    39.4  4693836      368. <NA>     \n##  2 Cambodia Asia       1957    41.4  5322536      434. <NA>     \n##  3 Cambodia Asia       1962    43.4  6083619      497. <NA>     \n##  4 Cambodia Asia       1967    45.4  6960067      523. <NA>     \n##  5 Cambodia Asia       1972    40.3  7450606      422. <NA>     \n##  6 Cambodia Asia       1977    31.2  6978607      525. <NA>     \n##  7 Cambodia Asia       1982    51.0  7272485      624. <NA>     \n##  8 Cambodia Asia       1987    53.9  8371791      684. <NA>     \n##  9 Cambodia Asia       1992    55.8 10150094      682. <NA>     \n## 10 Cambodia Asia       1997    56.5 11782962      734. <NA>     \n## # ℹ 38 more rows\nd1 %>% ggplot(aes(\n  x = year, y = lifeExp, color = country\n)) +\n  geom_line() +\n  geom_point() +\n  geom_label(aes(label = end_label)) +\n  theme(legend.position = \"none\")## Warning: Removed 44 rows containing missing values (`geom_label()`).\ngapdata %>%\n  filter(country %in% jCountries) %>%\n  ggplot(aes(\n    x = year, y = lifeExp, color = country\n  )) +\n  geom_line() +\n  geom_point() +\n  gghighlight::gghighlight()## label_key: country"},{"path":"tidyverse-ggplot2-geom.html","id":"点线图","chapter":"第 19 章 ggplot2之几何形状","heading":"19.4.9 点线图","text":"","code":"\ngapdata %>%\n  filter(continent == \"Asia\" & year == 2007) %>%\n  ggplot(aes(x = lifeExp, y = country)) +\n  geom_point()\ngapdata %>%\n  filter(continent == \"Asia\" & year == 2007) %>%\n  ggplot(aes(\n    x = lifeExp,\n    y = reorder(country, lifeExp)\n  )) +\n  geom_point(color = \"blue\", size = 2) +\n  geom_segment(aes(\n    x = 40,\n    xend = lifeExp,\n    y = reorder(country, lifeExp),\n    yend = reorder(country, lifeExp)\n  ),\n  color = \"lightgrey\"\n  ) +\n  labs(\n    x = \"Life Expectancy (years)\",\n    y = \"\",\n    title = \"Life Expectancy by Country\",\n    subtitle = \"GapMinder data for Asia - 2007\"\n  ) +\n  theme_minimal() +\n  theme(\n    panel.grid.major = element_blank(),\n    panel.grid.minor = element_blank()\n  )"},{"path":"tidyverse-ggplot2-geom.html","id":"分面","chapter":"第 19 章 ggplot2之几何形状","heading":"19.4.10 分面","text":"如果想分别画出每个洲的寿命分布图，我们想到的是这样事实上，ggplot2的分面，可以很快捷的完成。分面有两个\n- facet_grid()\n- facet_wrap()","code":"\ngapdata %>% \n  filter(continent == \"Africa\") %>% \n  ggplot(aes(x = lifeExp)) +\n  geom_density()\n\ngapdata %>% \n  filter(continent == \"Americas\") %>% \n  ggplot(aes(x = lifeExp)) +\n  geom_density()\n\ngapdata %>% \n  filter(continent == \"Asia\") %>% \n  ggplot(aes(x = lifeExp)) +\n  geom_density()\n\ngapdata %>% \n  filter(continent == \"Europe\") %>% \n  ggplot(aes(x = lifeExp)) +\n  geom_density()\n\ngapdata %>% \n  filter(continent == \"Oceania\") %>% \n  ggplot(aes(x = lifeExp)) +\n  geom_density()"},{"path":"tidyverse-ggplot2-geom.html","id":"facet_grid","chapter":"第 19 章 ggplot2之几何形状","heading":"19.4.10.1 facet_grid()","text":"create grid graphs, rows columnsuse vars() call variablesadjust scales scales = \"free\"","code":"\ngapdata %>%\n  ggplot(aes(x = lifeExp)) +\n  geom_density() +\n  facet_grid(. ~ continent)\ngapdata %>%\n  filter(continent != \"Oceania\") %>%\n  ggplot(aes(x = lifeExp, fill = continent)) +\n  geom_histogram() +\n  facet_grid(continent ~ .)## `stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\ngapdata %>%\n  filter(continent != \"Oceania\") %>%\n  ggplot(aes(x = lifeExp, y = stat(density))) +\n  geom_histogram(aes(fill = continent)) +\n  geom_density() +\n  facet_grid(continent ~ .)## `stat_bin()` using `bins = 30`. Pick better value with `binwidth`."},{"path":"tidyverse-ggplot2-geom.html","id":"facet_wrap","chapter":"第 19 章 ggplot2之几何形状","heading":"19.4.10.2 facet_wrap()","text":"create small multiples “wrapping” series plotsuse vars() call variablesnrow ncol arguments dictating shape grid","code":"\ngapdata %>%\n  ggplot(aes(x = gdpPercap, y = lifeExp, color = continent)) +\n  geom_point(show.legend = FALSE) +\n  facet_wrap(~continent)"},{"path":"tidyverse-ggplot2-geom.html","id":"文本标注","chapter":"第 19 章 ggplot2之几何形状","heading":"19.4.11 文本标注","text":"","code":"\ngapdata %>%\n  ggplot(aes(x = gdpPercap, y = lifeExp)) +\n  geom_point() +\n  ggforce::geom_mark_ellipse(aes(\n    filter = gdpPercap > 70000,\n    label = \"Rich country\",\n    description = \"What country are they?\"\n  ))\nten_countries <- gapdata %>%\n  distinct(country) %>%\n  pull() %>%\n  sample(10)\nlibrary(ggrepel)\ngapdata %>%\n  filter(year == 2007) %>%\n  mutate(\n    label = ifelse(country %in% ten_countries, as.character(country), \"\")\n  ) %>%\n  ggplot(aes(log(gdpPercap), lifeExp)) +\n  geom_point(\n    size = 3.5,\n    alpha = .9,\n    shape = 21,\n    col = \"white\",\n    fill = \"#0162B2\"\n  ) +\n  geom_text_repel(\n    aes(label = label),\n    size = 4.5,\n    point.padding = .2,\n    box.padding = .3,\n    force = 1,\n    min.segment.length = 0\n  ) +\n  theme_minimal(14) +\n  theme(\n    legend.position = \"none\",\n    panel.grid.minor = element_blank()\n  ) +\n  labs(\n    x = \"log(GDP per capita)\",\n    y = \"life expectancy\"\n  )## Warning: ggrepel: 2 unlabeled data points (too many overlaps). Consider\n## increasing max.overlaps"},{"path":"tidyverse-ggplot2-geom.html","id":"errorbar图","chapter":"第 19 章 ggplot2之几何形状","heading":"19.4.12 errorbar图","text":"","code":"\navg_gapdata <- gapdata %>%\n  group_by(continent) %>%\n  summarise(\n    mean = mean(lifeExp),\n    sd = sd(lifeExp)\n  )\navg_gapdata## # A tibble: 5 × 3\n##   continent  mean    sd\n##   <chr>     <dbl> <dbl>\n## 1 Africa     48.9  9.15\n## 2 Americas   64.7  9.35\n## 3 Asia       60.1 11.9 \n## 4 Europe     71.9  5.43\n## 5 Oceania    74.3  3.80\navg_gapdata %>%\n  ggplot(aes(continent, mean, fill = continent)) +\n  # geom_col(alpha = 0.5) +\n  geom_point() +\n  geom_errorbar(aes(ymin = mean - sd, ymax = mean + sd), width = 0.25)"},{"path":"tidyverse-ggplot2-geom.html","id":"椭圆图","chapter":"第 19 章 ggplot2之几何形状","heading":"19.4.13 椭圆图","text":"","code":"\ngapdata %>%\n  ggplot(aes(x = log(gdpPercap), y = lifeExp)) +\n  geom_point() +\n  stat_ellipse(type = \"norm\", level = 0.95)"},{"path":"tidyverse-ggplot2-geom.html","id":"d-密度图","chapter":"第 19 章 ggplot2之几何形状","heading":"19.4.14 2D 密度图","text":"与一维的情形geom_density()类似，\ngeom_density_2d(), geom_bin2d(), geom_hex()常用于刻画两个变量构成的二维区间的密度","code":"\ngapdata %>%\n  ggplot(aes(x = gdpPercap, y = lifeExp)) +\n  geom_bin2d()\ngapdata %>%\n  ggplot(aes(x = gdpPercap, y = lifeExp)) +\n  geom_hex()"},{"path":"tidyverse-ggplot2-geom.html","id":"马赛克图","chapter":"第 19 章 ggplot2之几何形状","heading":"19.4.15 马赛克图","text":"geom_tile()， geom_contour()， geom_raster()常用于3个变量事实上可以有更好的呈现方式","code":"\ngapdata %>%\n  group_by(continent, year) %>%\n  summarise(mean_lifeExp = mean(lifeExp)) %>%\n  ggplot(aes(x = year, y = continent, fill = mean_lifeExp)) +\n  geom_tile() +\n  scale_fill_viridis_c()## `summarise()` has grouped output by 'continent'. You can override using the\n## `.groups` argument.\ngapdata %>%\n  group_by(continent, year) %>%\n  summarise(mean_lifeExp = mean(lifeExp)) %>%\n  ggplot(aes(x = year, y = continent, size = mean_lifeExp)) +\n  geom_point()## `summarise()` has grouped output by 'continent'. You can override using the\n## `.groups` argument.\ngapdata %>%\n  group_by(continent, year) %>%\n  summarise(mean_lifeExp = mean(lifeExp)) %>%\n  ggplot(aes(x = year, y = continent, size = mean_lifeExp)) +\n  geom_point(shape = 21, color = \"red\", fill = \"white\") +\n  scale_size_continuous(range = c(7, 15)) +\n  geom_text(aes(label = round(mean_lifeExp, 2)), size = 3, color = \"black\") +\n  theme(legend.position = \"none\")## `summarise()` has grouped output by 'continent'. You can override using the\n## `.groups` argument."},{"path":"tidyverse-ggplot2-geom.html","id":"课后思考题","chapter":"第 19 章 ggplot2之几何形状","heading":"19.5 课后思考题","text":"哪画图的代码中，哪两张图的结果是一样？为什么？","code":"\nlibrary(tidyverse)\ntbl <-\n  tibble(\n    x = rep(c(1, 2, 3), times = 2),\n    y = 1:6,\n    group = rep(c(\"group1\", \"group2\"), each = 3)\n  )\nggplot(tbl, aes(x, y)) + geom_line()\nggplot(tbl, aes(x, y, group = group)) + geom_line()\nggplot(tbl, aes(x, y, fill = group)) + geom_line()\nggplot(tbl, aes(x, y, color = group)) + geom_line()"},{"path":"tidyverse-ggplot2-geom.html","id":"参考资料","chapter":"第 19 章 ggplot2之几何形状","heading":"19.6 参考资料","text":"Look Data Data Vizualization Social ScienceChapter 3: Data Visualisation R Data ScienceChapter 28: Graphics communication R Data ScienceGraphs R Graphics Cookbookggplot2 cheat sheetggplot2 documentationThe R Graph Gallery (really useful)Top 50 ggplot2 VisualizationsR Graphics Cookbook Winston Changggplot extensionsplotly creating interactive graphs","code":""},{"path":"tidyverse-ggplot2-scales.html","id":"tidyverse-ggplot2-scales","chapter":"第 20 章 ggplot2之标度","heading":"第 20 章 ggplot2之标度","text":"用 ggplot2 画图，有种恋爱的感觉:\n“你懂我的图谋不轨，我懂你的故作矜持”这一章我们一起学习ggplot2中的scales语法，推荐大家阅读Hadley Wickham最新版的《ggplot2: Elegant Graphics Data Analysis》，但如果需要详细了解标度参数体系，还是要看ggplot2官方文档ggplot2图层语法框架\n图 19.1: ggplot2图层语法框架\n","code":""},{"path":"tidyverse-ggplot2-scales.html","id":"标度","chapter":"第 20 章 ggplot2之标度","heading":"20.1 标度","text":"在 19章，我们了解到ggplot2中，映射是数据转化到图形属性，这里的图形属性是指视觉可以感知的东西，比如大小，形状，颜色和位置等。我们今天讨论的标度（scale）是控制着数据到图形属性映射的函数，每一种标度都是从数据空间的某个区域（标度的定义域）到图形属性空间的某个区域（标度的值域）的一个函数。简单点来说，标度是用于调整数据映射的图形属性。\n在ggplot2中，每一种图形属性都拥有一个默认的标度，也许你对这个默认的标度不满意，可以就需要学习如何修改默认的标度。比如，\n系统默认\"\"对应红色，\"b\"对应蓝色，我们想让\"\"对应紫色，\"b\"对应橙色。","code":""},{"path":"tidyverse-ggplot2-scales.html","id":"图形属性和变量类型","chapter":"第 20 章 ggplot2之标度","heading":"20.2 图形属性和变量类型","text":"还是用我们熟悉的ggplot2::mpg，可能有同学说，我画图没接触到scale啊，比如能画个很漂亮的图，那是因为ggplot2默认缺省条件下，已经很美观了。（据说Hadley Wickham很后悔使用了这么漂亮的缺省值，因为很漂亮了大家都不认真学画图了。马云好像也说后悔创立了阿里巴巴？）事实上，根据映射关系和变量名，我们将标度写完整，应该是这样的如果每次都要手动设置一次标度函数，那将是比较繁琐的事情。因此ggplot2使用了默认了设置，如果不满意ggplot2的默认值，可以手动调整或者改写标度，比如","code":"\nlibrary(tidyverse)## ── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n## ✔ dplyr     1.1.3     ✔ readr     2.1.4\n## ✔ forcats   1.0.0     ✔ stringr   1.5.0\n## ✔ ggplot2   3.4.3     ✔ tibble    3.2.1\n## ✔ lubridate 1.9.2     ✔ tidyr     1.3.0\n## ✔ purrr     1.0.2     \n## ── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n## ✖ dplyr::filter() masks stats::filter()\n## ✖ dplyr::lag()    masks stats::lag()\n## ℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\nmpg %>% \n  ggplot(aes(x = displ, y = hwy)) + \n  geom_point(aes(colour = class)) \nggplot(mpg, aes(x = displ, y = hwy)) + \n  geom_point(aes(colour = class)) +\n  \n  scale_x_continuous() + \n  scale_y_continuous() + \n  scale_colour_discrete()\nggplot(mpg, aes(x = displ, y = hwy)) + \n  geom_point(aes(colour = class)) +\n  \n  scale_x_continuous(name = \"This is my x axis\") + \n  scale_y_continuous(name = \"This is my y axis\") + \n  scale_colour_brewer()"},{"path":"tidyverse-ggplot2-scales.html","id":"坐标轴和图例是同样的东西","chapter":"第 20 章 ggplot2之标度","heading":"20.3 坐标轴和图例是同样的东西","text":"","code":""},{"path":"tidyverse-ggplot2-scales.html","id":"丰富的标度体系","chapter":"第 20 章 ggplot2之标度","heading":"20.4 丰富的标度体系","text":"注意到，标度函数是由”_“分割的三个部分构成的\n- scale\n- 视觉属性名 (e.g., colour, shape x)\n- 标度名 (e.g., continuous, discrete, brewer).每个标度函数内部都有丰富的参数系统参数name，坐标和图例的名字，如果不想要图例的名字，就可以 name = NULL参数name，坐标和图例的名字，如果不想要图例的名字，就可以 name = NULL参数limits, 坐标或图例的范围区间。连续性c(n, m)，离散型c(\"\", \"b\", \"c\")参数limits, 坐标或图例的范围区间。连续性c(n, m)，离散型c(\"\", \"b\", \"c\")参数breaks, 控制显示在坐标轴或者图例上的值（元素）参数breaks, 控制显示在坐标轴或者图例上的值（元素）参数labels, 坐标和图例的间隔标签\n一般情况下，内置函数会自动完成\n也可人工指定一个字符型向量，与breaks提供的字符型向量一一对应\n也可以是函数，把breaks提供的字符型向量当做函数的输入\nNULL，就是去掉标签\n参数labels, 坐标和图例的间隔标签一般情况下，内置函数会自动完成也可人工指定一个字符型向量，与breaks提供的字符型向量一一对应也可以是函数，把breaks提供的字符型向量当做函数的输入NULL，就是去掉标签参数values 指的是（颜色、形状等）视觉属性值,\n要么，与数值的顺序一致；\n要么，与breaks提供的字符型向量长度一致\n要么，用命名向量c(\"数据标签\" = \"视觉属性\")提供\n参数values 指的是（颜色、形状等）视觉属性值,要么，与数值的顺序一致；要么，与breaks提供的字符型向量长度一致要么，用命名向量c(\"数据标签\" = \"视觉属性\")提供参数expand, 控制参数溢出量参数expand, 控制参数溢出量参数range, 设置尺寸大小范围，比如针对点的相对大小参数range, 设置尺寸大小范围，比如针对点的相对大小下面，我们通过具体的案例讲解如何使用参数，把图形变成我们想要的模样。","code":"scale_colour_manual(\n  palette = function(), \n  limits = NULL,\n  name = waiver(),\n  labels = waiver(),\n  breaks = waiver(),\n  minor_breaks = waiver(),\n  values = waiver(),\n  ...\n)"},{"path":"tidyverse-ggplot2-scales.html","id":"案例详解","chapter":"第 20 章 ggplot2之标度","heading":"20.5 案例详解","text":"先导入一个数据离散变量映射到色彩的情形，可以使用ColorBrewer色彩。","code":"\ngapdata <- read_csv(\"./demo_data/gapminder.csv\")## Rows: 1704 Columns: 6\n## ── Column specification ────────────────────────────────────────────────────────\n## Delimiter: \",\"\n## chr (2): country, continent\n## dbl (4): year, lifeExp, pop, gdpPercap\n## \n## ℹ Use `spec()` to retrieve the full column specification for this data.\n## ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\nnewgapdata <- gapdata %>% \n  group_by(continent, country) %>% \n  summarise(\n    across(c(lifeExp, gdpPercap, pop), mean)\n  )## `summarise()` has grouped output by 'continent'. You can override using the\n## `.groups` argument.\nnewgapdata## # A tibble: 142 × 5\n## # Groups:   continent [5]\n##    continent country                  lifeExp gdpPercap       pop\n##    <chr>     <chr>                      <dbl>     <dbl>     <dbl>\n##  1 Africa    Algeria                     59.0     4426. 19875406.\n##  2 Africa    Angola                      37.9     3607.  7309390.\n##  3 Africa    Benin                       48.8     1155.  4017497.\n##  4 Africa    Botswana                    54.6     5032.   971186.\n##  5 Africa    Burkina Faso                44.7      844.  7548677.\n##  6 Africa    Burundi                     44.8      472.  4651608.\n##  7 Africa    Cameroon                    48.1     1775.  9816648.\n##  8 Africa    Central African Republic    43.9      959.  2560963 \n##  9 Africa    Chad                        46.8     1165.  5329256.\n## 10 Africa    Comoros                     52.4     1314.   361684.\n## # ℹ 132 more rows\nnewgapdata %>% \n  ggplot(aes(x = gdpPercap, y = lifeExp)) +\n    geom_point(aes(color = continent, size = pop)) +\n    scale_x_continuous()\nnewgapdata %>% \n  ggplot(aes(x = gdpPercap, y = lifeExp)) +\n    geom_point(aes(color = continent, size = pop)) +\n    scale_x_log10()\nnewgapdata %>% \n  ggplot(aes(x = gdpPercap, y = lifeExp)) +\n    geom_point(aes(color = continent, size = pop)) +\n    scale_x_log10(breaks = c(500, 1000, 3000, 10000, 30000),\n                  labels = scales::dollar)\nnewgapdata %>% \n  ggplot(aes(x = gdpPercap, y = lifeExp)) +\n    geom_point(aes(color = continent, size = pop)) +\n    scale_x_log10(\n      name = \"GDP per capita\",\n      breaks = c(500, 1000, 3000, 10000, 30000),\n      labels = scales::unit_format(unit = \"dollar\"))\nnewgapdata %>% \n  ggplot(aes(x = gdpPercap, y = lifeExp)) +\n    geom_point(aes(color = continent, size = pop)) +\n    scale_x_log10() +\n    scale_color_viridis_d()\nnewgapdata %>% \n  ggplot(aes(x = gdpPercap, y = lifeExp)) +\n    geom_point(aes(color = continent, size = pop)) +\n    scale_x_log10() +\n    scale_color_brewer(type = \"qual\", palette = \"Set1\")\nnewgapdata %>% \n  ggplot(aes(x = gdpPercap, y = lifeExp)) +\n    geom_point(aes(color = continent, size = pop)) +\n    scale_x_log10() +\n    scale_color_manual(\n      name = \"continents\",\n      values = c(\"Africa\" = \"red\", \"Americas\" = \"blue\", \"Asia\" = \"orange\",\n                 \"Europe\" = \"black\", \"Oceania\" = \"gray\"),\n      breaks = c(\"Africa\", \"Americas\", \"Asia\", \"Europe\", \"Oceania\"),\n      labels = c(\"africa\", \"americas\", \"asia\", \"europe\", \"oceania\")\n    ) +\n   scale_size(\n     name = \"population size\",\n     breaks = c(2e8, 5e8, 7e8),\n     labels = c(\"200 million\", \"500 million\", \"700 million\")\n   )"},{"path":"tidyverse-ggplot2-scales.html","id":"用标度还是主题","chapter":"第 20 章 ggplot2之标度","heading":"20.6 用标度还是主题？","text":"那什么时候用标度，什么时候用主题？这里有个原则：主题风格不会增加标签，也不会改变变量的范围，主题只会改变字体、大小、颜色等等。","code":""},{"path":"tidyverse-ggplot2-scales.html","id":"作业-1","chapter":"第 20 章 ggplot2之标度","heading":"20.7 作业","text":"用 ggplot2 重复这张lego图","code":""},{"path":"tidyverse-ggplot2-scales.html","id":"参考资料-1","chapter":"第 20 章 ggplot2之标度","heading":"20.8 参考资料","text":"https://ggplot2tor.com/scales/","code":""},{"path":"tidyverse-ggplot2-theme.html","id":"tidyverse-ggplot2-theme","chapter":"第 21 章 ggplot2之主题设置","heading":"第 21 章 ggplot2之主题设置","text":"这一章我们一起学习ggplot2中的theme elements\n语法，感谢Henry Wang提供了很好的思路。如果需要详细了解，可以参考Hadley Wickham最新版的《ggplot2: Elegant Graphics Data Analysis》，最推荐的是ggplot2官方文档这里element_function()有四个望文生义吧，内置元素函数有四个基础类型：element_text(), 文本，一般用于控制标签和标题的字体风格element_line(), 线条，一般用于控制线条或线段的颜色或线条类型element_rect(), 矩形区域，一般用于控制背景矩形的颜色或者边界线条类型element_blank() , 空白，就是不分配相应的绘图空间，即删去这个地方的绘图元素。每个元素函数都有一系列控制外观的参数，下面我们通过具体的案例来一一介绍吧。还是用让人生厌的ggplot2::mpg数据包吧，具体介绍请见18 章。稍微做点数据整理我相信这种图你们已经会画了吧想让这张图，符合你的想法？如何控制呢？come ","code":"\ntheme(element_name = element_function())\nelement_text()\nelement_line()\nelement_rect()\nelement_blank()\nlibrary(tidyverse)## ── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n## ✔ dplyr     1.1.3     ✔ readr     2.1.4\n## ✔ forcats   1.0.0     ✔ stringr   1.5.0\n## ✔ ggplot2   3.4.3     ✔ tibble    3.2.1\n## ✔ lubridate 1.9.2     ✔ tidyr     1.3.0\n## ✔ purrr     1.0.2     \n## ── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n## ✖ dplyr::filter() masks stats::filter()\n## ✖ dplyr::lag()    masks stats::lag()\n## ℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\nglimpse(mpg)## Rows: 234\n## Columns: 11\n## $ manufacturer <chr> \"audi\", \"audi\", \"audi\", \"audi\", \"audi\", \"audi\", \"audi\", \"…\n## $ model        <chr> \"a4\", \"a4\", \"a4\", \"a4\", \"a4\", \"a4\", \"a4\", \"a4 quattro\", \"…\n## $ displ        <dbl> 1.8, 1.8, 2.0, 2.0, 2.8, 2.8, 3.1, 1.8, 1.8, 2.0, 2.0, 2.…\n## $ year         <int> 1999, 1999, 2008, 2008, 1999, 1999, 2008, 1999, 1999, 200…\n## $ cyl          <int> 4, 4, 4, 4, 6, 6, 6, 4, 4, 4, 4, 6, 6, 6, 6, 6, 6, 8, 8, …\n## $ trans        <chr> \"auto(l5)\", \"manual(m5)\", \"manual(m6)\", \"auto(av)\", \"auto…\n## $ drv          <chr> \"f\", \"f\", \"f\", \"f\", \"f\", \"f\", \"f\", \"4\", \"4\", \"4\", \"4\", \"4…\n## $ cty          <int> 18, 21, 20, 21, 16, 18, 18, 18, 16, 20, 19, 15, 17, 17, 1…\n## $ hwy          <int> 29, 29, 31, 30, 26, 26, 27, 26, 25, 28, 27, 25, 25, 25, 2…\n## $ fl           <chr> \"p\", \"p\", \"p\", \"p\", \"p\", \"p\", \"p\", \"p\", \"p\", \"p\", \"p\", \"p…\n## $ class        <chr> \"compact\", \"compact\", \"compact\", \"compact\", \"compact\", \"c…\ndf <- mpg %>% \n  as_tibble() %>% \n  filter(class != \"2seater\", manufacturer %in% c(\"toyota\", \"volkswagen\"))\ndf## # A tibble: 61 × 11\n##    manufacturer model      displ  year   cyl trans drv     cty   hwy fl    class\n##    <chr>        <chr>      <dbl> <int> <int> <chr> <chr> <int> <int> <chr> <chr>\n##  1 toyota       4runner 4…   2.7  1999     4 manu… 4        15    20 r     suv  \n##  2 toyota       4runner 4…   2.7  1999     4 auto… 4        16    20 r     suv  \n##  3 toyota       4runner 4…   3.4  1999     6 auto… 4        15    19 r     suv  \n##  4 toyota       4runner 4…   3.4  1999     6 manu… 4        15    17 r     suv  \n##  5 toyota       4runner 4…   4    2008     6 auto… 4        16    20 r     suv  \n##  6 toyota       4runner 4…   4.7  2008     8 auto… 4        14    17 r     suv  \n##  7 toyota       camry        2.2  1999     4 manu… f        21    29 r     mids…\n##  8 toyota       camry        2.2  1999     4 auto… f        21    27 r     mids…\n##  9 toyota       camry        2.4  2008     4 manu… f        21    31 r     mids…\n## 10 toyota       camry        2.4  2008     4 auto… f        21    31 r     mids…\n## # ℹ 51 more rows\ndf %>%\n  ggplot(aes(x = displ, y = hwy, color = factor(cyl))) +\n  geom_point() +\n  facet_grid(vars(manufacturer), vars(class)) +\n  ggtitle(\"This is my title\") +\n  labs(x = \"x_displ\", y = \"y_hwy\")"},{"path":"tidyverse-ggplot2-theme.html","id":"图表整体元素","chapter":"第 21 章 ggplot2之主题设置","heading":"21.1 图表整体元素","text":"图表整体元素包括:","code":"\ndf %>%\n  ggplot(aes(x = displ, y = hwy, color = factor(cyl))) +\n  geom_point() +\n  facet_grid(vars(manufacturer), vars(class)) +\n  ggtitle(\"This is my title\") +\n  labs(x = \"x_displ\", y = \"y_hwy\") +\n  theme(\n    plot.background = element_rect(fill = \"orange\", color = \"black\", size = 10),\n    plot.title = element_text(hjust = 1, color = \"red\", face = \"italic\"),\n    plot.margin = margin(t = 20, r = 20, b = 20, l = 20, unit = \"pt\")\n  )## Warning: The `size` argument of `element_rect()` is deprecated as of ggplot2 3.4.0.\n## ℹ Please use the `linewidth` argument instead.\n## This warning is displayed once every 8 hours.\n## Call `lifecycle::last_lifecycle_warnings()` to see where this warning was\n## generated."},{"path":"tidyverse-ggplot2-theme.html","id":"坐标轴元素","chapter":"第 21 章 ggplot2之主题设置","heading":"21.2 坐标轴元素","text":"坐标轴元素包括:","code":"\ndf %>%\n  ggplot(aes(x = displ, y = hwy, color = factor(cyl))) +\n  geom_point() +\n  facet_grid(vars(manufacturer), vars(class)) +\n  ggtitle(\"This is my title\") +\n  labs(x = \"x_displ\", y = \"y_hwy\") +\n  theme(\n    axis.line = element_line(color = \"orange\", size = 2),\n    axis.title = element_text(color = \"red\", face = \"italic\"),\n    axis.ticks = element_line(color = \"purple\", size = 3),\n    axis.text = element_text(color = \"blue\"),\n    axis.text.x = element_text(angle = 45, hjust = 1)\n  )## Warning: The `size` argument of `element_line()` is deprecated as of ggplot2 3.4.0.\n## ℹ Please use the `linewidth` argument instead.\n## This warning is displayed once every 8 hours.\n## Call `lifecycle::last_lifecycle_warnings()` to see where this warning was\n## generated."},{"path":"tidyverse-ggplot2-theme.html","id":"面板元素","chapter":"第 21 章 ggplot2之主题设置","heading":"21.3 面板元素","text":"面板元素包括:或者","code":"\ndf %>%\n  ggplot(aes(x = displ, y = hwy, color = factor(cyl))) +\n  geom_point() +\n  facet_grid(vars(manufacturer), vars(class)) +\n  ggtitle(\"This is my title\") +\n  labs(x = \"x_displ\", y = \"y_hwy\") +\n  theme(\n    panel.background = element_rect(fill = \"orange\", color = \"red\"),\n    panel.grid = element_line(color = \"grey80\", size = 0.5)\n  )\ndf %>%\n  ggplot(aes(x = displ, y = hwy, color = factor(cyl))) +\n  geom_point() +\n  facet_grid(vars(manufacturer), vars(class)) +\n  ggtitle(\"This is my title\") +\n  labs(x = \"x_displ\", y = \"y_hwy\") +\n  theme(\n    panel.background = element_rect(fill = \"orange\"),\n    panel.grid = element_line(color = \"grey80\", size = 0.5),\n    panel.border = element_rect(color = \"red\", fill = NA)\n  )"},{"path":"tidyverse-ggplot2-theme.html","id":"图例元素","chapter":"第 21 章 ggplot2之主题设置","heading":"21.4 图例元素","text":"图例元素包括:","code":"\ndf %>%\n  ggplot(aes(x = displ, y = hwy, color = factor(cyl))) +\n  geom_point() +\n  facet_grid(vars(manufacturer), vars(class)) +\n  ggtitle(\"This is my title\") +\n  labs(x = \"x_displ\", y = \"y_hwy\") +\n  theme(\n    legend.background = element_rect(fill = \"orange\"),\n    legend.title = element_text(color = \"blue\", size = 10),\n    legend.key = element_rect(fill = \"grey80\"),\n    legend.text = element_text(color = \"red\"),\n    legend.margin = margin(t = 20, r = 20, b = 20, l = 20, unit = \"pt\"),\n    legend.position = \"bottom\"\n  )"},{"path":"tidyverse-ggplot2-theme.html","id":"分面元素","chapter":"第 21 章 ggplot2之主题设置","heading":"21.5 分面元素","text":"分面元素包括:","code":"\ndf %>%\n  ggplot(aes(x = displ, y = hwy, color = factor(cyl))) +\n  geom_point() +\n  facet_grid(vars(manufacturer), vars(class)) +\n  ggtitle(\"This is my title\") +\n  labs(x = \"x_displ\", y = \"y_hwy\") +\n  theme(\n    strip.background = element_rect(fill = \"orange\"),\n    strip.text = element_text(color = \"red\"),\n    panel.spacing = unit(0.3, \"inch\") \n    # strip.switch.pad.grid =\n  )"},{"path":"tidyverse-ggplot2-theme.html","id":"案例-1","chapter":"第 21 章 ggplot2之主题设置","heading":"21.6 案例","text":"你肯定不会觉得这图好看。","code":"\ndiamonds %>%\n  ggplot(aes(carat, price)) +\n  geom_hex() +\n  labs(title = \"Diamond\") +\n  theme(\n    axis.title.x = element_text(\n      size = 30,\n      color = \"red\",\n      face = \"bold\",\n      angle = 10\n    ),\n    legend.title = element_text(\n      size = 25,\n      color = \"#ff6361\",\n      margin = margin(b = 5)\n    ),\n    plot.title = element_text(\n      size = 35,\n      face = \"bold\",\n      color = \"blue\"\n    )\n  )\nlibrary(palmerpenguins)\npenguins %>%\n  ggplot(aes(bill_length_mm, bill_depth_mm)) +\n  geom_point() +\n  theme(\n    axis.line.y = element_line(\n      color = \"black\",\n      size = 1.2,\n      arrow = grid::arrow()\n    ),\n    axis.line.x = element_line(\n      linetype = \"dashed\",\n      color = \"brown\",\n      size = 1.2\n    ),\n    axis.ticks = element_line(color = \"red\", size = 1.1),\n    axis.ticks.length = unit(3, \"mm\"),\n    panel.grid.major = element_line(\n      color = \"blue\",\n      size = 1.2\n    ),\n    panel.grid.minor = element_line(\n      color = \"#58508d\",\n      size = 1.2,\n      linetype = \"dotted\"\n    )\n  )## Warning: Removed 2 rows containing missing values (`geom_point()`).\npenguins %>%\n  ggplot(aes(bill_length_mm, bill_depth_mm)) +\n  geom_point(aes(color = species)) +\n  theme(\n    legend.background = element_rect(\n      fill = \"#fff6c2\",\n      color = \"black\",\n      linetype = \"dashed\"\n    ),\n    legend.key = element_rect(fill = \"grey\", color = \"brown\"),\n    panel.background = element_rect(\n      fill = \"#005F59\",\n      color = \"red\", size = 3\n    ),\n    panel.border = element_rect(\n      color = \"black\",\n      fill = \"transparent\",\n      linetype = \"dashed\", size = 3\n    ),\n    plot.background = element_rect(\n      fill = \"#a1dce9\",\n      color = \"black\",\n      size = 1.3\n    ),\n    legend.position = \"bottom\"\n  )## Warning: Removed 2 rows containing missing values (`geom_point()`)."},{"path":"tidyverse-ggplot2-theme.html","id":"小结-3","chapter":"第 21 章 ggplot2之主题设置","heading":"21.7 小结","text":"","code":""},{"path":"tidyverse-ggplot2-theme.html","id":"主题风格","chapter":"第 21 章 ggplot2之主题设置","heading":"21.8 主题风格","text":"当然可以使用自带的主题风格\n图 19.1: Source: ggplot2 book\n当然，ggthemes宏包也提供了很多优秀的主题风格","code":"\nthms <- list.files(path = \"images/img\", pattern = \"built-in\",full.names = T)\nknitr::include_graphics(thms)\npenguins %>% \n    ggplot(aes(x = bill_depth_mm, y = bill_length_mm)) +\n    geom_point() +\n    theme_minimal()## Warning: Removed 2 rows containing missing values (`geom_point()`).\npenguins %>% \n  ggplot(aes(x = bill_depth_mm, y = bill_length_mm)) +\n  geom_point() +\n  theme_bw() +\n  theme(text = element_text(family = \"serif\", size = 20),\n        panel.grid = element_blank()\n        )## Warning: Removed 2 rows containing missing values (`geom_point()`).\nlibrary(ggthemes)\npenguins %>% \n    ggplot(aes(x = bill_depth_mm, y = bill_length_mm)) +\n    geom_point() +\n    ggthemes::theme_economist()## Warning: Removed 2 rows containing missing values (`geom_point()`).\ngapdata <- read_csv(\"./demo_data/gapminder.csv\")## Rows: 1704 Columns: 6\n## ── Column specification ────────────────────────────────────────────────────────\n## Delimiter: \",\"\n## chr (2): country, continent\n## dbl (4): year, lifeExp, pop, gdpPercap\n## \n## ℹ Use `spec()` to retrieve the full column specification for this data.\n## ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\ngapdata %>%\n  ggplot(aes(x = gdpPercap, y = lifeExp, color = continent)) +\n  geom_point() +\n  geom_smooth(lwd = 3, se = FALSE, method = \"lm\") +\n  theme_grey() # the default## `geom_smooth()` using formula = 'y ~ x'\ngapdata %>%\n  ggplot(aes(x = gdpPercap, y = lifeExp, color = continent)) +\n  geom_point() +\n  geom_smooth(lwd = 3, se = FALSE, method = \"lm\") +\n  theme_bw()## `geom_smooth()` using formula = 'y ~ x'\ngapdata %>%\n  ggplot(aes(x = gdpPercap, y = lifeExp, color = continent)) +\n  geom_point() +\n  geom_smooth(lwd = 3, se = FALSE, method = \"lm\") +\n  ggthemes::theme_calc() +\n  ggtitle(\"ggthemes::theme_calc()\")## `geom_smooth()` using formula = 'y ~ x'\ngapdata %>%\n  ggplot(aes(x = gdpPercap, y = lifeExp, color = continent)) +\n  geom_point() +\n  geom_smooth(lwd = 3, se = FALSE, method = \"lm\") +\n  ggthemes::theme_economist() +\n  ggtitle(\"ggthemes::theme_economist()\")## `geom_smooth()` using formula = 'y ~ x'\ngapdata %>%\n  ggplot(aes(x = gdpPercap, y = lifeExp, color = continent)) +\n  geom_point() +\n  geom_smooth(lwd = 3, se = FALSE, method = \"lm\") +\n  ggthemes::theme_economist_white() +\n  ggtitle(\"ggthemes::theme_economist_white()\")## `geom_smooth()` using formula = 'y ~ x'\ngapdata %>%\n  ggplot(aes(x = gdpPercap, y = lifeExp, color = continent)) +\n  geom_point() +\n  geom_smooth(lwd = 3, se = FALSE, method = \"lm\") +\n  ggthemes::theme_few() +\n  ggtitle(\"ggthemes::theme_few()\")## `geom_smooth()` using formula = 'y ~ x'\ngapdata %>%\n  ggplot(aes(x = gdpPercap, y = lifeExp, color = continent)) +\n  geom_point() +\n  geom_smooth(lwd = 3, se = FALSE, method = \"lm\") +\n  ggthemes::theme_gdocs() +\n  ggtitle(\"ggthemes::theme_gdocs()\")## `geom_smooth()` using formula = 'y ~ x'\ngapdata %>%\n  ggplot(aes(x = gdpPercap, y = lifeExp, color = continent)) +\n  geom_point() +\n  geom_smooth(lwd = 3, se = FALSE, method = \"lm\") +\n  ggthemes::theme_tufte() +\n  ggtitle(\"ggthemes::theme_tufte()\")## `geom_smooth()` using formula = 'y ~ x'\ngapdata %>%\n  ggplot(aes(x = gdpPercap, y = lifeExp, color = continent)) +\n  geom_point() +\n  geom_smooth(lwd = 3, se = FALSE, method = \"lm\") +\n  ggthemes::theme_wsj() +\n  ggtitle(\"ggthemes::theme_wsj()\")## `geom_smooth()` using formula = 'y ~ x'"},{"path":"tidyverse-ggplot2-theme.html","id":"提问-2","chapter":"第 21 章 ggplot2之主题设置","heading":"21.9 提问","text":"ggplot2中 plot 与 panel 有区别？ggplot2中 plot 与 panel 有区别？假定数据是这样假定数据是这样你画图后，交给老板看请用前后两章学到的内容让老板满意吧","code":"\nlibrary(tidyverse)\nset.seed(12)\n\nd1 <- data.frame(x = rnorm(50, 10, 2), type = \"Island #1\")\nd2 <- data.frame(x = rnorm(50, 18, 1.2), type = \"Island #2\")\n\ndd <- bind_rows(d1, d2) %>%\n  set_names(c(\"Height\", \"Location\"))\n\nhead(dd)##      Height  Location\n## 1  7.038865 Island #1\n## 2 13.154339 Island #1\n## 3  8.086511 Island #1\n## 4  8.159990 Island #1\n## 5  6.004716 Island #1\n## 6  9.455408 Island #1\ndd %>%\n  ggplot(aes(x = Height, fill = Location)) +\n  geom_histogram(binwidth = 1, color = \"white\") +\n  scale_fill_manual(values = c(\"green3\", \"turquoise3\"))"},{"path":"tidyverse-ggplot2-guides.html","id":"tidyverse-ggplot2-guides","chapter":"第 22 章 ggplot2之图例系统","heading":"第 22 章 ggplot2之图例系统","text":"这一章，我们一起学习ggplot2中的图例系统，内容相对简单，但还是推荐大家阅读ggplot2官方文档","code":""},{"path":"tidyverse-ggplot2-guides.html","id":"图例系统","chapter":"第 22 章 ggplot2之图例系统","heading":"22.1 图例系统","text":"为了方便演示，我们还是用熟悉的配方ggplot2::mpg如果想调整图例的样式，可以使用guides()函数，用法类似上节课中的theme函数, 具体参数为：要么是字符串 (.e. \"color = colorbar\" \"color = legend\"),要么是特定的函数 (.e. color = guide_colourbar() color = guide_legend())以下 guides() 函数族用于控制图例的外观guide_colorbar(): continuous colorsguide_legend(): discrete values (shapes, colors)guide_axis(): control axis text/spacing, add secondary axisguide_bins(): creates “bins” values legendguide_colorsteps(): makes colorbar discrete","code":"\nlibrary(tidyverse)## ── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n## ✔ dplyr     1.1.3     ✔ readr     2.1.4\n## ✔ forcats   1.0.0     ✔ stringr   1.5.0\n## ✔ ggplot2   3.4.3     ✔ tibble    3.2.1\n## ✔ lubridate 1.9.2     ✔ tidyr     1.3.0\n## ✔ purrr     1.0.2     \n## ── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n## ✖ dplyr::filter() masks stats::filter()\n## ✖ dplyr::lag()    masks stats::lag()\n## ℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\nmpg %>%\n  ggplot(aes(x = displ, y = hwy, color = factor(cyl))) +\n  geom_point()  \nknitr::include_graphics(\"images/img/guides_examples.png\")"},{"path":"tidyverse-ggplot2-guides.html","id":"案例详解-1","chapter":"第 22 章 ggplot2之图例系统","heading":"22.2 案例详解","text":"","code":"\nmpg %>%\n  ggplot(aes(x = displ, y = hwy, color = factor(cyl))) +\n  geom_point() +\n  ggtitle(\"This is my title\") +\n  labs(x = \"x_displ\", y = \"y_hwy\") +\n  guides(color = \"legend\")\nmpg %>%\n  ggplot(aes(x = displ, y = hwy, color = factor(cyl))) +\n  geom_point() +\n  ggtitle(\"This is my title\") +\n  labs(x = \"x_displ\", y = \"y_hwy\") +\n  guides(color = guide_legend(\n                 title = \"my title\",\n                 label.hjust = 1\n                 )\n  )\nmpg %>%\n  ggplot(aes(x = displ, y = hwy, color = factor(cyl))) +\n  geom_point() +\n  ggtitle(\"This is my title\")  +\n  labs(x = \"x_displ\", y = \"y_hwy\") +\n  guides(color = guide_legend(\n                   ncol = 4\n                 )\n  )\nmpg %>%\n  ggplot() + \n  geom_jitter(aes(x = cty, y = hwy, color = class), key_glyph = draw_key_pointrange) + #<<\n  guides(color = guide_legend(nrow = 1)) +\n  theme(legend.position =  \"top\", \n        axis.text = element_text(face = \"italic\", color = \"navy\"), \n        plot.background = element_rect(fill = \"#a0d1f2\"), \n        panel.background = element_blank(), \n        panel.grid = element_line(linetype = \"dotdash\"))\nmpg %>%\n  ggplot(aes(x = displ, y = hwy, color = factor(cyl))) +\n  geom_point() +\n  ggtitle(\"This is my title\")  +\n  labs(x = \"x_displ\", y = \"y_hwy\") +\n  guides(color = guide_legend(\n    title = \"title is too high\",\n    title.position = \"top\",\n    title.vjust = 5,\n    label.position = \"left\",\n    label.hjust = 1,\n    label.theme = element_text(size = 15,\n                               face = \"italic\",\n                               colour = \"red\",\n                               angle = 0),\n    keywidth = 5,\n    reverse = TRUE\n   )\n  )"},{"path":"tidyverse-ggplot2-guides.html","id":"删除其中一个图例","chapter":"第 22 章 ggplot2之图例系统","heading":"22.3 删除其中一个图例","text":"比如，我们想删除size这个图例，那么需要这样做或者","code":"\nmpg %>%\n  ggplot(aes(x = displ, y = hwy, color = class, size = cyl)) +\n  geom_point()\nmpg %>%\n  ggplot(aes(x = displ, y = hwy, color = class, size = cyl)) +\n  geom_point() +\n  guides(\n    color = guide_legend(\"type\"),      # keep\n    size = \"none\"                      # remove\n  )\nmpg %>%\n  ggplot(aes(x = displ, y = hwy, color = class, size = cyl)) +\n  geom_point() +\n  guides(\n    color = guide_legend(\"type\"),      # keep\n    size = guide_none()                # remove\n  )"},{"path":"tidyverse-ggplot2-guides.html","id":"合并图例","chapter":"第 22 章 ggplot2之图例系统","heading":"22.4 合并图例","text":"这里color 和 size 都使用了body_mass_g映射，我们可以将两者合并更直观的方法或者最省力的是","code":"\nlibrary(tidyverse)\nlibrary(palmerpenguins)\n\npenguins %>% \n  ggplot(\n    aes(x = bill_length_mm, y = bill_depth_mm, \n      color = body_mass_g, size = body_mass_g)\n  ) +\n  geom_point(alpha = 0.6) +\n  scale_color_viridis_c()## Warning: Removed 2 rows containing missing values (`geom_point()`).\n# merge similar guides\npenguins %>% \n  ggplot(\n    aes(x = bill_length_mm, y = bill_depth_mm, \n      color = body_mass_g,size = body_mass_g)\n  ) +\n  geom_point(alpha = 0.6) +\n  scale_color_viridis_c() +\n  guides(color = guide_legend())## Warning: Removed 2 rows containing missing values (`geom_point()`).\npenguins %>% \n  ggplot(\n    aes(x = bill_length_mm, y = bill_depth_mm, \n      color = body_mass_g, size = body_mass_g)\n  ) +\n  geom_point(alpha = 0.6) +\n  scale_color_viridis_c() +\n  guides(\n    color = guide_legend(), \n    size = guide_legend()\n  )## Warning: Removed 2 rows containing missing values (`geom_point()`).\npenguins %>% \n  ggplot(\n    aes(x = bill_length_mm, y = bill_depth_mm, \n      color = body_mass_g, size = body_mass_g)\n  ) +\n  geom_point(alpha = 0.6) +\n  scale_color_viridis_c() +\n  guides(\n    colour = guide_legend(\"title\"),\n    size = guide_legend(\"title\")\n  )## Warning: Removed 2 rows containing missing values (`geom_point()`).\npenguins %>% \n  ggplot(\n    aes(x = bill_length_mm, y = bill_depth_mm, \n      color = body_mass_g, size = body_mass_g)\n  ) +\n  geom_point(alpha = 0.6) +\n  scale_color_viridis_c(guide = \"legend\") ## Warning: Removed 2 rows containing missing values (`geom_point()`)."},{"path":"tidyverse-ggplot2-guides.html","id":"小结-4","chapter":"第 22 章 ggplot2之图例系统","heading":"22.5 小结","text":"到了这里，ggplot2内容的差不多介绍完了，最后做下自我测试，能读懂下面代码(来源 Emi Tanaka)的意思？","code":"\nmtcars %>%\n  as_tibble() %>%\n  ggplot(aes(x = wt, y = mpg, shape = factor(vs), color = hp)) +\n  geom_point(size = 3) +\n  colorspace::scale_color_continuous_sequential(palette = \"Dark Mint\") +\n  scale_shape_discrete(labels = c(\"V-shaped\", \"Straight\")) +\n  labs(\n    x = \"Weight (1000 lbs)\", y = \"Miles per gallon\",\n    title = \"Motor Trend Car Road Tests\",\n    shape = \"Engine\", color = \"Horsepower\"\n  ) +\n  theme(\n    text = element_text(size = 18, color = \"white\"),\n    rect = element_rect(fill = \"black\"),\n    panel.background = element_rect(fill = \"black\"),\n    legend.key = element_rect(fill = \"black\"),\n    axis.text = element_text(color = \"white\"),\n    plot.title.position = \"plot\",\n    plot.margin = margin(10, 10, 10, 10)\n  ) +\n  guides(\n    shape =\n      guide_legend(override.aes = list(color = \"white\"))\n  )"},{"path":"tidyverse-ggplot2-customize.html","id":"tidyverse-ggplot2-customize","chapter":"第 23 章 ggplot2之扩展内容","heading":"第 23 章 ggplot2之扩展内容","text":"ggplot2的强大，还在于它的扩展包。本章在介绍ggplot2新的内容的同时还会引入一些新的宏包，需要提前安装如果安装不成功，请先update宏包，再执行上面安装命令","code":"\ninstall.packages(c(\"sf\", \"cowplot\", \"patchwork\", \"gghighlight\", \"ggforce\", \"ggfx\"))\nlibrary(tidyverse)\nlibrary(gghighlight)\nlibrary(cowplot)\nlibrary(patchwork)\nlibrary(ggforce)\nlibrary(ggridges)"},{"path":"tidyverse-ggplot2-customize.html","id":"你喜欢哪个图","chapter":"第 23 章 ggplot2之扩展内容","heading":"23.1 你喜欢哪个图","text":"","code":"\np1 <- ggplot(mpg, aes(x = cty, y = hwy)) +\n  geom_point() +\n  geom_smooth() +\n  labs(title = \"1: geom_point() + geom_smooth()\") +\n  theme(plot.title = element_text(face = \"bold\"))\n\np2 <- ggplot(mpg, aes(x = cty, y = hwy)) +\n  geom_hex() +\n  labs(title = \"2: geom_hex()\") +\n  guides(fill = FALSE) +\n  theme(plot.title = element_text(face = \"bold\"))## Warning: The `<scale>` argument of `guides()` cannot be `FALSE`. Use \"none\" instead as\n## of ggplot2 3.3.4.\n## This warning is displayed once every 8 hours.\n## Call `lifecycle::last_lifecycle_warnings()` to see where this warning was\n## generated.\np3 <- ggplot(mpg, aes(x = drv, fill = drv)) +\n  geom_bar() +\n  labs(title = \"3: geom_bar()\") +\n  guides(fill = FALSE) +\n  theme(plot.title = element_text(face = \"bold\"))\n\np4 <- ggplot(mpg, aes(x = cty)) +\n  geom_histogram(binwidth = 2, color = \"white\") +\n  labs(title = \"4: geom_histogram()\") +\n  theme(plot.title = element_text(face = \"bold\"))\n\np5 <- ggplot(mpg, aes(x = cty, y = drv, fill = drv)) +\n  geom_violin() +\n  guides(fill = FALSE) +\n  labs(title = \"5: geom_violin()\") +\n  theme(plot.title = element_text(face = \"bold\"))\n\np6 <- ggplot(mpg, aes(x = cty, y = drv, fill = drv)) +\n  geom_boxplot() +\n  guides(fill = FALSE) +\n  labs(title = \"6: geom_boxplot()\") +\n  theme(plot.title = element_text(face = \"bold\"))\n\np7 <- ggplot(mpg, aes(x = cty, fill = drv)) +\n  geom_density(alpha = 0.7) +\n  guides(fill = FALSE) +\n  labs(title = \"7: geom_density()\") +\n  theme(plot.title = element_text(face = \"bold\"))\n\np8 <- ggplot(mpg, aes(x = cty, y = drv, fill = drv)) +\n  geom_density_ridges() +\n  guides(fill = FALSE) +\n  labs(title = \"8: ggridges::geom_density_ridges()\") +\n  theme(plot.title = element_text(face = \"bold\"))\n\np9 <- ggplot(mpg, aes(x = cty, y = hwy)) +\n  geom_density_2d() +\n  labs(title = \"9: geom_density_2d()\") +\n  theme(plot.title = element_text(face = \"bold\"))\n\np1 + p2 + p3 + p4 + p5 + p6 + p7 + p8 + p9 +\n  plot_layout(nrow = 3)## `geom_smooth()` using method = 'loess' and formula = 'y ~ x'\n## Picking joint bandwidth of 0.879"},{"path":"tidyverse-ggplot2-customize.html","id":"定制","chapter":"第 23 章 ggplot2之扩展内容","heading":"23.2 定制","text":"","code":""},{"path":"tidyverse-ggplot2-customize.html","id":"标签","chapter":"第 23 章 ggplot2之扩展内容","heading":"23.2.1 标签","text":"","code":"\ngapdata <- read_csv(\"./demo_data/gapminder.csv\")## Rows: 1704 Columns: 6\n## ── Column specification ────────────────────────────────────────────────────────\n## Delimiter: \",\"\n## chr (2): country, continent\n## dbl (4): year, lifeExp, pop, gdpPercap\n## \n## ℹ Use `spec()` to retrieve the full column specification for this data.\n## ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\ngapdata## # A tibble: 1,704 × 6\n##    country     continent  year lifeExp      pop gdpPercap\n##    <chr>       <chr>     <dbl>   <dbl>    <dbl>     <dbl>\n##  1 Afghanistan Asia       1952    28.8  8425333      779.\n##  2 Afghanistan Asia       1957    30.3  9240934      821.\n##  3 Afghanistan Asia       1962    32.0 10267083      853.\n##  4 Afghanistan Asia       1967    34.0 11537966      836.\n##  5 Afghanistan Asia       1972    36.1 13079460      740.\n##  6 Afghanistan Asia       1977    38.4 14880372      786.\n##  7 Afghanistan Asia       1982    39.9 12881816      978.\n##  8 Afghanistan Asia       1987    40.8 13867957      852.\n##  9 Afghanistan Asia       1992    41.7 16317921      649.\n## 10 Afghanistan Asia       1997    41.8 22227415      635.\n## # ℹ 1,694 more rows\ngapdata %>%\n  ggplot(aes(x = gdpPercap, y = lifeExp, color = continent)) +\n  geom_point() +\n  scale_x_log10() +\n  ggtitle(\"My Plot Title\") +\n  xlab(\"The X Variable\") +\n  ylab(\"The Y Variable\")\ngapdata %>%\n  ggplot(aes(x = gdpPercap, y = lifeExp, color = continent)) +\n  geom_point() +\n  scale_x_log10() +\n  labs(\n    title = \"My Plot Title\",\n    subtitle = \"My Plot subtitle\",\n    x = \"The X Variable\",\n    y = \"The Y Variable\"\n  )"},{"path":"tidyverse-ggplot2-customize.html","id":"定制颜色","chapter":"第 23 章 ggplot2之扩展内容","heading":"23.2.2 定制颜色","text":"我喜欢用这两个函数定制喜欢的绘图色彩，scale_colour_manual() 和 scale_fill_manual(). 更多方法可以参考 Colours chapter Cookbook R","code":"\ngapdata %>%\n  ggplot(aes(x = gdpPercap, y = lifeExp, color = continent)) +\n  geom_point() +\n  scale_x_log10() +\n  scale_color_manual(\n    values = c(\"#195744\", \"#008148\", \"#C6C013\", \"#EF8A17\", \"#EF2917\")\n  )"},{"path":"tidyverse-ggplot2-customize.html","id":"组合图片","chapter":"第 23 章 ggplot2之扩展内容","heading":"23.3 组合图片","text":"我们有时候想把多张图组合到一起","code":""},{"path":"tidyverse-ggplot2-customize.html","id":"cowplot","chapter":"第 23 章 ggplot2之扩展内容","heading":"23.3.1 cowplot","text":"可以使用 cowplot 宏包的plot_grid()函数完成多张图片的组合，使用方法很简单。也可以使用patchwork宏包，更简单的方法再来一个patchwork 使用方法很简单，根本不需要记","code":"\np1 <- gapdata %>%\n  ggplot(aes(x = gdpPercap, y = lifeExp)) +\n  geom_point(aes(color = lifeExp > mean(lifeExp))) +\n  scale_x_log10() +\n  theme(legend.position = \"none\") +\n  scale_color_manual(values = c(\"orange\", \"pink\")) +\n  labs(\n    title = \"My Plot Title\",\n    x = \"The X Variable\",\n    y = \"The Y Variable\"\n  )\np2 <- gapdata %>%\n  ggplot(aes(x = gdpPercap, y = lifeExp, color = continent)) +\n  geom_point() +\n  scale_x_log10() +\n  scale_color_manual(\n    values = c(\"#195744\", \"#008148\", \"#C6C013\", \"#EF8A17\", \"#EF2917\")\n  ) +\n  theme(legend.position = \"none\") +\n  labs(\n    title = \"My Plot Title\",\n    x = \"The X Variable\",\n    y = \"The Y Variable\"\n  )\ncowplot::plot_grid(\n  p1,\n  p2,\n  labels = c(\"A\", \"B\")\n)\nlibrary(patchwork)\np1 + p2\np1 / p2\np1 + p2 +\n  plot_annotation(\n    tag_levels = \"A\",\n    title = \"The surprising truth about mtcars\",\n    subtitle = \"These 3 plots will reveal yet-untold secrets about our beloved data-set\",\n    caption = \"Disclaimer: None of these plots are insightful\"\n  )\nlibrary(palmerpenguins)\n\ng1 <- penguins %>% \n  ggplot(aes(bill_length_mm, body_mass_g, color = species)) +\n  geom_point() + \n  theme_bw(base_size = 14) +\n  labs(tag = \"(A)\", x = \"Bill length (mm)\", y = \"Body mass (g)\", color = \"Species\")\n       \ng2 <- penguins %>% \n  ggplot(aes(bill_length_mm, bill_depth_mm, color = species)) +\n  geom_point() + \n  theme_bw(base_size = 14) +\n  labs(tag = \"(B)\", x = \"Bill length (mm)\", y = \"Bill depth (mm)\",  color = \"Species\")\n         \ng1 + g2 + patchwork::plot_layout(guides = \"collect\")## Warning: Removed 2 rows containing missing values (`geom_point()`).\n## Removed 2 rows containing missing values (`geom_point()`)."},{"path":"tidyverse-ggplot2-customize.html","id":"高亮某一组","chapter":"第 23 章 ggplot2之扩展内容","heading":"23.4 高亮某一组","text":"画图很容易，然而画一张好图，不容易。图片质量好不好，其原则就是不增加看图者的心智负担，有些图片的色彩很丰富，然而需要看图人配合文字和图注等信息才能看懂作者想表达的意思，这样就失去了图片“一图胜千言”的价值。分析数据过程中，我们可以使用高亮我们某组数据，突出我们想表达的信息，是非常好的一种可视化探索手段。","code":""},{"path":"tidyverse-ggplot2-customize.html","id":"ggplot2方法","chapter":"第 23 章 ggplot2之扩展内容","heading":"23.4.1 ggplot2方法","text":"这种方法是将背景部分和高亮部分分两步来画再来一个","code":"\ndrop_facet <- function(x) select(x, -continent)\n\ngapdata %>%\n  ggplot() +\n  geom_line(\n    data = drop_facet,\n    aes(x = year, y = lifeExp, group = country), color = \"grey\",\n  ) +\n  geom_line(aes(x = year, y = lifeExp, color = country, group = country)) +\n  facet_wrap(vars(continent)) +\n  theme(legend.position = \"none\")\ngapdata %>%\n  mutate(group = country) %>%\n  filter(continent == \"Asia\") %>%\n  ggplot() +\n  geom_line(\n    data = function(d) select(d, -country),\n    aes(x = year, y = lifeExp, group = group), color = \"grey\",\n  ) +\n  geom_line(aes(x = year, y = lifeExp, group = country), color = \"red\") +\n  facet_wrap(vars(country)) +\n  theme(legend.position = \"none\")"},{"path":"tidyverse-ggplot2-customize.html","id":"gghighlight方法","chapter":"第 23 章 ggplot2之扩展内容","heading":"23.4.2 gghighlight方法","text":"这里推荐gghighlight宏包dplyr filter()ggplot Highlighting","code":"\ngapdata %>% filter(country == \"China\")## # A tibble: 12 × 6\n##    country continent  year lifeExp        pop gdpPercap\n##    <chr>   <chr>     <dbl>   <dbl>      <dbl>     <dbl>\n##  1 China   Asia       1952    44    556263527      400.\n##  2 China   Asia       1957    50.5  637408000      576.\n##  3 China   Asia       1962    44.5  665770000      488.\n##  4 China   Asia       1967    58.4  754550000      613.\n##  5 China   Asia       1972    63.1  862030000      677.\n##  6 China   Asia       1977    64.0  943455000      741.\n##  7 China   Asia       1982    65.5 1000281000      962.\n##  8 China   Asia       1987    67.3 1084035000     1379.\n##  9 China   Asia       1992    68.7 1164970000     1656.\n## 10 China   Asia       1997    70.4 1230075000     2289.\n## 11 China   Asia       2002    72.0 1280400000     3119.\n## 12 China   Asia       2007    73.0 1318683096     4959.\ngapdata %>%\n  ggplot(\n    aes(x = year, y = lifeExp, color = continent, group = country)\n  ) +\n  geom_line() +\n  gghighlight(\n    country == \"China\", # which is passed to dplyr::filter().\n    label_key = country\n  )## Warning: Tried to calculate with group_by(), but the calculation failed.\n## Falling back to ungrouped filter operation...\ngapdata %>% filter(continent == \"Asia\")## # A tibble: 396 × 6\n##    country     continent  year lifeExp      pop gdpPercap\n##    <chr>       <chr>     <dbl>   <dbl>    <dbl>     <dbl>\n##  1 Afghanistan Asia       1952    28.8  8425333      779.\n##  2 Afghanistan Asia       1957    30.3  9240934      821.\n##  3 Afghanistan Asia       1962    32.0 10267083      853.\n##  4 Afghanistan Asia       1967    34.0 11537966      836.\n##  5 Afghanistan Asia       1972    36.1 13079460      740.\n##  6 Afghanistan Asia       1977    38.4 14880372      786.\n##  7 Afghanistan Asia       1982    39.9 12881816      978.\n##  8 Afghanistan Asia       1987    40.8 13867957      852.\n##  9 Afghanistan Asia       1992    41.7 16317921      649.\n## 10 Afghanistan Asia       1997    41.8 22227415      635.\n## # ℹ 386 more rows\ngapdata %>%\n  filter(continent == \"Asia\") %>%\n  ggplot(aes(year, lifeExp, color = country, group = country)) +\n  geom_line(size = 1.2, alpha = .9, color = \"#E58C23\") +\n  theme_minimal(base_size = 14) +\n  theme(\n    legend.position = \"none\",\n    panel.grid.major.x = element_blank(),\n    panel.grid.minor = element_blank()\n  ) +\n  gghighlight(\n    country %in% c(\"China\", \"India\", \"Japan\", \"Korea, Rep.\"),\n    use_group_by = FALSE,\n    use_direct_label = FALSE,\n    unhighlighted_params = list(color = \"grey90\")\n  ) +\n  facet_wrap(vars(country))## Warning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\n## ℹ Please use `linewidth` instead.\n## This warning is displayed once every 8 hours.\n## Call `lifecycle::last_lifecycle_warnings()` to see where this warning was\n## generated."},{"path":"tidyverse-ggplot2-customize.html","id":"d效果","chapter":"第 23 章 ggplot2之扩展内容","heading":"23.5 3D效果","text":"","code":"\nlibrary(ggfx) \n# https://github.com/thomasp85/ggfx\n\nmtcars %>% \n  ggplot(aes(mpg, disp)) +\n  with_shadow(\n    geom_smooth(alpha = 1), sigma = 4 \n  ) +\n  with_shadow(\n    geom_point(), sigma = 4\n  )## `geom_smooth()` using method = 'loess' and formula = 'y ~ x'"},{"path":"tidyverse-ggplot2-customize.html","id":"弯曲文本","chapter":"第 23 章 ggplot2之扩展内容","heading":"23.6 弯曲文本","text":"弯曲文本，使其匹配多种图形的轨迹。更多风格可参见https://github.com/AllanCameron/geomtextpath","code":"\nlibrary(geomtextpath) # remotes::install_github(\"AllanCameron/geomtextpath\")\niris %>% \n  ggplot(aes(x = Sepal.Length, colour = Species, label = Species)) +\n  geom_textdensity(size = 6, fontface = 2, hjust = 0.2, vjust = 0.3) +\n  theme(legend.position = \"none\")\nlibrary(palmerpenguins)\npenguins %>% \n  ggplot(aes(x = bill_length_mm, y = bill_depth_mm, color = species)) +\n  geom_point(alpha = 0.3) +\n  geom_labelsmooth(aes(label = species), method = \"loess\", size = 5, linewidth = 1) +\n  scale_colour_manual(values = c(\"forestgreen\", \"deepskyblue4\", \"tomato4\")) +\n  theme(legend.position = \"none\")## `geom_smooth()` using formula = 'y ~ x'## Warning: Removed 2 rows containing non-finite values (`stat_smooth()`).## Warning: Removed 2 rows containing missing values (`geom_point()`)."},{"path":"tidyverse-ggplot2-customize.html","id":"函数图","chapter":"第 23 章 ggplot2之扩展内容","heading":"23.7 函数图","text":"有时候我们想画一个函数图，比如正态分布的函数，可能会想到先产生数据，然后画图，比如下面的代码事实上，stat_function()可以简化这个过程当然我们也可以绘制自定义函数下面这是一个很不错的例子，细细体会下","code":"\ntibble(x = seq(from = -3, to = 3, by = .01)) %>%\n  mutate(y = dnorm(x, mean = 0, sd = 1)) %>%\n  ggplot(aes(x = x, y = y)) +\n  geom_line(color = \"grey33\")\nggplot(data = data.frame(x = c(-3, 3)), aes(x = x)) +\n  stat_function(fun = dnorm)\nmyfun <- function(x) {\n  (x - 1)**2\n}\n\nggplot(data = data.frame(x = c(-1, 3)), aes(x = x)) +\n  stat_function(fun = myfun, geom = \"line\", colour = \"red\")\nd <- tibble(x = rnorm(2000, mean = 2, sd = 4))\n\nggplot(data = d, aes(x = x)) +\n  geom_histogram(aes(y = after_stat(density))) +\n  geom_density() +\n  stat_function(fun = dnorm, args = list(mean = 2, sd = 4), colour = \"red\")## `stat_bin()` using `bins = 30`. Pick better value with `binwidth`."},{"path":"tidyverse-ggplot2-customize.html","id":"字体","chapter":"第 23 章 ggplot2之扩展内容","heading":"23.8 字体","text":"如果想使用不同的字体，可以用theme() 的 element_text() 函数family: font familyface : bold, italic, bold.italic, plaincolor, size, angle, etc.其中，family =字体名，可以用 extrafont 导入C:\\Windows\\Fonts\\的字体，然后选取","code":"\nlibrary(extrafont)\nfont_import() # will take 2-3 minutes. Only need to run once\nloadfonts()\nfonts()\nfonttable()\nmpg %>% \n  ggplot() +\n  geom_jitter(aes(x = cty, y = hwy, color = class)) +\n  theme(text = element_text(family = \"Peralta\"))## Warning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): no font could\n## be found for family \"Peralta\"\n\n## Warning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): no font could\n## be found for family \"Peralta\"\n\n## Warning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): no font could\n## be found for family \"Peralta\"\n\n## Warning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): no font could\n## be found for family \"Peralta\"\n\n## Warning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): no font could\n## be found for family \"Peralta\"\n\n## Warning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): no font could\n## be found for family \"Peralta\"\n\n## Warning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): no font could\n## be found for family \"Peralta\"\n\n## Warning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): no font could\n## be found for family \"Peralta\"\n\n## Warning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): no font could\n## be found for family \"Peralta\"\n\n## Warning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): no font could\n## be found for family \"Peralta\"\n\n## Warning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): no font could\n## be found for family \"Peralta\"\n\n## Warning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): no font could\n## be found for family \"Peralta\"\n\n## Warning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): no font could\n## be found for family \"Peralta\"\n\n## Warning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): no font could\n## be found for family \"Peralta\"\n\n## Warning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): no font could\n## be found for family \"Peralta\"\n\n## Warning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): no font could\n## be found for family \"Peralta\"\n\n## Warning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): no font could\n## be found for family \"Peralta\"\n\n## Warning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): no font could\n## be found for family \"Peralta\"\n\n## Warning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): no font could\n## be found for family \"Peralta\"\n\n## Warning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): no font could\n## be found for family \"Peralta\"\n\n## Warning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): no font could\n## be found for family \"Peralta\"\n\n## Warning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): no font could\n## be found for family \"Peralta\"\n\n## Warning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): no font could\n## be found for family \"Peralta\"\n\n## Warning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): no font could\n## be found for family \"Peralta\"\n\n## Warning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): no font could\n## be found for family \"Peralta\"\n\n## Warning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): no font could\n## be found for family \"Peralta\"\n\n## Warning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): no font could\n## be found for family \"Peralta\"\n\n## Warning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): no font could\n## be found for family \"Peralta\"## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\n## Unable to calculate text width/height (using zero)## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\n## Unable to calculate text width/height (using zero)## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\n## Unable to calculate text width/height (using zero)## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\n## Unable to calculate text width/height (using zero)## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\n## Unable to calculate text width/height (using zero)## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\n## Unable to calculate text width/height (using zero)## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\n## Unable to calculate text width/height (using zero)## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\n## Unable to calculate text width/height (using zero)## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\n## Unable to calculate text width/height (using zero)## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\n## Unable to calculate text width/height (using zero)## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"\n\n## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\n## Unable to calculate text width/height (using zero)## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\n## Unable to calculate text width/height (using zero)## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\n## Unable to calculate text width/height (using zero)## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\n## Unable to calculate text width/height (using zero)## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\n## Unable to calculate text width/height (using zero)## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\n## Unable to calculate text width/height (using zero)## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\n## Unable to calculate text width/height (using zero)## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\n## Unable to calculate text width/height (using zero)## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\n## Unable to calculate text width/height (using zero)## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\n## Unable to calculate text width/height (using zero)## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\n## Unable to calculate text width/height (using zero)## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\n## Unable to calculate text width/height (using zero)## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\n## Unable to calculate text width/height (using zero)## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\n## Unable to calculate text width/height (using zero)## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\n## Unable to calculate text width/height (using zero)## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\n## Unable to calculate text width/height (using zero)## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\n## Unable to calculate text width/height (using zero)## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\n## Unable to calculate text width/height (using zero)## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\n## Unable to calculate text width/height (using zero)## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\n## Unable to calculate text width/height (using zero)## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\n## Unable to calculate text width/height (using zero)## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\n## Unable to calculate text width/height (using zero)## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\n## Unable to calculate text width/height (using zero)## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\n## Unable to calculate text width/height (using zero)## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\n## Unable to calculate text width/height (using zero)## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\n## Unable to calculate text width/height (using zero)## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\n## Unable to calculate text width/height (using zero)## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\n## Unable to calculate text width/height (using zero)## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\n## Unable to calculate text width/height (using zero)## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\n## Unable to calculate text width/height (using zero)## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\n## Unable to calculate text width/height (using zero)## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\n## Unable to calculate text width/height (using zero)## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\n## Unable to calculate text width/height (using zero)## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\n## Unable to calculate text width/height (using zero)## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\n## Unable to calculate text width/height (using zero)## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\n## Unable to calculate text width/height (using zero)## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\n## Unable to calculate text width/height (using zero)## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\n## Unable to calculate text width/height (using zero)## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\n## Unable to calculate text width/height (using zero)## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\n## Unable to calculate text width/height (using zero)## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\n## Unable to calculate text width/height (using zero)## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\n## Unable to calculate text width/height (using zero)## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\n## Unable to calculate text width/height (using zero)## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\n## Unable to calculate text width/height (using zero)## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\n## Unable to calculate text width/height (using zero)## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\n## Unable to calculate text width/height (using zero)## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\n## Unable to calculate text width/height (using zero)## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\n## Unable to calculate text width/height (using zero)## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\n## Unable to calculate text width/height (using zero)## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\n## Unable to calculate text width/height (using zero)## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\n## Unable to calculate text width/height (using zero)## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\n## Unable to calculate text width/height (using zero)## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\n## Unable to calculate text width/height (using zero)## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\n## Unable to calculate text width/height (using zero)## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\n## Unable to calculate text width/height (using zero)## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\n## Unable to calculate text width/height (using zero)## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\n## Unable to calculate text width/height (using zero)## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\n## Unable to calculate text width/height (using zero)## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\n## Unable to calculate text width/height (using zero)## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\n## Unable to calculate text width/height (using zero)## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\n## Unable to calculate text width/height (using zero)## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\n## Unable to calculate text width/height (using zero)## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\n## Unable to calculate text width/height (using zero)## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\n## Unable to calculate text width/height (using zero)## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\n## Unable to calculate text width/height (using zero)## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\n## Unable to calculate text width/height (using zero)## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\n## Unable to calculate text width/height (using zero)## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\n## Unable to calculate text width/height (using zero)## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\n## Unable to calculate text width/height (using zero)## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\n## Unable to calculate text width/height (using zero)## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"\n\n## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\n## Unable to calculate text width/height (using zero)## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\n## Unable to calculate text width/height (using zero)## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"\n\n## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\n## Unable to calculate text width/height (using zero)## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\n## Unable to calculate text width/height (using zero)## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\n## Unable to calculate text width/height (using zero)## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\n## Unable to calculate text width/height (using zero)## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\n## Unable to calculate text width/height (using zero)## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\n## Unable to calculate text width/height (using zero)## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"\n\n## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\n## Unable to calculate text width/height (using zero)## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\n## Unable to calculate text width/height (using zero)## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\n## Unable to calculate text width/height (using zero)## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\n## Unable to calculate text width/height (using zero)## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\n## Unable to calculate text width/height (using zero)## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"\n\n## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\n## Unable to calculate text width/height (using zero)## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\n## Unable to calculate text width/height (using zero)## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\n## Unable to calculate text width/height (using zero)## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\n## Unable to calculate text width/height (using zero)## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\n## Unable to calculate text width/height (using zero)## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\n## Unable to calculate text width/height (using zero)## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\n## Unable to calculate text width/height (using zero)## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\n## Unable to calculate text width/height (using zero)## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\n## Unable to calculate text width/height (using zero)## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\n## Unable to calculate text width/height (using zero)## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\n## Unable to calculate text width/height (using zero)## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\n## Unable to calculate text width/height (using zero)## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\n## Unable to calculate text width/height (using zero)## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\n## Unable to calculate text width/height (using zero)## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\n## Unable to calculate text width/height (using zero)## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\n## Unable to calculate text width/height (using zero)## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\n## Unable to calculate text width/height (using zero)## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\n## Unable to calculate text width/height (using zero)## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"\n\n## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\n## Unable to calculate text width/height (using zero)## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\n## Unable to calculate text width/height (using zero)## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\n## Unable to calculate text width/height (using zero)## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"\n\n## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\n## Unable to calculate text width/height (using zero)## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\n## Unable to calculate text width/height (using zero)## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\n## Unable to calculate text width/height (using zero)## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\n## Unable to calculate text width/height (using zero)## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\n## Unable to calculate text width/height (using zero)## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\n## Unable to calculate text width/height (using zero)## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\n## Unable to calculate text width/height (using zero)## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\n## Unable to calculate text width/height (using zero)## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\n## Unable to calculate text width/height (using zero)## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\n## Unable to calculate text width/height (using zero)## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\n## Unable to calculate text width/height (using zero)## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\n## Unable to calculate text width/height (using zero)## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\n## Unable to calculate text width/height (using zero)## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\n## Unable to calculate text width/height (using zero)## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\n## Unable to calculate text width/height (using zero)## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\n## Unable to calculate text width/height (using zero)## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\n## Unable to calculate text width/height (using zero)## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\n## Unable to calculate text width/height (using zero)## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\n## Unable to calculate text width/height (using zero)## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\n## Unable to calculate text width/height (using zero)## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\n## Unable to calculate text width/height (using zero)## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\n## Unable to calculate text width/height (using zero)## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\n## Unable to calculate text width/height (using zero)## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\n## Unable to calculate text width/height (using zero)## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\n## Unable to calculate text width/height (using zero)## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\n## Unable to calculate text width/height (using zero)## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\n## Unable to calculate text width/height (using zero)## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\n## Unable to calculate text width/height (using zero)## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\n## Unable to calculate text width/height (using zero)## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\n## Unable to calculate text width/height (using zero)## Warning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"\n\n## Warning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"\n\n## Warning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"\n\n## Warning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"\n\n## Warning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"\n\n## Warning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\n## Unable to calculate text width/height (using zero)## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\n## Unable to calculate text width/height (using zero)## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\n## Unable to calculate text width/height (using zero)## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\n## Unable to calculate text width/height (using zero)## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\n## Unable to calculate text width/height (using zero)## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\n## Unable to calculate text width/height (using zero)## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\n## Unable to calculate text width/height (using zero)## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\n## Unable to calculate text width/height (using zero)## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\n## Unable to calculate text width/height (using zero)## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\n## Unable to calculate text width/height (using zero)## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\n## Unable to calculate text width/height (using zero)## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\n## Unable to calculate text width/height (using zero)## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\n## Unable to calculate text width/height (using zero)## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\n## Unable to calculate text width/height (using zero)## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\n## Unable to calculate text width/height (using zero)## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\n## Unable to calculate text width/height (using zero)## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\n## Unable to calculate text width/height (using zero)## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\n## Unable to calculate text width/height (using zero)## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\n## Unable to calculate text width/height (using zero)## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\n## Unable to calculate text width/height (using zero)## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\n## Unable to calculate text width/height (using zero)## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\n## Unable to calculate text width/height (using zero)## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\n## Unable to calculate text width/height (using zero)## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\n## Unable to calculate text width/height (using zero)## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\n## Unable to calculate text width/height (using zero)## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\n## Unable to calculate text width/height (using zero)## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\n## Unable to calculate text width/height (using zero)## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\n## Unable to calculate text width/height (using zero)## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\n## Unable to calculate text width/height (using zero)## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\n## Unable to calculate text width/height (using zero)## Warning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"\n\n## Warning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"\n\n## Warning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"\n\n## Warning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"\n\n## Warning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"\n\n## Warning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"\n\n## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\n## Unable to calculate text width/height (using zero)## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\n## Unable to calculate text width/height (using zero)## Warning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"\n\n## Warning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\n## Unable to calculate text width/height (using zero)## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\n## Unable to calculate text width/height (using zero)## Warning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"\n\n## Warning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\n## Unable to calculate text width/height (using zero)## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\n## Unable to calculate text width/height (using zero)## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\n## Unable to calculate text width/height (using zero)## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\n## Unable to calculate text width/height (using zero)## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\n## Unable to calculate text width/height (using zero)## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\n## Unable to calculate text width/height (using zero)## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\n## Unable to calculate text width/height (using zero)## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\n## Unable to calculate text width/height (using zero)## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\n## Unable to calculate text width/height (using zero)## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\n## Unable to calculate text width/height (using zero)## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\n## Unable to calculate text width/height (using zero)## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\n## Unable to calculate text width/height (using zero)## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\n## Unable to calculate text width/height (using zero)## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\n## Unable to calculate text width/height (using zero)## Warning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"\n\n## Warning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"\n\n## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\n## Unable to calculate text width/height (using zero)## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\n## Unable to calculate text width/height (using zero)## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\n## Unable to calculate text width/height (using zero)## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\n## Unable to calculate text width/height (using zero)## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\n## Unable to calculate text width/height (using zero)## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\n## Unable to calculate text width/height (using zero)## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\n## Unable to calculate text width/height (using zero)## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\n## Unable to calculate text width/height (using zero)## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\n## Unable to calculate text width/height (using zero)## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\n## Unable to calculate text width/height (using zero)## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\n## Unable to calculate text width/height (using zero)## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\n## Unable to calculate text width/height (using zero)## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\n## Unable to calculate text width/height (using zero)## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\n## Unable to calculate text width/height (using zero)## Warning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"\n\n## Warning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\n## Unable to calculate text width/height (using zero)## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\n## Unable to calculate text width/height (using zero)## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\n## Unable to calculate text width/height (using zero)## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\n## Unable to calculate text width/height (using zero)## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\n## Unable to calculate text width/height (using zero)## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\n## Unable to calculate text width/height (using zero)## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\n## Unable to calculate text width/height (using zero)## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\n## Unable to calculate text width/height (using zero)## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\n## Unable to calculate text width/height (using zero)## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\n## Unable to calculate text width/height (using zero)## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\n## Unable to calculate text width/height (using zero)## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\n## Unable to calculate text width/height (using zero)## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\n## Unable to calculate text width/height (using zero)## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\n## Unable to calculate text width/height (using zero)## Warning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"\n\n## Warning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\n## Unable to calculate text width/height (using zero)## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\n## Unable to calculate text width/height (using zero)## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\n## Unable to calculate text width/height (using zero)## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\n## Unable to calculate text width/height (using zero)## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\n## Unable to calculate text width/height (using zero)## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\n## Unable to calculate text width/height (using zero)## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\n## Unable to calculate text width/height (using zero)## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\n## Unable to calculate text width/height (using zero)## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\n## Unable to calculate text width/height (using zero)## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\n## Unable to calculate text width/height (using zero)## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\n## Unable to calculate text width/height (using zero)## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\n## Unable to calculate text width/height (using zero)## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\n## Unable to calculate text width/height (using zero)## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\n## Unable to calculate text width/height (using zero)## Warning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"\n\n## Warning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\n## Unable to calculate text width/height (using zero)## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\n## Unable to calculate text width/height (using zero)## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\n## Unable to calculate text width/height (using zero)## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\n## Unable to calculate text width/height (using zero)## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\n## Unable to calculate text width/height (using zero)## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\n## Unable to calculate text width/height (using zero)## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\n## Unable to calculate text width/height (using zero)## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\n## Unable to calculate text width/height (using zero)## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\n## Unable to calculate text width/height (using zero)## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\n## Unable to calculate text width/height (using zero)## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\n## Unable to calculate text width/height (using zero)## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\n## Unable to calculate text width/height (using zero)## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\n## Unable to calculate text width/height (using zero)## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\n## Unable to calculate text width/height (using zero)## Warning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"\n\n## Warning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\n## Unable to calculate text width/height (using zero)## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\n## Unable to calculate text width/height (using zero)## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\n## Unable to calculate text width/height (using zero)## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\n## Unable to calculate text width/height (using zero)## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\n## Unable to calculate text width/height (using zero)## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\n## Unable to calculate text width/height (using zero)## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\n## Unable to calculate text width/height (using zero)## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\n## Unable to calculate text width/height (using zero)## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\n## Unable to calculate text width/height (using zero)## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\n## Unable to calculate text width/height (using zero)## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\n## Unable to calculate text width/height (using zero)## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\n## Unable to calculate text width/height (using zero)## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\n## Unable to calculate text width/height (using zero)## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\n## Unable to calculate text width/height (using zero)## Warning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"\n\n## Warning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\n## Unable to calculate text width/height (using zero)## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\n## Unable to calculate text width/height (using zero)## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\n## Unable to calculate text width/height (using zero)## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\n## Unable to calculate text width/height (using zero)## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\n## Unable to calculate text width/height (using zero)## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\n## Unable to calculate text width/height (using zero)## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\n## Unable to calculate text width/height (using zero)## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\n## Unable to calculate text width/height (using zero)## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\n## Unable to calculate text width/height (using zero)## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\n## Unable to calculate text width/height (using zero)## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\n## Unable to calculate text width/height (using zero)## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\n## Unable to calculate text width/height (using zero)## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\n## Unable to calculate text width/height (using zero)## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\n## Unable to calculate text width/height (using zero)## Warning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"\n\n## Warning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\n## Unable to calculate text width/height (using zero)## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\n## Unable to calculate text width/height (using zero)## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\n## Unable to calculate text width/height (using zero)## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\n## Unable to calculate text width/height (using zero)## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\n## Unable to calculate text width/height (using zero)## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\n## Unable to calculate text width/height (using zero)## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\n## Unable to calculate text width/height (using zero)## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\n## Unable to calculate text width/height (using zero)## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\n## Unable to calculate text width/height (using zero)## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\n## Unable to calculate text width/height (using zero)## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\n## Unable to calculate text width/height (using zero)## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\n## Unable to calculate text width/height (using zero)## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\n## Unable to calculate text width/height (using zero)## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\n## Unable to calculate text width/height (using zero)## Warning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\"\n\n## Warning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, : no\n## font could be found for family \"Peralta\""},{"path":"tidyverse-ggplot2-customize.html","id":"latex公式","chapter":"第 23 章 ggplot2之扩展内容","heading":"23.9 latex公式","text":"","code":"\nlibrary(ggplot2)\nlibrary(latex2exp)\n\nggplot(mpg, aes(x = displ, y = hwy)) +\n  geom_point() +\n  annotate(\"text\",\n    x = 4, y = 40,\n    label = TeX(\"$\\\\alpha^2 + \\\\theta^2 = \\\\omega^2 $\"),\n    size = 9\n  ) +\n  labs(\n    title = TeX(\"The ratio of 1 and 2 is $\\\\,\\\\, \\\\frac{1}{2}$\"),\n    x = TeX(\"$\\\\alpha$\"),\n    y = TeX(\"$\\\\alpha^2$\")\n  )"},{"path":"tidyverse-ggplot2-customize.html","id":"coord_cartesian-与-scale_x_continuous","chapter":"第 23 章 ggplot2之扩展内容","heading":"23.10 “coord_cartesian() 与 scale_x_continuous()”","text":"乍一看，这两个操作没有区别实际上这两个操作，区别蛮大的解释：scale_x_continuous(limits = c(325,500))\n的骚操作，会把limits指定范围之外的点全部弄成NA, 也就说改变了原始数据，那么 geom_smooth() 会基于调整之后的数据做平滑曲线。scale_x_continuous(limits = c(325,500))\n的骚操作，会把limits指定范围之外的点全部弄成NA, 也就说改变了原始数据，那么 geom_smooth() 会基于调整之后的数据做平滑曲线。coord_cartesian(xlim = c(325,500))\n操作，不会改变数据，只是拿了一个放大镜，重点显示xlim = c(325, 500)这个范围。coord_cartesian(xlim = c(325,500))\n操作，不会改变数据，只是拿了一个放大镜，重点显示xlim = c(325, 500)这个范围。","code":"\np1 <- mtcars %>% \n  ggplot(aes(disp, wt)) +\n  geom_point() +\n  scale_x_continuous(limits = c(325, 500)) +\n  ggtitle(\"scale_x_continuous(limits = c(325, 500))\")\n\np2 <- mtcars %>% \n  ggplot(aes(disp, wt)) +\n  geom_point() +\n  coord_cartesian(xlim = c(325, 500)) +\n  ggtitle(\"coord_cartesian(xlim = c(325, 500))\")\n\n\np1 + p2## Warning: Removed 24 rows containing missing values (`geom_point()`).\np3 <- mtcars %>% \n  ggplot(aes(disp, wt)) +\n  geom_point() +\n  geom_smooth() +\n  ggtitle(\"no limits setting\") \n\np4 <- mtcars %>% \n  ggplot(aes(disp, wt)) +\n  geom_point() +\n  geom_smooth() +\n  scale_x_continuous(limits = c(325, 500)) +\n  ggtitle(\"scale_x_continuous(limits = c(325, 500))\")\n\n\np5 <- mtcars %>% \n  ggplot(aes(disp, wt)) +\n  geom_point() +\n  geom_smooth() +\n  coord_cartesian(xlim = c(325, 500)) +\n  ggtitle(\"coord_cartesian(xlim = c(325, 500))\")\n\n\n\np3 + p4 + p5## `geom_smooth()` using method = 'loess' and formula = 'y ~ x'\n## `geom_smooth()` using method = 'loess' and formula = 'y ~ x'## Warning: Removed 24 rows containing non-finite values (`stat_smooth()`).## Warning: Removed 24 rows containing missing values (`geom_point()`).## `geom_smooth()` using method = 'loess' and formula = 'y ~ x'"},{"path":"tidyverse-ggplot2-customize.html","id":"练习","chapter":"第 23 章 ggplot2之扩展内容","heading":"23.11 练习","text":"重复这张压平曲线（flatten curve）图","code":"## Warning in rm(central_park, d, drop_facet, gapdata, label_colors, myfun, :\n## object 'central_park' not found## Warning in rm(central_park, d, drop_facet, gapdata, label_colors, myfun, :\n## object 'label_colors' not found## Warning in rm(central_park, d, drop_facet, gapdata, label_colors, myfun, :\n## object 'nyc_squirrels' not found## Warning in rm(central_park, d, drop_facet, gapdata, label_colors, myfun, :\n## object 'pp' not found## Warning in rm(central_park, d, drop_facet, gapdata, label_colors, myfun, :\n## object 'df' not found"},{"path":"tidyverse-ggplot2-stat-layer.html","id":"tidyverse-ggplot2-stat-layer","chapter":"第 24 章 ggplot2之统计图层","heading":"第 24 章 ggplot2之统计图层","text":"","code":""},{"path":"tidyverse-ggplot2-stat-layer.html","id":"导言","chapter":"第 24 章 ggplot2之统计图层","heading":"24.1 导言","text":"美学映射是图形语法中非常重要的一个概念，变量映射到视觉元素，然后通过几何形状GEOM画出图形。（下图是每个几何形状所对应的视觉元素）\n图 24.1: ggplot2中的几何形状与美学映射\n比如geom_point(mapping = aes(x = mass, y = height)) 将会画出散点图，这里的x轴代表mass变量，而y轴代表height变量.因为geom_*()很强大而且也很容易理解，所以一般我们不会去思考我们的数据在喂给ggplot()后发生了什么，只希望能出图就行了。比如下面的直方图例子这里发生了什么呢？你可能看到body_mass_g这个变量代表了x轴，这个没错，但想弄清楚这个直方图，需要回答下面的问题映射到x轴的变量被分成了若干离散的小区间（bins)需要计算每个小区间中有多少观测值落入其中用于y轴上是一个新的变量最终，用户提供的x变量和经过计算处理后的y变量，共同确定了柱状图中每个柱子的位置和高度我并不是说，不能给出geom_histogram()详细说明就是一个傻子。相反，我这里的本意是强调数据->视觉元素的映射并不是理所当然的，尽管看上去往往非常自然、直观和客观。我们这里是提醒下，我们是否想过，修改上面中间过程，比如第1步和第2步，然后看看输出的图形是否还是直方图。这个想法非常重要，但我们很少想到。某种程度是因为在我们最初学习ggplot画图的时候，ggplot已经影响了我们的思维方式。比如，初学者可能经历过拿到数据却还不出图形的受挫感，举个例子来说，这里有个数据用geom_point(aes(x = mass, y = height)) 画图，却报错了。初学者可能苦苦搜索答案，然后被告知，ggplot画图需要先弄成tidy格式现在数据tidy了，你可以使用ggplot()，问题得以解决。于是我们得出了一个结论：想要ggplot工作就需要tidy data。 如果这样想，那么今天的内容ggplot2统计图层就更加有必要了。","code":"\nlibrary(tidyverse)## ── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n## ✔ dplyr     1.1.3     ✔ readr     2.1.4\n## ✔ forcats   1.0.0     ✔ stringr   1.5.0\n## ✔ ggplot2   3.4.3     ✔ tibble    3.2.1\n## ✔ lubridate 1.9.2     ✔ tidyr     1.3.0\n## ✔ purrr     1.0.2     \n## ── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n## ✖ dplyr::filter() masks stats::filter()\n## ✖ dplyr::lag()    masks stats::lag()\n## ℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\nlibrary(palmerpenguins)\n\nggplot(data = penguins, mapping = aes(x = body_mass_g)) +\n  geom_histogram()## `stat_bin()` using `bins = 30`. Pick better value with `binwidth`.## Warning: Removed 2 rows containing non-finite values (`stat_bin()`).\nd <- tibble::tribble(\n     ~variable, ~subject1, ~subject2, ~subject3,\n  \"mass\",         75,     70,    55,\n  \"height\",       154,    172,   144\n  )\nd## # A tibble: 2 × 4\n##   variable subject1 subject2 subject3\n##   <chr>       <dbl>    <dbl>    <dbl>\n## 1 mass           75       70       55\n## 2 height        154      172      144\nd %>% pivot_longer(\n  cols = subject1:subject3,\n  names_to = \"subject\",\n  names_pattern = \"subject(\\\\d)\",\n  values_to = \"value\"\n) %>% \n  pivot_wider(names_from = variable,\n              values_from = value)## # A tibble: 3 × 3\n##   subject  mass height\n##   <chr>   <dbl>  <dbl>\n## 1 1          75    154\n## 2 2          70    172\n## 3 3          55    144"},{"path":"tidyverse-ggplot2-stat-layer.html","id":"为何及何时使用统计图层","chapter":"第 24 章 ggplot2之统计图层","heading":"24.2 为何及何时使用统计图层","text":"你可能每天都在用ggplot，却用不到stat_*()函数，这样也可以胜任很多工作。事实上，因为我们仅仅只使用geom_*()函数，你会发现stat_*()是开发者才使用的深奥和神秘的部分，如果这样想，你可能怀疑你是否有必要了解这些stat_*()函数。好吧，学习 STAT 最主要的原因“Even though data tidy, may represent values want display”我们这里再用一个例子说明，假定我们有一数据框simple_data假定我们现在想画一个柱状图，一个柱子代表每一组group，柱子的高度代表的score的均值。好比，按照我们的想法，我们首先规整(tidy)数据，并且确保数据包含每个geom所需的美学映射，最后传递给ggplot()那么，传递给ggplot()的数据是需求很简单，很容易搞定。但如果我们想加误差棒(stand error)呢? 那我们需要再对数据整理统计，然后再传给ggplot().于是，我们再计算误差棒，这里变型的数据是这个样子的然后把变型的数据传递给ggplot()最后，我们把两个数据框组会到一起，一个用于柱状图，一个用于画误差棒。OMG, 为了画一个简单的图，我们需要写这么长的一段代码。究其原因就是，我们认为，一定要准备好一个tidy的数据，并且把想画的几何形状所需要的美学映射，都整理到这个tidy的数据框中事实上，理论上讲，simple_data_bar 和 simple_data_errorbar 并不是真正的tidy格式。因为按照Hadley Wickham的对tidy的定义是，一行代表一次观察。\n而这里的柱子的高度以及误差棒的两端不是观察出来的，而是统计计算出来的。\n所以我们的观点是，辛辛苦苦创建一个（包含每个几何形状所需的美学映射）的数据框，太低效了，而且这种方法也不支持tidy原则。\n既然 simple_data_bar 和 simple_data_errorbar都来源于simple_data，那为何不直接传递simple_data给ggplot()，让数据在内部转换，得到每个几何形状所需的美学映射呢？或许，你想要的是这样？Bingo","code":"\nsimple_data <- tibble(group = factor(rep(c(\"A\", \"B\"), each = 15)),\n                      subject = 1:30,\n                      score = c(rnorm(15, 40, 20), rnorm(15, 60, 10)))\nsimple_data## # A tibble: 30 × 3\n##    group subject score\n##    <fct>   <int> <dbl>\n##  1 A           1 45.9 \n##  2 A           2 41.4 \n##  3 A           3 35.1 \n##  4 A           4 24.8 \n##  5 A           5 48.7 \n##  6 A           6 49.6 \n##  7 A           7 44.7 \n##  8 A           8 49.7 \n##  9 A           9  9.03\n## 10 A          10 56.7 \n## # ℹ 20 more rows\nsimple_data %>%\n  group_by(group) %>% \n  summarize(\n    mean_score = mean(score),\n    .groups = 'drop' \n  ) %>% \n  ggplot(aes(x = group, y = mean_score)) +\n  geom_col()\nsimple_data %>%\n  group_by(group) %>% \n  summarize(\n    mean_score = mean(score),\n    .groups = 'drop' \n  ) ## # A tibble: 2 × 2\n##   group mean_score\n##   <fct>      <dbl>\n## 1 A           44.4\n## 2 B           60.0\nsimple_data %>% \n  group_by(group) %>% \n  summarize(\n    mean_score = mean(score),\n    se = sqrt(var(score)/length(score)),\n    .groups = 'drop'\n  ) %>% \n  mutate(\n    lower = mean_score - se,\n    upper = mean_score + se\n  )## # A tibble: 2 × 5\n##   group mean_score    se lower upper\n##   <fct>      <dbl> <dbl> <dbl> <dbl>\n## 1 A           44.4  4.29  40.1  48.7\n## 2 B           60.0  1.80  58.2  61.8\nsimple_data %>% \n  group_by(group) %>% \n  summarize(\n    mean_score = mean(score),\n    se = sqrt(var(score)/length(score)),\n    .groups = 'drop'\n  ) %>% \n  mutate(\n    lower = mean_score - se,\n    upper = mean_score + se\n  ) %>% \n  ggplot(aes(x = group, y = mean_score, ymin = lower, ymax = upper)) +\n  geom_errorbar()\nsimple_data_bar <- simple_data %>%\n  group_by(group) %>% \n  summarize(\n    mean_score = mean(score),\n    .groups = 'drop'\n  )\n  \nsimple_data_errorbar <- simple_data %>% \n  group_by(group) %>% \n  summarize(\n    mean_score = mean(score),\n    se = sqrt(var(score)/length(score)),\n    .groups = 'drop'\n  ) %>% \n  mutate(\n    lower = mean_score - se,\n    upper = mean_score + se\n  )\n\nggplot() +\n  geom_col(\n    aes(x = group, y = mean_score),\n    data = simple_data_bar\n  ) +\n  geom_errorbar(\n    aes(x = group, y = mean_score, ymin = lower, ymax = upper),\n    data = simple_data_errorbar\n  )\nsimple_data %>% \n  ggplot(aes(group, score)) +\n  stat_summary(geom = \"bar\") +\n  stat_summary(geom = \"errorbar\")## No summary function supplied, defaulting to `mean_se()`\n## No summary function supplied, defaulting to `mean_se()`"},{"path":"tidyverse-ggplot2-stat-layer.html","id":"小结-5","chapter":"第 24 章 ggplot2之统计图层","heading":"24.2.1 小结","text":"这一节，我们用一个很长的数据整理的代码，借助geom_*()画了一张含有误差棒的柱状图，而用stat_summary()不需要数据整理，只需要两行代码就实现相同效果。\n感受到了stat_summary()的强大了？不忙，好戏才慢慢开始…","code":""},{"path":"tidyverse-ggplot2-stat-layer.html","id":"用-stat_summary-理解统计图层","chapter":"第 24 章 ggplot2之统计图层","heading":"24.3 用 stat_summary() 理解统计图层","text":"前面讲到的 stat_summary() 是学习和理解 stat_*() 很好的例子，理解了stat_summary()的工作原理，其它的stat_*()也就都明白了，\n事实上，stat_summary()也是在数据视化中最常用的，因此我们接着讲它。那么，我们现在模拟一个测试数据height_df用我们熟悉的geom_point()然后用stat_summary()代替geom_point()，然后看看发生了什么看到了一个点和经过这个点的一条线，实际上，它也是一个几何形状pointrange.\n那么geom_pointrange() 是怎么数据转换的呢？回答这个问题，我们需要了解下geom_pointrange()需要哪些美学映射（参见图 24.1）：x yymin xminymax xmax所以，我们回去看看ggplot(aes(x = group, y = height))中aes()里的参数，group 映射到 x, height映射到了y, 但我们没有发现有ymin / xmin或者ymax / xmax的踪迹。问题来了，我们没有给出geom_pointrange()需要的美学映射，那stat_summmary()是怎么画出pointrange的呢？我们先猜测一下，stat_summary()先计算出必要的数据值，然后传递给pointrange?\n是不是呢？我们先看上图过程中有个提示看到了吧，summary function，说明我们猜对了，这就是stat_*()神秘的地方。首先，对于stat_summary()中的fun.data参数，它的默认值是mean_se()其次，我们看看这个函数这个mean_se()函数有两个参数，一个是x，一个是mult（默认为1）， 那么这个函数的功能，一步步来说删除缺失值NA计算出se, 公式为\\(SE = \\sqrt{\\frac{1}{N}\\sum_{=1}^N(x_i-\\bar{x})^2}\\)计算x的均值创建一个数据框（一行三列），y = mean, ymin = mean - se, ymax = mean + se很酷的一件事情是，mean_se()看上去是在ggplot()内部使用，实际上加载ggplot2宏包后，在全局环境变量里就可以访问到，不妨试试看， 注意到stat_summary()是对向量（单维度）做统计，因此要传height_df$height给它数据看上去和我们前面 stat_summary() 画的点线图一样。当然为了保险起见，我们还是核对下，这里用到ggplot2包中的一个神奇的函数layer_data(), 它可以拉取在图层中使用的数据，第二个参数是指定拉取哪个图层的数据，这里只有唯一的一个图层，因此指定为1。喔喔，结果很丰富，我们注意到y, ymin, ymax 的值与 mean_se() 计算的结果一致。","code":"\nheight_df <- tibble(group = \"A\",\n                    height = rnorm(30, 170, 10))\nheight_df %>% \n  ggplot(aes(x = group, y = height)) +\n  geom_point()\nheight_df %>% \n  ggplot(aes(x = group, y = height)) +\n  stat_summary()## No summary function supplied, defaulting to `mean_se()`No summary function supplied, defaulting to `mean_se()`\nmean_sefunction (x, mult = 1) \n{\n    x <- stats::na.omit(x)\n    se <- mult * sqrt(stats::var(x)/length(x))\n    mean <- mean(x)\n    new_data_frame(list(y = mean, ymin = mean - se, ymax = mean + \n        se), n = 1)\n}\n<bytecode: 0x0000021aef28aa10>\n<environment: namespace:ggplot2>\nmean_se(height_df$height)##          y     ymin     ymax\n## 1 169.6937 168.2679 171.1195\npointrange_plot <- height_df %>% \n  ggplot(aes(x = group, y = height)) +\n  stat_summary()\n\nlayer_data(pointrange_plot, 1)## No summary function supplied, defaulting to `mean_se()`##   x group        y     ymin     ymax PANEL flipped_aes colour size linewidth\n## 1 1     1 169.6937 168.2679 171.1195     1       FALSE  black  0.5       0.5\n##   linetype shape fill alpha stroke\n## 1        1    19   NA    NA      1"},{"path":"tidyverse-ggplot2-stat-layer.html","id":"小结-6","chapter":"第 24 章 ggplot2之统计图层","heading":"24.3.1 小结","text":"我们揭开了stat_summary()统计图层的神秘面纱的一角：函数stat_summary()里若没有指定数据，那就会从ggplot(data = .)里继承参数fun.data 会调用函数将数据变形，这个函数默认是mean_se()fun.data 返回的是数据框，这个数据框将用于geom参数画图，这里缺省的geom是pointrange如果fun.data 返回的数据框包含了所需要的美学映射，图形就会显示出来。为了让大家看的更明白，我们在stat_summary()中显式地给出fun.data和geom两个参数Look, ’s plot!","code":"\nheight_df %>% \n  ggplot(aes(x = group, y = height)) +\n  stat_summary(\n    geom = \"pointrange\",\n    fun.data = mean_se\n  )"},{"path":"tidyverse-ggplot2-stat-layer.html","id":"使用统计图层","chapter":"第 24 章 ggplot2之统计图层","heading":"24.4 使用统计图层","text":"现在我们进入了stat_summary()有趣的环节: 调整其中的参数画出各种图","code":""},{"path":"tidyverse-ggplot2-stat-layer.html","id":"包含95置信区间的误差棒","chapter":"第 24 章 ggplot2之统计图层","heading":"24.4.1 包含95%置信区间的误差棒","text":"我们用企鹅数据画出不同性别sex下的企鹅体重均值，同时误差棒要给出95%的置信区间（\n即均值加减 1.96倍的标准误）那么这里在stat_summary()函数内部发生了什么呢？分组分别各自的mean_se()，当ggplot()中提供了分组变量（比如这里的sex），stat_summary()会分组计算，\n再次感受到ggplot2的强大气息！","code":"\nmy_penguins <- na.omit(penguins)\n\nmy_penguins %>% \n  ggplot(aes(sex, body_mass_g)) +\n  stat_summary(\n    fun.data = ~mean_se(., mult = 1.96), # Increase `mult` value for bigger interval!\n    geom = \"errorbar\",\n  )\nfemale_mean_se <- my_penguins %>% \n  filter(sex == \"female\") %>% \n  pull(body_mass_g) %>% \n  mean_se(., mult = 1.96)\n\nmale_mean_se <- my_penguins %>% \n  filter(sex == \"male\") %>% \n  pull(body_mass_g) %>% \n  mean_se(., mult = 1.96)\n\nbind_rows(female_mean_se, male_mean_se)##          y     ymin     ymax\n## 1 3862.273 3760.624 3963.921\n## 2 4545.685 4426.581 4664.788"},{"path":"tidyverse-ggplot2-stat-layer.html","id":"带有彩色填充色的柱状图","chapter":"第 24 章 ggplot2之统计图层","heading":"24.4.2 带有彩色填充色的柱状图","text":"不同的企鹅种类，画出bill_length_mm长度的中位数（不再是均值），同时，让中位数小于40的用粉红色标出。这里需要自定义fun.data函数我们再来看看，stat_summary()内部发生了什么？注意到，fun.data中的定制函数还可以计算fill美学映射，最后一起传递给geom画图，强大！","code":"\ncalc_median_and_color <- function(x, threshold = 40) {\n  tibble(y = median(x)) %>% \n    mutate(fill = ifelse(y < threshold, \"pink\", \"grey35\"))\n}\n\nmy_penguins %>% \n  ggplot(aes(species, bill_length_mm)) +\n  stat_summary(\n    fun.data = calc_median_and_color,\n    geom = \"bar\"\n  )\nmy_penguins %>% \n  group_split(species) %>% \n  map(~ pull(., bill_length_mm)) %>% \n  map_dfr(calc_median_and_color)## # A tibble: 3 × 2\n##       y fill  \n##   <dbl> <chr> \n## 1  38.8 pink  \n## 2  49.6 grey35\n## 3  47.4 grey35"},{"path":"tidyverse-ggplot2-stat-layer.html","id":"大小变化的点线图","chapter":"第 24 章 ggplot2之统计图层","heading":"24.4.3 大小变化的点线图","text":"我们现在想画不同岛屿islands上企鹅bill_depth_mm均值，要求点线图中点的大小随观测数量（该岛屿企鹅的数量）变化这张图其实听酷的，每个岛屿观察值越小（也就说样本量越小），pointrange的不确定性就越大（图中的误差棒范围就越长）。我们再看看，这里的stat_summary()内部发生了什么，或者说数据是怎么转换的。","code":"\nmy_penguins %>% \n  ggplot(aes(species, bill_depth_mm)) +\n  stat_summary(\n    fun.data = function(x) {\n      \n      scaled_size <- length(x)/nrow(my_penguins)\n      \n      mean_se(x) %>% \n        mutate(size = scaled_size)\n    }\n  )\nmy_penguins %>% \n  group_split(species) %>%\n  map(~ pull(., bill_depth_mm)) %>% \n  map_dfr(\n    function(x) {\n      \n      scaled_size <- length(x)/nrow(my_penguins)\n      \n      mean_se(x) %>% \n        mutate(size = scaled_size)\n    }\n  )##          y     ymin     ymax      size\n## 1 18.34726 18.24635 18.44817 0.4384384\n## 2 18.42059 18.28290 18.55828 0.2042042\n## 3 14.99664 14.90625 15.08702 0.3573574"},{"path":"tidyverse-ggplot2-stat-layer.html","id":"总结","chapter":"第 24 章 ggplot2之统计图层","heading":"24.5 总结","text":"","code":""},{"path":"tidyverse-ggplot2-stat-layer.html","id":"主要结论","chapter":"第 24 章 ggplot2之统计图层","heading":"24.5.1 主要结论","text":"尽管数据是tidy的，但它未必能代表你想展示的值尽管数据是tidy的，但它未必能代表你想展示的值解决办法不是去规整数据以符合几何形状的要求，而是将原初tidy数据传递给ggplot(),\n让stat_*()函数在内部实现变型解决办法不是去规整数据以符合几何形状的要求，而是将原初tidy数据传递给ggplot(),\n让stat_*()函数在内部实现变型可以stat_*()函数可以定制geom以及相应的变形函数。当然，定制自己的函数，需要核对stat_*()所需要的变量和数据类型可以stat_*()函数可以定制geom以及相应的变形函数。当然，定制自己的函数，需要核对stat_*()所需要的变量和数据类型如果想用不同的geom，确保变换函数能计算出(几何形状所需要的)美学映射如果想用不同的geom，确保变换函数能计算出(几何形状所需要的)美学映射","code":""},{"path":"tidyverse-ggplot2-stat-layer.html","id":"stat-vs.-geom-or-stat-and-geom","chapter":"第 24 章 ggplot2之统计图层","heading":"24.5.2 STAT vs. GEOM or STAT and GEOM?","text":"尽管我们在谈论geom_*()的局限性，从而衬托出stat_*()的强大，但并不意味了后者可以取代前者，因为这不是一个非此即彼的问题，事实上，他们彼此依赖– 我们看到stat_summary() 有 geom 参数, geom_*() 也有 stat 参数。\n在更高的层级上讲，stat_*()和 geom_*() 都只是ggplot里构建图层的layer()函数的一个便利的方法，用曹植的《七步诗》来说, 本是同根生，相煎何太急。将layer()分成stat_*()和 geom_*()两块，或许是一个失误，最后我们用Hadley的原话来结束本章内容Unfortunately, due early design mistake called either stat_() geom_(). better decision call layer_() functions: ’s accurate description every layer involves stat geom本文档翻译自Demystifying stat_ layers ggplot2","code":""},{"path":"tidyverse-ggplot2-from-layer-to-geom.html","id":"tidyverse-ggplot2-from-layer-to-geom","chapter":"第 25 章 ggplot2之从图层到几何形状","heading":"第 25 章 ggplot2之从图层到几何形状","text":"用ggplot2，大多是从几何形状出发，总有“只见树木不见森林”的感觉。我尝试从图层结构出发，去思考ggplot2绘图原理。欢迎大家批评指正。","code":""},{"path":"tidyverse-ggplot2-from-layer-to-geom.html","id":"图层的五大元素","chapter":"第 25 章 ggplot2之从图层到几何形状","heading":"25.1 图层的五大元素","text":"ggplot2中每个图层都要有的五大元素：数据data美学映射mapping几何形状geom统计变换stat位置调整position数据映射后，需要指定一种数据统计变换的方式，统计计算数据（不进行统计变换可以理解为是等值变换），最后通过某种几何形状geom来对其进行可视化的展现。我们现在按照layer() -> stat_*() -> geom_*()这个思路来，理解各种图形。一般情况下，统计变换会生成新的数据列，在ggplot2里称之为Computed variables，如果想要这些新变量映射到图形属性，就需要使用 after_stat()或者stage()函数，具体见下面的案例。","code":""},{"path":"tidyverse-ggplot2-from-layer-to-geom.html","id":"加载宏包","chapter":"第 25 章 ggplot2之从图层到几何形状","heading":"25.2 加载宏包","text":"","code":"\nlibrary(tidyverse)\nlibrary(palmerpenguins)\npenguins <- penguins %>% drop_na()"},{"path":"tidyverse-ggplot2-from-layer-to-geom.html","id":"stat_identity","chapter":"第 25 章 ggplot2之从图层到几何形状","heading":"25.3 stat_identity()","text":"就是什么也不干，即等值变换。","code":"\npenguins %>%\n  ggplot(aes(x = bill_length_mm, y = bill_depth_mm)) +\n  layer(\n    stat = \"identity\", \n    geom = \"point\", \n    params = list(na.rm = FALSE),\n    position = \"identity\"\n  )\npenguins %>%\n  ggplot(aes(x = bill_length_mm, y = bill_depth_mm)) +\n  stat_identity(\n    geom = \"point\"\n  )\npenguins %>%\n  ggplot(aes(x = bill_length_mm, y = bill_depth_mm)) +\n  geom_point()"},{"path":"tidyverse-ggplot2-from-layer-to-geom.html","id":"stat_count","chapter":"第 25 章 ggplot2之从图层到几何形状","heading":"25.4 stat_count()","text":"统计 落在x(离散)位置上，点的个数Computed variablescount: number points binprop: groupwise proportion默认几何形状geom_bar()适用几何形状geom_point() / geom_bar()这里aes(y = after_stat(count)) 可以看作是aes(y = stage(start = NULL, after_stat = count))的简写","code":"\npenguins %>% \n  ggplot(aes(x = species)) +\n  layer(\n    stat = \"count\",\n    geom = \"bar\",\n    mapping = aes(y = after_stat(count)),\n    position = \"identity\"\n  )\npenguins %>% \n  ggplot(aes(x = species)) +\n  layer(\n    stat = \"count\",\n    geom = \"point\",\n    mapping = aes(y = after_stat(count)),\n    position = \"identity\"\n  )\npenguins %>% \n  ggplot(aes(x = species)) +\n  layer(\n    stat = \"count\",\n    geom = \"bar\",\n    mapping = aes(y = stage(start = NULL, after_stat = count)),\n    position = \"identity\"\n  )\npenguins %>% \n  ggplot(aes(x = species, y = after_stat(count))) +\n  stat_count(\n    geom = \"bar\"       \n  )\npenguins %>% \n  ggplot(aes(x = species, y = after_stat(count))) +\n  geom_bar(\n    stat = \"count\"     \n  )\npenguins %>% \n  ggplot(aes(x = species, y = after_stat(count))) +\n  stat_count(\n    geom = \"point\"\n  )\npenguins %>% \n  ggplot(aes(x = species, y = after_stat(count))) +\n  geom_point(\n    stat = \"count\"     \n  )"},{"path":"tidyverse-ggplot2-from-layer-to-geom.html","id":"stat_bin","chapter":"第 25 章 ggplot2之从图层到几何形状","heading":"25.5 stat_bin()","text":"统计 落在x(连续)区间上，点的个数Computed variablescount: number points bindensity: density points bin, scaled integrate 1ncount: count, scaled maximum 1ndensity: density, scaled maximum 1默认几何形状geom_bar()适用几何形状geom_bar() / geom_histogram() / geom_freqpolygeom_histogram 本质实际上是 geom_bar，都依赖stat_bin复杂点的geom_histogram()","code":"\npenguins %>% \n  ggplot(aes(x = bill_length_mm)) +\n  layer(\n    stat = \"bin\",\n    geom = \"bar\",\n    mapping = aes(y = after_stat(count)),\n    position = \"identity\"\n  )## `stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\npenguins %>% \n  ggplot(aes(x = bill_length_mm)) +\n  layer(\n    stat = \"bin\",\n    geom = \"point\",\n    mapping = aes(x = stage(start = bill_length_mm, after_stat = x), \n                  y = after_stat(count)\n                 ),\n    position = \"identity\"\n  )## `stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\npenguins %>% \n  ggplot(aes(x = bill_length_mm, y = after_stat(count))) +\n  stat_bin(\n    geom = \"point\"\n  )## `stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\npenguins %>% \n  ggplot(aes(x = bill_length_mm, y = after_stat(count))) +\n  geom_bar(\n    stat = \"bin\"\n  )## `stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\npenguins %>% \n  ggplot(aes(x = bill_length_mm)) +\n  layer(\n    stat = \"bin\",\n    geom = \"bar\",\n    mapping = aes(y = after_stat(count)), \n    position = 'identity'\n  ) ## `stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\npenguins %>% \n  ggplot(aes(x = bill_length_mm)) +\n  layer(\n    stat = \"bin\",\n    geom = \"bar\",\n    mapping = aes(y = after_stat(ncount)), \n    position = 'identity'\n  ) ## `stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\npenguins %>% \n  ggplot(aes(x = bill_length_mm)) +\n  stat_bin(\n    mapping = aes(y = after_stat(count)),\n    geom = \"bar\",\n    position = 'identity'\n  ) ## `stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\npenguins %>% \n  ggplot(aes(x = bill_length_mm)) +\n  geom_histogram(\n    mapping = aes(y = after_stat(count)),\n    stat = \"bin\",\n    position = 'identity'\n  ) ## `stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\npenguins %>% \n  ggplot(aes(x = bill_length_mm, fill = sex)) +\n  layer(\n    mapping = aes(y = after_stat(density)),\n    geom = \"bar\",\n    stat = \"bin\",\n    position = 'dodge'\n  ) +\n  facet_wrap(vars(species)) ## `stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\npenguins %>% \n  ggplot(aes(x = bill_length_mm, fill = sex)) +\n  layer(\n    mapping = aes(y = stage(NULL, after_stat = density)),\n    geom = \"bar\",\n    stat = \"bin\",\n    position = 'dodge'\n  ) +\n  facet_wrap(vars(species)) ## `stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\npenguins %>% \n  ggplot(aes(x = bill_length_mm, fill = sex)) +\n  stat_bin(\n    mapping = aes(y = after_stat(density)),\n    geom = \"bar\",\n    position = 'dodge'\n  ) +\n  facet_wrap(vars(species)) ## `stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\npenguins %>% \n  ggplot(aes(x = bill_length_mm, fill = sex)) +\n  geom_histogram(\n    aes(y = after_stat(density)),\n    position = 'dodge'\n  ) +\n  facet_wrap(vars(species)) ## `stat_bin()` using `bins = 30`. Pick better value with `binwidth`."},{"path":"tidyverse-ggplot2-from-layer-to-geom.html","id":"stat_density","chapter":"第 25 章 ggplot2之从图层到几何形状","heading":"25.6 stat_density()","text":"x(连续)核密度估计，可以看作是直方图的平滑版本Computed variablesdensity: density estimatecount: density * number points - useful stacked density plotsscaled: density estimate, scaled maximum 1ndensity: alias scaled, mirror syntax stat_bin()默认几何形状geom_area()适用几何形状geom_area()/ geom_line()/ geom_point()/ geom_density()","code":"\nkernel = c(\"gaussian\", \"epanechnikov\", \"rectangular\",\n           \"triangular\", \"biweight\",   \"cosine\", \n           \"optcosine\")\npenguins %>%\n  ggplot(aes(x = bill_length_mm)) +\n  layer(\n        stat = \"density\",\n        geom = \"area\",\n      params = list(kernel = \"gaussian\"),\n    position = \"identity\"\n  )\npenguins %>%\n  ggplot(aes(x = bill_length_mm)) +\n  layer(\n        stat = \"density\",\n        geom = \"line\",\n      params = list(kernel = \"gaussian\"),\n    position = \"identity\"\n  )\npenguins %>%\n  ggplot(aes(x = bill_length_mm)) +\n  layer(\n        stat = \"density\",\n        geom = \"point\",\n      params = list(kernel = \"gaussian\"),\n    position = \"identity\"\n  )\npenguins %>%\n  ggplot(aes(x = bill_length_mm)) +\n  stat_density(\n        geom = \"point\",\n      kernel = \"gaussian\"\n  )"},{"path":"tidyverse-ggplot2-from-layer-to-geom.html","id":"stat_boxplot","chapter":"第 25 章 ggplot2之从图层到几何形状","heading":"25.7 stat_boxplot()","text":"计算连续变量的五个统计值 (median, two hinges two whiskers), 以及outlierAesthetics\nx y; lower; upper; middle; ymin ; ymax\nAestheticsx y; lower; upper; middle; ymin ; ymaxComputed variables\nwidth: width boxplot\nymin: lower whisker = smallest observation greater equal lower hinge - 1.5 * IQR\nlower: lower hinge, 25% quantile\nnotchlower: lower edge notch = median - 1.58 * IQR / sqrt(n)\nmiddle: median, 50% quantile\nnotchupper: upper edge notch = median + 1.58 * IQR / sqrt(n)\nupper: upper hinge, 75% quantile\nymax: upper whisker = largest observation less equal upper hinge + 1.5 * IQR\nComputed variableswidth: width boxplotymin: lower whisker = smallest observation greater equal lower hinge - 1.5 * IQRlower: lower hinge, 25% quantilenotchlower: lower edge notch = median - 1.58 * IQR / sqrt(n)middle: median, 50% quantilenotchupper: upper edge notch = median + 1.58 * IQR / sqrt(n)upper: upper hinge, 75% quantileymax: upper whisker = largest observation less equal upper hinge + 1.5 * IQR默认几何形状geom_boxplot()适用几何形状geom_boxplot() / geom_point()可以根据 Computed variables 画出更多的几何形状","code":"\npenguins %>% \n  ggplot(aes(x = species, y = bill_length_mm))+\n  layer(\n    stat = \"boxplot\",\n    geom = \"boxplot\",\n    position = \"identity\"\n  )\npenguins %>% \n  ggplot(aes(x = species, y = bill_length_mm)) +\n  stat_boxplot(\n    geom = \"boxplot\"\n  )\npenguins %>% \n  ggplot(aes(x = species, y = bill_length_mm)) +\n  geom_boxplot()\npenguins %>% \n  ggplot(aes(x = species, y = bill_length_mm)) +\n  layer(\n    stat = \"boxplot\",\n    geom = \"boxplot\",\n    mapping = aes(color = after_stat(middle)),\n    position = \"identity\"\n  )\npenguins %>% \n  ggplot(aes(x = species, y = bill_length_mm)) +\n  layer(\n    stat = \"boxplot\",\n    geom = \"point\",\n    mapping = aes(y = after_stat(width)),\n    position = \"identity\"\n  )\npenguins %>% \n  ggplot(aes(x = species, y = bill_length_mm)) +\n  layer(\n    stat = \"boxplot\",\n    geom = \"point\",\n    mapping = aes(y = stage(bill_length_mm, after_stat = notchupper)),\n    position = \"identity\"\n  )\npenguins %>% \n  ggplot(aes(x = species, y = bill_length_mm)) +\n  layer(\n    stat = \"boxplot\",\n    geom = \"point\",\n    mapping = aes(y = stage(bill_length_mm, after_stat = ymax)),\n    position = \"identity\"\n  ) \npenguins %>% \n  ggplot(aes(x = species, y = bill_length_mm)) +\n  stat_boxplot()\npenguins %>% \n  ggplot(aes(x = species, y = bill_length_mm)) +\n  layer(\n    stat = \"boxplot\",\n    geom = \"point\",\n    mapping = aes(y = stage(bill_length_mm, after_stat = middle)),\n    params = list(color = \"red\", size = 5),\n    position = \"identity\"\n  ) \npenguins %>% \n  ggplot(aes(x = species, y = bill_length_mm)) +\n  geom_boxplot(\n    aes(colour = species, \n        fill = after_scale(alpha(colour, 0.4)))\n  )"},{"path":"tidyverse-ggplot2-from-layer-to-geom.html","id":"stat_ydensity","chapter":"第 25 章 ggplot2之从图层到几何形状","heading":"25.8 stat_ydensity()","text":"可以看作是箱线图的密度图呈现Computed variablesdensity: density estimatescaled: density estimate, scaled maximum 1count: density * number points - probably useless violin plotsviolinwidth: density scaled violin plot, according area, counts constant maximum widthn: number pointswidth: width violin bounding box默认几何形状geom_violin()适用几何形状geom_violin() / geom_point()","code":"\npenguins %>% \n  ggplot(aes(x = species, y = bill_length_mm)) +\n  geom_point() +\n  layer(\n    geom     = \"violin\",\n    stat     = \"ydensity\",\n    position = \"identity\"\n  )\npenguins %>% \n  ggplot(aes(x = species, y = bill_length_mm)) +\n  geom_point() +\n  layer(\n    geom     = \"point\",\n    stat     = \"ydensity\",\n    position = \"identity\"\n  )"},{"path":"tidyverse-ggplot2-from-layer-to-geom.html","id":"stat_bindot","chapter":"第 25 章 ggplot2之从图层到几何形状","heading":"25.9 stat_bindot()","text":"圆点图，是直方图的另外一种形式Computed variablesx: center bin, binaxis “x”y: center bin, binaxis “x”binwidth: max width bin method “dotdensity”;width bin method “histodot”count: number points binncount: count, scaled maximum 1density: density points bin, scaled integrate 1, method “histodot”ndensity: density, scaled maximum 1, method “histodot”默认几何形状geom_dotplot()适用几何形状geom_dotplot()","code":"\npenguins %>% \n  ggplot(aes(x = bill_length_mm)) +\n  layer(\n    stat = \"bindot\",\n    geom = \"dotplot\",\n    mapping = aes(y = stage(start = NULL, after_stat = count)),\n    params = list(binwidth = 1, dotsize = 0.5), \n    position = position_nudge(-0.025)\n  )\npenguins %>% \n  ggplot(aes(x = bill_length_mm)) +\n  layer(\n    stat = \"bindot\",\n    geom = \"point\",\n    mapping = aes(y = stage(start = NULL, after_stat = count)),\n    params = list(binwidth = 1), \n    position = \"identity\"\n  )\npenguins %>% \n  ggplot(aes(x = bill_length_mm)) +\n  geom_dotplot(\n    binwidth = 1, \n    dotsize = 0.5)\npenguins %>% \n  ggplot(aes(x = species, y = bill_length_mm)) +\n  geom_dotplot(\n    binaxis = \"y\", \n    stackdir = \"down\", \n    dotsize = 0.4, \n    position = position_nudge(-0.025)\n    )## Bin width defaults to 1/30 of the range of the data. Pick better value with\n## `binwidth`."},{"path":"tidyverse-ggplot2-from-layer-to-geom.html","id":"stat_sum","chapter":"第 25 章 ggplot2之从图层到几何形状","heading":"25.10 stat_sum()","text":"统计落在x(离散或者连续), y(离散或者连续)位置上，点的个数Computed variablesn : number observations positionprop : percent points panel position默认几何形状geom_point()适用几何形状geom_point() / geom_count() / geom_bar()","code":"\npenguins %>% \n  ggplot(aes(x = bill_length_mm, y = bill_depth_mm)) +\n  layer(\n    stat = \"sum\",\n    geom = \"point\",\n    mapping = aes(size = after_stat(n)),\n    position = \"identity\"\n  )\npenguins %>% \n  ggplot(aes(x = bill_length_mm, y = bill_depth_mm)) +\n  stat_sum(\n    geom = \"point\"\n  )"},{"path":"tidyverse-ggplot2-from-layer-to-geom.html","id":"stat_smooth","chapter":"第 25 章 ggplot2之从图层到几何形状","heading":"25.11 stat_smooth()","text":"根据x,y数据和拟合公式，计算每个点位置的拟合值以及标准误Computed variablesy: predicted valueymin: lower pointwise confidence interval around meanymax: upper pointwise confidence interval around meanse: standard error默认几何形状geom_smooth()适用几何形状geom_smooth() / geom_line() / geom_point()统计转换后，可以根据 Computed variables 画出更多的几何形状","code":"\npenguins %>% \n  ggplot(aes(x = bill_length_mm, y = bill_depth_mm)) +\n  layer(\n    geom = \"smooth\",\n    stat = \"smooth\",\n    params = list(se = TRUE), \n    position = \"identity\"\n  )## `geom_smooth()` using method = 'loess' and formula = 'y ~ x'\npenguins %>% \n  ggplot(aes(x = bill_length_mm, y = bill_depth_mm)) +\n  stat_smooth(\n    geom = \"smooth\",\n    se = TRUE \n  )## `geom_smooth()` using method = 'loess' and formula = 'y ~ x'\npenguins %>% \n  ggplot(aes(x = bill_length_mm, y = bill_depth_mm)) +\n  geom_smooth(\n    se = TRUE \n  )## `geom_smooth()` using method = 'loess' and formula = 'y ~ x'\npenguins %>% \n  ggplot(aes(x = bill_length_mm, y = bill_depth_mm)) +\n  layer(\n    geom = \"point\",\n    stat = \"smooth\",\n    mapping = aes(size = after_stat(ymax), color = after_stat(ymin)),\n    position = \"identity\"\n  )## `geom_smooth()` using method = 'loess' and formula = 'y ~ x'\npenguins %>% \n  ggplot(aes(x = bill_length_mm, y = bill_depth_mm)) +\n  layer(\n    geom = \"point\",\n    stat = \"smooth\",\n    mapping = aes(color = after_stat(ymin)),\n    position = \"identity\"\n  )## `geom_smooth()` using method = 'loess' and formula = 'y ~ x'\npenguins %>% \n  ggplot(aes(x = bill_length_mm, y = bill_depth_mm)) +\n  layer(\n    geom = \"point\",\n    stat = \"smooth\",\n    mapping = aes(color = stage(NULL, after_stat = ymin)),\n    position = \"identity\"\n  )## `geom_smooth()` using method = 'loess' and formula = 'y ~ x'\npenguins %>%\n  ggplot(aes(x = bill_length_mm, y = bill_depth_mm)) +\n  layer(\n    geom = \"line\",\n    stat = \"smooth\", \n    mapping = aes(color = after_stat(ymin)),    \n    position = \"identity\"\n  )## `geom_smooth()` using method = 'loess' and formula = 'y ~ x'\npenguins %>%\n  ggplot(aes(x = bill_length_mm, y = bill_depth_mm)) +\n  layer(\n    geom = \"pointrange\",\n    stat = \"smooth\", \n    mapping = aes(color = after_stat(se)),    \n    position = \"identity\"\n  )## `geom_smooth()` using method = 'loess' and formula = 'y ~ x'\npenguins %>%\n  ggplot(aes(x = bill_length_mm, y = bill_depth_mm)) +\n  layer(\n        stat = \"smooth\",\n     mapping = aes(color = after_stat(y)),    \n        geom = \"point\",\n      params = list(method  = \"lm\", formula = y ~ splines::ns(x, 2)),    \n    position = \"identity\"\n  )"},{"path":"tidyverse-ggplot2-from-layer-to-geom.html","id":"stat_bin_2d","chapter":"第 25 章 ggplot2之从图层到几何形状","heading":"25.12 stat_bin_2d()","text":"统计 落在x和y(长方形)区域上，点的个数Computed variablescount: number points bindensity: density points bin, scaled integrate 1ncount: count, scaled maximum 1ndensity: density, scaled maximum 1默认几何形状geom_tile()适用几何形状geom_tile() / geom_point()/ geom_bin2d()可以根据 Computed variables 画出更多的几何形状","code":"\npenguins %>% \n  ggplot(aes(x = bill_length_mm, y = bill_depth_mm)) +\n  layer(\n    geom = \"tile\",\n    stat = \"bin_2d\",\n    position = \"identity\"\n  )\npenguins %>% \n  ggplot(aes(x = bill_length_mm, y = bill_depth_mm)) +\n  layer(\n    geom = \"point\",\n    stat = \"bin_2d\",\n    position = \"identity\"\n  )\npenguins %>% \n  ggplot(aes(x = bill_length_mm, y = bill_depth_mm)) +\n  stat_bin_2d(\n    geom = \"point\"\n  )\npenguins %>% \n  ggplot(aes(x = bill_length_mm, y = bill_depth_mm)) +\n  geom_point(\n    stat = \"bin_2d\"\n  )\npenguins %>% \n  ggplot(aes(x = bill_length_mm, y = bill_depth_mm)) +\n  layer(\n    geom = \"point\",\n    stat = \"bin_2d\",\n    mapping = aes(size = after_stat(count)),\n    position = \"identity\"\n  )\npenguins %>% \n  ggplot(aes(x = bill_length_mm, y = bill_depth_mm)) +\n  layer(\n    geom = \"tile\",\n    stat = \"bin_2d\",\n    mapping = aes(fill = after_stat(count)),\n    position = \"identity\"\n  )"},{"path":"tidyverse-ggplot2-from-layer-to-geom.html","id":"stat_bin_hex","chapter":"第 25 章 ggplot2之从图层到几何形状","heading":"25.13 stat_bin_hex()","text":"stat_bin2d()的六边形版本Computed variablescount: number points bindensity: density points bin, scaled integrate 1ncount: count, scaled maximum 1ndensity: density, scaled maximum 1默认几何形状geom_hex()适用几何形状geom_hex()可以根据 Computed variables 画出更多的几何形状","code":"\npenguins %>% \n  ggplot(aes(x = bill_length_mm, y = bill_depth_mm)) +\n  layer(\n    geom = \"hex\",\n    stat = \"binhex\",\n    position = \"identity\"\n  )\npenguins %>% \n  ggplot(aes(x = bill_length_mm, y = bill_depth_mm)) +\n  stat_bin_hex(\n    geom = \"hex\"\n  )\npenguins %>% \n  ggplot(aes(x = bill_length_mm, y = bill_depth_mm)) +\n  geom_hex(\n    stat = \"binhex\"\n  )\npenguins %>% \n  ggplot(aes(x = bill_length_mm, y = bill_depth_mm)) +\n  layer(\n    geom = \"text\",\n    stat = \"binhex\",\n    mapping = aes(label = stage(NULL, after_stat = count)),\n    position = \"identity\"\n  )"},{"path":"tidyverse-ggplot2-from-layer-to-geom.html","id":"stat_density_2d","chapter":"第 25 章 ggplot2之从图层到几何形状","heading":"25.14 stat_density_2d()","text":"二维核密度估计，二维版本的stat_density()不计算等高线 (contour = FALSE)\ncount: number points bin\ndensity: density points bin, scaled integrate 1\nncount: count, scaled maximum 1\nndensity: density, scaled maximum 1\ncount: number points bindensity: density points bin, scaled integrate 1ncount: count, scaled maximum 1ndensity: density, scaled maximum 1计算等高线 (contour = TRUE)\ncontour lines, stat_contour() 等高线\ncontour bands, stat_contour_filled() 等高带\nContours line types contour_var = (density, ndensity, count)\ncontour lines, stat_contour() 等高线contour bands, stat_contour_filled() 等高带Contours line types contour_var = (density, ndensity, count)适用几何形状geom_density_2d() / geom_raster() / goem_tile() / geom_path() / geom_point() / geom_polygon()","code":""},{"path":"tidyverse-ggplot2-from-layer-to-geom.html","id":"先看看有等高线的情形","chapter":"第 25 章 ggplot2之从图层到几何形状","heading":"25.14.1 先看看有等高线的情形","text":"可以根据 Computed variables 画出更多的几何形状","code":"\npenguins %>%\n  ggplot(aes(x = bill_length_mm, y = bill_depth_mm)) +\n  layer(\n    stat =  \"density_2d\",\n    geom =  \"path\", \n    params = list(contour = TRUE),\n    position = \"identity\"\n  )\npenguins %>%\n  ggplot(aes(x = bill_length_mm, y = bill_depth_mm)) +\n  stat_density_2d(\n    contour = TRUE\n  )\npenguins %>%\n  ggplot(aes(x = bill_length_mm, y = bill_depth_mm)) +\n  geom_density_2d()\npenguins %>%\n  ggplot(aes(x = bill_length_mm, y = bill_depth_mm)) +\n  geom_path(\n    stat = \"density_2d\",\n    contour = TRUE\n  )\npenguins %>%\n  ggplot(aes(x = bill_length_mm, y = bill_depth_mm)) +\n  layer(\n    stat =  \"density_2d\",\n    geom =  \"point\", \n    params = list(contour = TRUE),\n    position = \"identity\"\n  )\npenguins %>%\n  ggplot(aes(x = bill_length_mm, y = bill_depth_mm)) +\n  layer(\n    stat = \"density_2d\",\n    geom = \"polygon\",\n    mapping = aes(fill = after_stat(level)),\n    params = list(contour = TRUE),\n    position = \"identity\"\n  )"},{"path":"tidyverse-ggplot2-from-layer-to-geom.html","id":"看看无等高线的情形","chapter":"第 25 章 ggplot2之从图层到几何形状","heading":"25.14.2 看看无等高线的情形","text":"可以根据 Computed variables 画出更多的几何形状","code":"\npenguins %>%\n  ggplot(aes(x = bill_length_mm, y = bill_depth_mm)) +\n  layer(\n    stat = \"density_2d\",\n    geom = \"raster\",\n    mapping = aes(fill = after_stat(density)),\n    params = list(contour = FALSE),\n    position = \"identity\"\n  )\npenguins %>%\n  ggplot(aes(x = bill_length_mm, y = bill_depth_mm)) +\n  layer(\n    stat = \"density_2d\",\n    geom = \"tile\",\n    mapping = aes(fill = after_stat(count)),\n    params = list(contour = FALSE),\n    position = \"identity\"\n  )\npenguins %>%\n  ggplot(aes(x = bill_length_mm, y = bill_depth_mm)) +\n  stat_density_2d(\n    geom = \"tile\",\n    mapping = aes(fill = after_stat(density)),\n    contour = FALSE\n  )\npenguins %>%\n  ggplot(aes(x = bill_length_mm, y = bill_depth_mm)) +\n  geom_tile(\n    stat = \"density_2d\",\n    mapping = aes(fill = after_stat(density)),\n    contour = FALSE\n  )\npenguins %>%\n  ggplot(aes(x = bill_length_mm, y = bill_depth_mm)) +\n  layer(\n    stat = \"density_2d\",\n    geom = \"point\",\n    mapping = aes(size = after_stat(count)),\n    params = list(n = 20, contour = FALSE),\n    position = \"identity\"\n  )"},{"path":"tidyverse-ggplot2-from-layer-to-geom.html","id":"stat_ellipse","chapter":"第 25 章 ggplot2之从图层到几何形状","heading":"25.15 stat_ellipse()","text":"假定数据服从多元分布，计算椭圆图形需要的参数Computed variablesxy默认几何形状geom_path()适用几何形状geom_path() /geom_polygon()可以根据 Computed variables 画出更多的几何形状","code":"\npenguins %>%\n  ggplot(aes(x = bill_length_mm, y = bill_depth_mm)) +\n  geom_point() +\n  layer(\n    stat = \"ellipse\",\n    geom = \"path\",\n    params = list(type = \"norm\", linetype = 2),\n    position = \"identity\"\n  )\npenguins %>%\n  ggplot(aes(x = bill_length_mm, y = bill_depth_mm)) +\n  geom_point() +\n  stat_ellipse(\n    geom = \"path\",\n    type = \"norm\", \n    linetype = 2\n  )\npenguins %>%\n  ggplot(aes(x = bill_length_mm, y = bill_depth_mm, color = species)) +\n  geom_point() +\n  geom_path(\n    stat = \"ellipse\",\n    type = \"norm\", \n    linetype = 2\n  )\npenguins %>%\n  ggplot(aes(x = bill_length_mm, y = bill_depth_mm)) +\n  geom_point() +\n  layer(\n    stat = \"ellipse\",\n    geom = \"path\",\n    mapping = aes(color = after_stat(y)),\n    params = list(type = \"norm\"),\n    position = \"identity\"\n  )"},{"path":"tidyverse-ggplot2-from-layer-to-geom.html","id":"stat_summary","chapter":"第 25 章 ggplot2之从图层到几何形状","heading":"25.16 stat_summary","text":"每一个x位置上, summary y说明stat_summary() operates unique x y;stat_summary_bin() operates binned x y.Summary functionsfun.data :\nComplete summary function. take numeric vector input return data frame outputfun.data :\nComplete summary function. take numeric vector input return data frame outputfun.min :\nmin summary function (take numeric vector return single number)fun.min :\nmin summary function (take numeric vector return single number)fun :\nmain summary function (take numeric vector return single number)fun :\nmain summary function (take numeric vector return single number)fun.max :\nmax summary function (take numeric vector return single number)fun.max :\nmax summary function (take numeric vector return single number)适用几何形状geom_errorbar() / geom_pointrange() /geom_linerange() / geom_crossbar() /geom_point()","code":"\npenguins %>%\n  ggplot(aes(x = species, y = bill_length_mm)) +\n  layer(\n    stat = \"summary\", \n    params = list(fun.data = \"mean_cl_normal\"),\n    geom = \"errorbar\", \n    position = \"identity\"\n  )## Warning: Computation failed in `stat_summary()`\n## Caused by error in `fun.data()`:\n## ! The package \"Hmisc\" is required.\npenguins %>%\n  ggplot(aes(x = species, y = bill_depth_mm)) +\n  stat_summary(\n    fun.data = mean_cl_normal, \n        geom = \"errorbar\"\n  )## Warning: Computation failed in `stat_summary()`\n## Caused by error in `fun.data()`:\n## ! The package \"Hmisc\" is required.\npenguins %>%\n  ggplot(aes(x = sex, y = bill_length_mm)) +\n  layer(\n    stat     = \"summary\",\n    geom     = \"point\",\n    mapping  = aes(size = after_stat(ymin)),\n    position = \"identity\"\n  )## No summary function supplied, defaulting to `mean_se()`\npenguins %>% \n  ggplot(aes(x = species, y = bill_length_mm)) +\n  geom_point() +\n  layer(\n    geom     = \"point\",\n    stat     = \"summary\",\n    params   = list(fun = \"mean\", color = \"red\", size = 5),\n    position = \"identity\"\n  )\npenguins %>% \n  ggplot(aes(x = species, y = bill_length_mm)) +\n  layer(\n    geom = \"point\", \n    stat = \"summary\",\n    params = list(fun = median), \n    mapping = aes(y = stage(start = bill_length_mm, after_stat = y)),\n    position = \"identity\"\n    )\npenguins %>%\n  ggplot(aes(x = sex, y = bill_length_mm)) +\n  geom_point() +\n  layer(\n    geom = \"pointrange\",   \n    stat = \"summary\", \n    params = list(fun.data = ~mean_se(., mult = 5), color = \"red\", size = 2),\n    position = \"identity\"\n  )\npenguins %>% \n  ggplot(aes(x = species, y = bill_length_mm)) +\n  geom_point() +\n  stat_summary(\n    geom  = \"point\",\n    fun   = \"mean\",\n    color = \"red\", \n    size  = 5\n  )\npenguins %>%\n  ggplot(aes( x = body_mass_g, y = species)) +\n  geom_jitter() +\n  stat_summary(\n    fun = mean, \n    geom = \"point\", \n    size = 5, \n    color = \"red\",\n    alpha = 1\n  )\npenguins %>%\n  ggplot(aes(x = sex, y = bill_length_mm)) +\n  geom_point() +\n  stat_summary(  \n    fun.data = ~mean_se(., mult = 5),\n    color = \"red\",\n    geom = \"pointrange\",    \n    size = 2\n  )\npenguins %>%\n  ggplot(aes(x = sex, y = bill_length_mm)) +\n  geom_point() +\n  geom_pointrange(\n    stat = \"summary\", \n    fun.data = ~mean_se(., mult = 5),\n    color = \"red\",\n    size = 2\n  )\npenguins %>%\n  ggplot(aes(x = sex, y = bill_length_mm)) +\n  geom_point() +\n  stat_summary(\n    fun.data = mean_cl_boot,\n    color = \"red\",\n    geom = \"pointrange\"\n  )## Warning: Computation failed in `stat_summary()`\n## Caused by error in `fun.data()`:\n## ! The package \"Hmisc\" is required.\npenguins %>%\n  ggplot(aes(x = sex, y = bill_length_mm)) +\n  geom_point() +\n  stat_summary(\n    fun = mean, \n    fun.min = min, \n    fun.max = max,      \n    geom = \"pointrange\",  \n    color = \"red\",\n    size = 5\n  )\npenguins %>%\n  ggplot(aes(x = sex, y = bill_length_mm)) +\n  geom_point() +\n  stat_summary(\n    fun.data = ~mean_se(., mult = 5),\n    color = \"red\",\n    geom = \"pointrange\"   \n  )\npenguins %>%\n  ggplot(aes(x = species, y = bill_length_mm, group = sex)) +\n  geom_point() +\n  stat_summary(\n    fun.data = ~mean_se(., mult = 2),\n    color = \"red\",\n    geom = \"pointrange\"    \n  )\npenguins %>%\n  ggplot(aes(x = species, y = bill_length_mm, group = sex)) +\n  stat_summary(fun = mean,\n               fun.min = function(x) mean(x) - sd(x), \n               fun.max = function(x) mean(x) + sd(x), \n               geom = \"pointrange\") +\n  stat_summary(fun = mean,\n               geom = \"line\") +\n  facet_wrap(~ sex)"},{"path":"tidyverse-ggplot2-from-layer-to-geom.html","id":"自定义函数-1","chapter":"第 25 章 ggplot2之从图层到几何形状","heading":"25.16.1 自定义函数","text":"","code":"\nmy_count <- function(x){\n  tibble(\n    y = length(x),\n  )\n}\n\n\npenguins %>% \n  ggplot(aes(x = species, y = bill_length_mm)) +\n  stat_summary(\n    geom = \"bar\",\n    fun.data = my_count\n  )\npenguins %>% \n  ggplot(aes(x = species, y = bill_length_mm)) +\n  geom_bar(\n    stat = \"summary\",\n    fun.data = my_count,\n  )\npenguins %>% \n  ggplot(aes(x = species, y = bill_length_mm)) +\n  layer(\n    geom = \"bar\",\n    stat = \"summary\",\n    params = list(fun.data = my_count),\n    position = \"identity\"\n  )"},{"path":"tidyverse-ggplot2-from-layer-to-geom.html","id":"添加文本","chapter":"第 25 章 ggplot2之从图层到几何形状","heading":"25.16.2 添加文本","text":"","code":"\npenguins %>% \n  ggplot(aes(x = species, y = bill_length_mm)) +\n  geom_point() +\n  stat_summary(\n    geom = \"point\",\n    fun = \"mean\",\n    color = \"red\", \n    size = 5\n  ) +\n  stat_summary(\n    aes(label = after_stat(y)),\n    geom = \"text\",\n    fun.data = \"mean_se\",\n    color = \"red\", \n    size = 5\n  )\nn_fun <- function(x) {\n  data.frame(y = 62,\n            label = length(x),\n            color = ifelse(length(x) > 100, \"red\", \"blue\")\n            )\n}\n\n\npenguins %>% \n  ggplot(aes(x = species, y = bill_length_mm)) +\n  geom_boxplot() +\n  geom_jitter() +\n  stat_summary(\n    fun.data = n_fun,\n    geom = \"text\"\n  )\npenguins %>% \n  ggplot(aes(x = species, y = bill_length_mm)) +\n  geom_point() +\n  stat_summary(\n    geom = \"pointrange\",\n    fun.data = \"mean_cl_boot\",\n    color = \"red\"\n  )## Warning: Computation failed in `stat_summary()`\n## Caused by error in `fun.data()`:\n## ! The package \"Hmisc\" is required.\npenguins %>% \n  ggplot(aes(x = species, y = bill_length_mm)) +\n  geom_point() +\n  stat_summary(\n    geom = \"pointrange\",\n    fun.data = ~ mean_se(., mult = 5),\n    color = \"red\", \n    size = 1\n  ) +\n  stat_summary(\n    fun = \"mean\",\n    geom = \"text\",\n    mapping = aes(y = stage(bill_length_mm, after_stat = 30), \n                  label = round(after_stat(y), 2)),\n    color = \"blue\", \n    size = 5\n  ) +\n  stat_summary(\n    fun = \"length\",\n    geom = \"text\",\n    mapping = aes(y = stage(bill_length_mm, after_stat = 62), \n                  label = after_stat(y)\n                  ),\n    color = \"black\", \n    size = 5\n  )"},{"path":"tidyverse-ggplot2-from-layer-to-geom.html","id":"更多-1","chapter":"第 25 章 ggplot2之从图层到几何形状","heading":"25.16.3 更多","text":"","code":"\ncalc_median_and_fill <- function(x, threshold = 40) {\n  tibble(\n    y = median(x),\n    fill = if_else(y < threshold, \"red\", \"gray50\")\n  )\n}\n\npenguins %>%\n  ggplot(aes(x = species, y = bill_length_mm)) +\n  stat_summary(\n    fun.data = calc_median_and_fill, \n    geom = \"bar\" \n  )\ncalc_median_and_color <- function(x, threshold = 40) {\n  tibble(\n    y = median(x),\n    color = if_else(y < threshold, \"red\", \"gray50\")\n  )\n}\n\npenguins %>%\n  ggplot(aes(x = species, y = bill_length_mm)) +\n  stat_summary(\n    fun.data = calc_median_and_color, \n    geom = \"point\",\n    size = 5\n  )\npenguins %>%\n  ggplot(aes(species, bill_depth_mm)) +\n  stat_summary(\n    fun.data = function(x) {\n      \n      scaled_size <- length(x)/nrow(penguins)\n      \n      mean_se(x) %>% \n        mutate(size = scaled_size)\n    }\n  )\npenguins %>%\n  ggplot(aes(species, bill_depth_mm)) +\n  geom_point(position = position_jitter(width = .2), alpha = .3) +\n  stat_summary(fun = mean, \n               na.rm = TRUE,\n               geom = \"point\", \n               color = \"dodgerblue\", \n               size = 4, \n               shape = \"diamond\") +\n  stat_summary(fun.data = mean_cl_normal,\n               na.rm = TRUE, \n               geom = \"errorbar\",\n               width = .2, \n               color = \"dodgerblue\") +\n  stat_summary(fun = mean, \n               na.rm = TRUE, \n               aes(group = 1),\n               geom = \"line\", \n               color = \"dodgerblue\", \n               size = .75) ## Warning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\n## ℹ Please use `linewidth` instead.\n## This warning is displayed once every 8 hours.\n## Call `lifecycle::last_lifecycle_warnings()` to see where this warning was\n## generated.## Warning: Computation failed in `stat_summary()`\n## Caused by error in `fun.data()`:\n## ! The package \"Hmisc\" is required.\npenguins %>%\n  ggplot(aes(species, bill_depth_mm, group = sex, color = sex)) +\n  geom_point(\n    position = position_jitterdodge(\n      jitter.width = .2,\n      dodge.width = .7\n    ),\n    alpha = .1\n  ) +\n  stat_summary(\n    fun = mean,\n    na.rm = TRUE,\n    geom = \"point\",\n    shape = \"diamond\",\n    size = 4,\n    color = \"black\",\n    position = position_dodge(width = .7)\n  ) +\n  stat_summary(\n    fun.data = mean_cl_normal,\n    na.rm = TRUE,\n    geom = \"errorbar\",\n    width = .2,\n    color = \"black\",\n    position = position_dodge(width = .7)\n  ) +\n  scale_color_brewer(palette = \"Set1\")## Warning: Computation failed in `stat_summary()`\n## Caused by error in `fun.data()`:\n## ! The package \"Hmisc\" is required.\npenguins %>%\n  ggplot(aes(species, bill_depth_mm, group = sex, color = sex)) +\n  geom_point(\n    position = position_jitterdodge(\n      jitter.width = .2,\n      dodge.width = .7\n    ),\n    alpha = .1\n  ) +\n  stat_summary(\n    fun = mean,\n    na.rm = TRUE,\n    geom = \"point\",\n    shape = \"diamond\",\n    size = 4,\n    color = \"black\",\n    position = position_dodge(width = .7)\n  ) +\n  stat_summary(\n    fun.data = mean_cl_normal,\n    na.rm = TRUE,\n    geom = \"errorbar\",\n    width = .2,\n    color = \"black\",\n    position = position_dodge(width = .7)\n  ) +\n  scale_color_brewer(palette = \"Set1\") +\n  facet_wrap(~sex)## Warning: Computation failed in `stat_summary()`\n## Computation failed in `stat_summary()`\n## Caused by error in `fun.data()`:\n## ! The package \"Hmisc\" is required."},{"path":"tidyverse-ggplot2-from-layer-to-geom.html","id":"stat_summary_bin","chapter":"第 25 章 ggplot2之从图层到几何形状","heading":"25.17 stat_summary_bin","text":"在落入x区间位置上的y，设定函数（也可以调整方向，对落入y区间位置的每个x，设定函数）","code":"\npenguins %>%\n  ggplot(aes(x = bill_depth_mm, y = bill_length_mm)) +\n  layer(\n    stat = \"summary_bin\",\n    geom = \"bar\",\n    params = list(fun = mean, color = \"red\", orientation = 'x'),\n    position = \"identity\"\n  )\npenguins %>%\n  ggplot(aes(x = bill_depth_mm, y = bill_length_mm)) +\n  stat_summary_bin(   \n    fun = mean,\n    color = \"red\",\n    geom = \"bar\",\n    orientation = 'x'     # bin on x axis, summary mean on y\n  )\npenguins %>%\n  ggplot(aes(x = bill_depth_mm, y = bill_length_mm)) +\n  stat_summary_bin( \n    fun = mean,\n    color = \"red\",\n    geom = \"bar\",\n    orientation = 'y'  \n  )\npenguins %>%\n  ggplot(aes(x = bill_depth_mm, y = bill_length_mm)) +\n  geom_bar(\n    stat = \"summary_bin\",\n    fun = mean,\n    color = \"red\"\n  )\npenguins %>%\n  ggplot(aes(x = bill_depth_mm, y = bill_length_mm)) +\n  stat_summary_bin( \n    fun = mean,\n    color = \"red\",\n    geom = \"bar\",\n    orientation = 'y'  # bin on y axis, summary mean on x\n  )"},{"path":"tidyverse-ggplot2-from-layer-to-geom.html","id":"stat_function","chapter":"第 25 章 ggplot2之从图层到几何形状","heading":"25.18 stat_function()","text":"函数曲线Computed variablesx: x values along gridy: value function evaluated corresponding x默认几何形状geom_line()适用几何形状geom_line() / geom_point() /geom_function()","code":"\ntibble(x = runif(n = 100, min = -5, max = 5)) %>% \n  ggplot() +\n  layer(\n    stat = \"function\",\n    geom = \"point\",\n    params = list(fun = dnorm, args = list(mean = 0, sd = 0.5)),\n    position = \"identity\"\n  ) + \n  xlim(-2, 2)\ntibble(x = runif(n = 100, min = -5, max = 5)) %>% \n  ggplot() +\n  layer(\n    stat = \"function\",\n    geom = \"point\",\n    params = list(fun =  ~ 0.5*exp(-abs(.x))),\n    position = \"identity\"\n  ) + \n  xlim(-2, 2)"},{"path":"tidyverse-ggplot2-from-layer-to-geom.html","id":"stat_spoke","chapter":"第 25 章 ggplot2之从图层到几何形状","heading":"25.19 stat_spoke()","text":"将角度和半径转换为xend和yend，可以看作是geom_segment()另外一种形式","code":"\npenguins %>%\n  mutate(angle = flipper_length_mm / (2*pi) ) %>% \n  ggplot(aes(x = bill_length_mm, y = bill_depth_mm)) +\n  layer(\n    stat = \"identity\",\n    geom = \"spoke\",\n    mapping = aes(angle = angle),\n    params = list(radius = 0.5),\n    position = \"identity\"\n  )\npenguins %>%\n  mutate(angle = flipper_length_mm / (2*pi) ) %>% \n  \n  ggplot(aes(x = bill_length_mm, y = bill_depth_mm)) +\n  geom_spoke(\n    mapping = aes(angle = angle),\n    radius = 0.5\n  )"},{"path":"tidyverse-ggplot2-from-layer-to-geom.html","id":"stat_quantile","chapter":"第 25 章 ggplot2之从图层到几何形状","heading":"25.20 stat_quantile()","text":"分位数回归Computed variablesquantile: quantile distribution默认几何形状geom_quantile()适用几何形状geom_line() / geom_point() / geom_quantile()","code":"\nquantreg::rq(bill_depth_mm ~ bill_length_mm, \n             data = penguins,\n             tau = c(0.25, 0.5, 0.75)\n             )\npenguins %>% \n  ggplot(aes(x = bill_length_mm, y = bill_depth_mm)) +\n  layer(\n    stat = \"quantile\",\n    geom = \"quantile\",\n    params = list(quantiles = c(0.25, 0.5, 0.75)),\n    position = \"identity\"\n)## Smoothing formula not specified. Using: y ~ x\npenguins %>% \n  ggplot(aes(x = bill_length_mm, y = bill_depth_mm)) +\n  layer(\n    stat = \"quantile\",\n    geom = \"point\",\n    mapping = aes(color = after_stat(quantile)),\n    params = list(quantiles = c(0.25, 0.5, 0.75)),\n    position = \"identity\"\n)## Smoothing formula not specified. Using: y ~ x"},{"path":"tidyverse-ggplot2-from-layer-to-geom.html","id":"stat_summary_2d","chapter":"第 25 章 ggplot2之从图层到几何形状","heading":"25.21 stat_summary_2d()","text":"落在x和y(长方形)区域上, summary z文档说stat_summary_2d() 2d variation stat_summary(). 个人觉得不完全准确看参数stat_summary() 是对每一个x统计汇总summary，有多少个唯一的x, 就有多少个value.看参数stat_summary() 是对每一个x统计汇总summary，有多少个唯一的x, 就有多少个value.而stat_summary_2d() 有 bin的参数，它是对落在(x，y)构成的具有一定binwidth的长方形区域内的z统计汇总. 有多少个长方形，就有多少个value.而stat_summary_2d() 有 bin的参数，它是对落在(x，y)构成的具有一定binwidth的长方形区域内的z统计汇总. 有多少个长方形，就有多少个value.离散变量是正确的，但对应连续变量不准确。Aestheticsx: horizontal positiony: vertical positionz: value passed summary functionComputed variablesx, y : Locationvalue : Value summary statistic.默认几何形状geom_tile() stat_summary_2d()geom_hex() stat_summary_hex()","code":"\npenguins %>% \n  ggplot(aes(x = bill_length_mm, y = bill_depth_mm, z = body_mass_g)) +\n  layer(\n    stat = \"summary_2d\",\n    geom = \"tile\",\n    params = list(fun = ~ sum(.x^2)),\n    position = \"identity\"\n  ) \npenguins %>% \n  ggplot(aes(x = bill_length_mm, y = bill_depth_mm, z = body_mass_g)) +\n  stat_summary_2d(\n    geom = \"point\",\n    fun = ~ sum(.x^2),  # summary statistic for z\n    mapping = aes(size = after_stat(value))\n  ) "},{"path":"tidyverse-ggplot2-from-layer-to-geom.html","id":"测试","chapter":"第 25 章 ggplot2之从图层到几何形状","heading":"25.21.1 测试","text":"说明有4个重叠的点。sum是一个点一个位置bin_2d是一个bin一个统计stat_summary_2d也是一个bin一个位置","code":"\npenguins %>% \n  distinct(bill_length_mm, bill_depth_mm)## # A tibble: 329 × 2\n##    bill_length_mm bill_depth_mm\n##             <dbl>         <dbl>\n##  1           39.1          18.7\n##  2           39.5          17.4\n##  3           40.3          18  \n##  4           36.7          19.3\n##  5           39.3          20.6\n##  6           38.9          17.8\n##  7           39.2          19.6\n##  8           41.1          17.6\n##  9           38.6          21.2\n## 10           34.6          21.1\n## # ℹ 319 more rows\npenguins %>% \n  ggplot(aes(x = bill_length_mm, y = bill_depth_mm)) +\n  layer(\n    geom = \"text\",\n    stat = \"sum\",\n    mapping = aes(label = after_stat(n), color = as.factor(after_stat(n)) ),\n    params = list(size = 4),\n    position = \"identity\"\n  )\npenguins %>% \n  ggplot(aes(x = bill_length_mm, y = bill_depth_mm)) +\n  layer(\n    geom = \"text\",\n    stat = \"bin_2d\",\n    mapping = aes(label = stage(NULL, after_stat = count)),\n    position = \"identity\"\n  )\nn_fun <- function(z) {\n      length(z)\n  }\n\npenguins %>% \n  ggplot(aes(x = bill_length_mm, y = bill_depth_mm, z = body_mass_g)) +\n  stat_summary_2d(\n    fun = n_fun,\n    geom = \"text\",\n    mapping = aes(label = after_stat(value))\n  )"},{"path":"tidyverse-ggplot2-from-layer-to-geom.html","id":"stat_summary_hex","chapter":"第 25 章 ggplot2之从图层到几何形状","heading":"25.22 stat_summary_hex()","text":"落在x和y(六边形)区域上, summary z","code":"\npenguins %>% \n  ggplot(aes(x = bill_length_mm, y = bill_depth_mm, z = body_mass_g)) +\n  layer(\n    stat = \"summary_hex\",\n    geom = \"tile\",\n    params = list(fun = ~ sum(.x^2), binwidth = c(0.5, 0.2)),\n    position = \"identity\"\n  ) \npenguins %>% \n  ggplot(aes(x = bill_length_mm, y = bill_depth_mm, z = body_mass_g)) +\n  stat_summary_hex(\n    geom = \"tile\",\n    fun = ~ sum(.x^2),         # summary statistic for z\n    binwidth = c(0.5, 0.2)     # Numeric vector giving bin width in both vertical and horizontal directions\n  ) "},{"path":"tidyverse-ggplot2-from-layer-to-geom.html","id":"stat_contour-and-stat_contour_filled","chapter":"第 25 章 ggplot2之从图层到几何形状","heading":"25.23 stat_contour() and stat_contour_filled()","text":"等高线、等高面，需要提供x,y,z映射Computed variableslevel: Height contour. contour lines, numeric vector represents bin boundaries. contour bands, ordered factor represents bin ranges.level_low: level_high, level_mid (contour bands ) Lower upper bin boundaries band, well mid point boundaries.nlevel: Height contour, scaled maximum 1.piece: Contour piece (integer).默认几何形状geom_contour() / geom_contour_filled()适用几何形状geom_contour() / geom_contour_filled()","code":"\npenguins %>% \n  mutate(\n    flipper_length_mm = flipper_length_mm %/% 10,\n    body_mass_g = body_mass_g %/% 10\n  ) %>% \n  ggplot(aes(x = flipper_length_mm, y = body_mass_g, z = bill_length_mm)) +\n  layer(\n    stat = \"contour\",\n    geom = \"path\",\n    mapping = aes(colour = after_stat(level)),\n    position = \"identity\"\n  )\npenguins %>% \n  mutate(\n    flipper_length_mm = flipper_length_mm %/% 10,\n    body_mass_g = body_mass_g %/% 10\n  ) %>% \n  ggplot(aes(x = flipper_length_mm, y = body_mass_g, z = bill_length_mm)) +\n  stat_contour(\n    geom = \"path\",\n    mapping = aes(colour = after_stat(level))\n  )\npenguins %>% \n  mutate(\n    flipper_length_mm = flipper_length_mm %/% 10,\n    body_mass_g = body_mass_g %/% 10\n  ) %>% \n  ggplot(aes(x = flipper_length_mm, y = body_mass_g, z = bill_length_mm)) +\n  geom_contour(\n    aes(colour = after_stat(level))\n  )"},{"path":"tidyverse-ggplot2-from-layer-to-geom.html","id":"课后作业","chapter":"第 25 章 ggplot2之从图层到几何形状","heading":"25.24 课后作业","text":"写成对应的stat_***() 版本和geom_***()版本写出对应的stat_***() 版本和layer()版本上题用layer写，但要求不用stat = \"sum\", 而用stat = \"summary\"","code":"\nlibrary(tidyverse)\nlibrary(palmerpenguins)\n\npenguins <- penguins %>% drop_na()\n\nggplot() +\n  layer(\n      data       = penguins,\n      mapping    = aes(x = species, y = bill_length_mm, color = fct_rev(sex)),\n      stat       = \"summary\", \n      params     = list(fun = \"mean\"),\n      geom       = \"point\",\n      position   = position_dodge(width = 0.5)\n  )\npenguins %>% \n  ggplot(aes(species, island)) +\n  geom_count(aes(size = after_stat(n)), show.legend = FALSE) "},{"path":"tidyverse-ggplot2-colors.html","id":"tidyverse-ggplot2-colors","chapter":"第 26 章 ggplot2之数据可视化中的配色","heading":"第 26 章 ggplot2之数据可视化中的配色","text":"","code":"\nlibrary(tidyverse)\nlibrary(palmerpenguins)"},{"path":"tidyverse-ggplot2-colors.html","id":"可视化颜色","chapter":"第 26 章 ggplot2之数据可视化中的配色","heading":"26.1 可视化颜色","text":"","code":"\nlibrary(scales)## \n## Attaching package: 'scales'## The following object is masked from 'package:purrr':\n## \n##     discard## The following object is masked from 'package:readr':\n## \n##     col_factor\nshow_col(viridis_pal()(10))"},{"path":"tidyverse-ggplot2-colors.html","id":"修改ggplot2中的颜色","chapter":"第 26 章 ggplot2之数据可视化中的配色","heading":"26.2 修改ggplot2中的颜色","text":"ggplot2中默认的颜色就不错。但有时候为了让图更好看，需要在画图中使用配色。\n### Change colors manually\ncustom color palettes can specified using functions :\n- scale_fill_manual() box plot, bar plot, violin plot, etc\n- scale_color_manual() lines points","code":""},{"path":"tidyverse-ggplot2-colors.html","id":"use-gray-colors","chapter":"第 26 章 ggplot2之数据可视化中的配色","heading":"26.2.1 Use gray colors","text":"scale_fill_grey() scale_color_grey()","code":""},{"path":"tidyverse-ggplot2-colors.html","id":"continuous-colors","chapter":"第 26 章 ggplot2之数据可视化中的配色","heading":"26.2.2 Continuous colors","text":"graph can colored according values continuous variable using functions :scale_color_gradient(), scale_fill_gradient() sequential gradients two colorsscale_color_gradient2(), scale_fill_gradient2() diverging gradientsscale_color_gradientn(), scale_fill_gradientn() gradient n colors","code":""},{"path":"tidyverse-ggplot2-colors.html","id":"colorbrewer配色包","chapter":"第 26 章 ggplot2之数据可视化中的配色","heading":"26.3 ColorBrewer配色包","text":"我个人比较喜欢ColorBrewer中的配色！请参考ggplot2 colors : change colors automatically manually. 以下是几个常用的函数：","code":""},{"path":"tidyverse-ggplot2-colors.html","id":"use-rcolorbrewer-palettes","chapter":"第 26 章 ggplot2之数据可视化中的配色","heading":"26.3.1 Use RColorBrewer palettes","text":"scale_fill_brewer(palette=“Dark2”) scale_color_brewer(palette=“Dark2”)","code":""},{"path":"tidyverse-ggplot2-colors.html","id":"配色建议","chapter":"第 26 章 ggplot2之数据可视化中的配色","heading":"26.4 配色建议","text":"这里有个小小的提示：尽可能避免使用\"red\", \"green\", \"blue\", \"cyan\", \"magenta\", \"yellow\"颜色使用相对柔和的颜色\"firebrick\", \"springgreen4\", \"blue3\", \"turquoise3\", \"darkorchid2\", \"gold2\"，会让人觉得舒服可以对比下","code":"\ncolorspace::swatchplot(c(\"red\", \"green\", \"blue\", \"cyan\", \"magenta\", \"yellow\"))\ncolorspace::swatchplot(c(\"firebrick\", \"springgreen4\", \"blue3\", \"turquoise3\", \"darkorchid2\", \"gold2\"))"},{"path":"tidyverse-ggplot2-colors.html","id":"color-wheel","chapter":"第 26 章 ggplot2之数据可视化中的配色","heading":"26.5 color-wheel","text":"Adobe ColorAdobe Colorscheme Colorscheme Color","code":""},{"path":"tidyverse-ggplot2-colors.html","id":"colorspace配色包","chapter":"第 26 章 ggplot2之数据可视化中的配色","heading":"26.6 colorspace配色包","text":"下面是另外一个包colorspace中的配色讲解！colorspace 宏包提供了三种类型的配色模板:Qualitative: 分类，用于呈现分类信息，比如不同种类用不同的颜色，颜色之间一般对比鲜明。Sequential: 序列，用于呈现有序/连续的数值信息，比如为了展示某地区黑人比例，比例越高颜色越深，比例越低颜色越浅。Diverging: 分歧，用于呈现有序/连续的数值信息，这些数值围绕着一个中心值，比中心值越大的方向用一种渐变色，比中心值越小用另一种渐变色。三种类型对应着三个函数 qualitative_hcl(), sequential_hcl(), 和 diverging_hcl().","code":"\nlibrary(colorspace)    "},{"path":"tidyverse-ggplot2-colors.html","id":"配色模板","chapter":"第 26 章 ggplot2之数据可视化中的配色","heading":"26.6.1 配色模板","text":"根据你需要颜色的三大种类，先找适合的模板palettes或者指定某个种类，显示所有的模板如果看中某个模板的颜色，可以获取它的值，比如sequential种类下的 “Peach”模板，当然，在用之前，我们先检验下","code":"\nhcl_palettes(plot = TRUE)\nhcl_palettes(\"qualitative\", plot = TRUE)\nhcl_palettes(\"sequential (single-hue)\", n = 7, plot = TRUE)\nhcl_palettes(\"sequential (multi-hue)\", n = 7, plot = TRUE)\nhcl_palettes(\"diverging\", n = 7, plot = TRUE)\n#colorspace::diverging_hcl(n = 7, \"Dark 2\")\n#colorspace::qualitative_hcl(4, palette = \"myset\")\ncolorspace::sequential_hcl(n = 7, palette = \"Peach\")## [1] \"#EA4C3B\" \"#EF6D48\" \"#F3885B\" \"#F6A173\" \"#F8B78E\" \"#F9CCA9\" \"#FADDC3\"\ncolorspace::sequential_hcl(n = 7, palette = \"Peach\") %>% \n  colorspace::swatchplot()"},{"path":"tidyverse-ggplot2-colors.html","id":"在ggplot2中使用","chapter":"第 26 章 ggplot2之数据可视化中的配色","heading":"26.6.2 在ggplot2中使用","text":"在ggplot2中可以免去手工操作，而直接使用。事实上，\ncolorspace 模板使用起来很方便，有统一格式scale_<aesthetic>_<datatype>_<colorscale>(),这里 <aesthetic> 是指定映射 (fill, color, colour),这里 <datatype> 是表明数据变量的类型 (discrete, continuous, binned),这里 colorscale 是声明颜色标度类型 (qualitative, sequential, diverging, divergingx).","code":""},{"path":"tidyverse-ggplot2-colors.html","id":"使用案例1","chapter":"第 26 章 ggplot2之数据可视化中的配色","heading":"26.6.3 使用案例1","text":"ggplot2默认手动修改使用colorspace模板配色","code":"\npenguins %>% \n   ggplot(aes(bill_length_mm, fill = species)) +\n   geom_density(alpha = 0.6)## Warning: Removed 2 rows containing non-finite values (`stat_density()`).\npenguins %>% \n   ggplot(aes(bill_length_mm, fill = species)) +\n   geom_density(alpha = 0.6) +\n   scale_fill_manual(\n     breaks = c(\"Adelie\", \"Chinstrap\", \"Gentoo\"), \n     values = c(\"darkorange\", \"purple\", \"cyan4\")\n  )## Warning: Removed 2 rows containing non-finite values (`stat_density()`).\npenguins %>% \n   ggplot(aes(bill_length_mm, fill = species)) +\n   geom_density(alpha = 0.6) +\n   scale_fill_discrete_qualitative(palette = \"cold\")## Warning: Removed 2 rows containing non-finite values (`stat_density()`).\npenguins %>% \n   ggplot(aes(bill_length_mm, fill = species)) +\n   geom_density(alpha = 0.6) +\n   scale_fill_discrete_qualitative(palette = \"cold\", nmax = 4, order = 2:4)## Warning: Removed 2 rows containing non-finite values (`stat_density()`).\nsequential_hcl(palette = \"Purples 3\", n = 6) %>% \n  swatchplot()\npenguins %>% \n   ggplot(aes(bill_length_mm, fill = species)) +\n   geom_density(alpha = 0.6) +\n   scale_fill_discrete_sequential(palette = \"Purples 3\", \n                                  nmax = 6, \n                                  rev = FALSE, \n                                  order = 3:5)## Warning: Removed 2 rows containing non-finite values (`stat_density()`)."},{"path":"tidyverse-ggplot2-colors.html","id":"使用案例2","chapter":"第 26 章 ggplot2之数据可视化中的配色","heading":"26.6.4 使用案例2","text":"","code":"\ntemps_months <- read_csv(\"./demo_data/tempnormals.csv\") %>%\n  group_by(location, month_name) %>%\n  summarize(mean = mean(temperature)) %>%\n  mutate(\n    month = factor(\n      month_name,\n      levels = c(\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\")\n    ),\n    location = factor(\n      location, levels = c(\"Death Valley\", \"Houston\", \"San Diego\", \"Chicago\")\n    )\n  ) %>%\n  select(-month_name)## Rows: 1464 Columns: 8\n## ── Column specification ────────────────────────────────────────────────────────\n## Delimiter: \",\"\n## chr  (4): location, station_id, month_name, month\n## dbl  (3): temperature, day, day_of_year\n## date (1): date\n## \n## ℹ Use `spec()` to retrieve the full column specification for this data.\n## ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n## `summarise()` has grouped output by 'location'. You can override using the `.groups` argument.\ntemps_months## # A tibble: 48 × 3\n## # Groups:   location [4]\n##    location  mean month\n##    <fct>    <dbl> <fct>\n##  1 Chicago   50.4 Apr  \n##  2 Chicago   74.1 Aug  \n##  3 Chicago   29   Dec  \n##  4 Chicago   28.9 Feb  \n##  5 Chicago   24.8 Jan  \n##  6 Chicago   75.8 Jul  \n##  7 Chicago   71.0 Jun  \n##  8 Chicago   38.8 Mar  \n##  9 Chicago   60.9 May  \n## 10 Chicago   41.6 Nov  \n## # ℹ 38 more rows\ntemps_months %>% \n  ggplot(aes(x = month, y = location, fill = mean)) +\n  geom_tile(width = 0.95, height = 0.95) +\n  coord_fixed(expand = FALSE) +\n  theme_classic()\ntemps_months %>% \n  ggplot(aes(x = month, y = location, fill = mean)) +\n  geom_tile(width = 0.95, height = 0.95) +\n  coord_fixed(expand = FALSE) +\n  theme_classic() +\n  scale_fill_gradient()\ntemps_months %>% \n  ggplot(aes(x = month, y = location, fill = mean)) +\n  geom_tile(width = 0.95, height = 0.95) +\n  coord_fixed(expand = FALSE) +\n  theme_classic() +\n  scale_fill_viridis_c()\ntemps_months %>% \n  ggplot(aes(x = month, y = location, fill = mean)) +\n  geom_tile(width = 0.95, height = 0.95) +\n  coord_fixed(expand = FALSE) +\n  theme_classic() +\n  scale_fill_viridis_c(option = \"B\", begin = 0.15)\ntemps_months %>% \n  ggplot(aes(x = month, y = location, fill = mean)) +\n  geom_tile(width = 0.95, height = 0.95) +\n  coord_fixed(expand = FALSE) +\n  theme_classic() +\n  scale_fill_continuous_sequential(palette = \"YlGnBu\", rev = FALSE)\ntemps_months %>% \n  ggplot(aes(x = month, y = location, fill = mean)) +\n  geom_tile(width = 0.95, height = 0.95) +\n  coord_fixed(expand = FALSE) +\n  theme_classic() +\n  scale_fill_continuous_sequential(palette = \"Viridis\", rev = FALSE)\ntemps_months %>% \n  ggplot( aes(x = month, y = location, fill = mean)) +\n  geom_tile(width = 0.95, height = 0.95) +\n  coord_fixed(expand = FALSE) +\n  theme_classic() +\n  scale_fill_continuous_sequential(palette = \"Inferno\", begin = 0.15, rev = FALSE)\ntemps_months %>% \n  ggplot(aes(x = month, y = location, fill = mean)) +\n  geom_tile(width = 0.95, height = 0.95) +\n  coord_fixed(expand = FALSE) +\n  theme_classic() +\n  scale_fill_continuous_sequential(palette = \"Plasma\", begin = 0.35, rev = FALSE)"},{"path":"tidyverse-ggplot2-override-aes.html","id":"tidyverse-ggplot2-override-aes","chapter":"第 27 章 ggplot2之控制图例的外观","heading":"第 27 章 ggplot2之控制图例的外观","text":"前面ggplot2章节，我们知道美学映射和相应的标度函数可以同时调整图形的效果和图例的外观。但有时候，我们只想改变图例的外形，并不想影响图形的效果。本章首先介绍使用guide_legned()中的override.aes的缘由（让图例更具有可读性，或者构建某种组合图例的效果），然后给出三个应用场景。","code":"\nlibrary(tidyverse)\nlibrary(palmerpenguins)\n\npenguins <- penguins %>% \n  drop_na()"},{"path":"tidyverse-ggplot2-override-aes.html","id":"使用override.aes的缘由","chapter":"第 27 章 ggplot2之控制图例的外观","heading":"27.1 使用override.aes的缘由","text":"在画散点图的时候，我们可能会设置点的透明度和大小，比如alpha = 0.5和size = 1，这种方法在点的量很大的时候是比较有用的，但也会导致图例中的点比较淡和小，比如下图（这里点的数量不算多，只是为了演示如何修改图例而设定的参数）","code":"\npenguins %>%\n  ggplot(aes(x = bill_length_mm, y = bill_depth_mm, color = species)) +\n  geom_point(alpha = .5, size = 1)"},{"path":"tidyverse-ggplot2-override-aes.html","id":"使用guides函数","chapter":"第 27 章 ggplot2之控制图例的外观","heading":"27.1.1 使用guides()函数","text":"这个时候，为了强图例的可读性，可以让图例中点的变大以及减少透明度。guides() 函数提供了\nscale name - guide 对方便用户修改，比如我们想修改color标度对应的图例，可以这样写\nguide(color = guide_legend(override.aes = ____ ))， 这里override.aes 可接受size、shape等美学参数，然后覆盖（override）默认的图例外观。对刚才的图形，我们提供size = 3给 override.aes可以看到图例中的点，变大了。","code":"\nguides(color = guide_legend(override.aes = list(size = 3) ) )\npenguins %>%\n  ggplot(aes(x = bill_length_mm, y = bill_depth_mm, color = species)) +\n  geom_point(alpha = .5, size = 1) +\n  guides(color = guide_legend(override.aes = list(size = 3)))"},{"path":"tidyverse-ggplot2-override-aes.html","id":"使用scale_函数","chapter":"第 27 章 ggplot2之控制图例的外观","heading":"27.1.2 使用scale_*()函数","text":"R总是让一件事情，可以有好几种方法完成。上面的效果还可以在scale_*()函数里完成。比如，我们手动设置scale_color_manual()让三种企鹅分别有不同的颜色，然后把上面guide()里guide_legend()的代码复制过来","code":"\npenguins %>%\n  ggplot(aes(x = bill_length_mm, y = bill_depth_mm, color = species)) +\n  geom_point(alpha = .5, size = 1) +\n  scale_color_manual(\n    breaks = c(\"Adelie\", \"Chinstrap\", \"Gentoo\"),\n    values = c(\"darkorange\", \"purple\", \"cyan4\"),\n    guide = guide_legend(override.aes = list(size = 3))\n  )"},{"path":"tidyverse-ggplot2-override-aes.html","id":"调整多个美学参数","chapter":"第 27 章 ggplot2之控制图例的外观","heading":"27.1.3 调整多个美学参数","text":"除了传递size到override.aes，还可以传递更多参数，装到list()里打包一起就行","code":"\npenguins %>%\n  ggplot(aes(x = bill_length_mm, y = bill_depth_mm, color = species)) +\n  geom_point(alpha = .5, size = 1) +\n  scale_color_manual(\n    breaks = c(\"Adelie\", \"Chinstrap\", \"Gentoo\"),\n    values = c(\"darkorange\", \"purple\", \"cyan4\"),\n    guide = guide_legend(override.aes = list(size = 3, alpha = 1))\n  )"},{"path":"tidyverse-ggplot2-override-aes.html","id":"压缩图例中一部分美学映射","chapter":"第 27 章 ggplot2之控制图例的外观","heading":"27.2 压缩图例中一部分美学映射","text":"override.aes还有一个用途是，删除图例中一部分美学映射。比如，这里有一个数据集points，points 的id变量有3个分组，另一个数据集box，box数据框的id变量，有1个分组先画个图看看，散点图层中有3个分组(“”，“b” “c”)，因此点是三种颜色；矩形图层只有1个分组，只有一个矩形框，它的边框是颜色与散点图层的””组颜色一致。同时看到，图例外观是边框中间加一个点。矩阵图层是没有”b”和”c”组的，因此，为了与图形中匹配，我需要删除图例中”b”和”c”组的边框。\n因为图例中的边框是基于linetype的美学映射，那么要想移除图例的边框线条，可以在override.aes中设置参数line types = 0。具体方法是，这三组的line type构成一个向量linetype = c(__, __, __)，然后让需要保留的第一组为 1，让需要移除的第二和第三组为 0","code":"\npoints <- tribble(\n  ~x, ~y, ~id,\n   5, 51, \"a\",\n  10, 54, \"a\",\n   7, 50, \"a\",\n   9, 60, \"a\",\n  86, 97, \"b\",\n  46, 74, \"b\",\n  22, 59, \"b\",\n  94, 68, \"b\",\n  21, 45, \"c\",\n   6, 56, \"c\",\n  24, 25, \"c\",\n   3, 70, \"c\"\n)\nbox <- data.frame(\n  left   = 1,\n  right  = 10,\n  bottom = 50,\n  top    = 60,\n  id     = \"a\"\n)\nbox##   left right bottom top id\n## 1    1    10     50  60  a\npoints %>%\n  ggplot(aes(color = id)) +\n  geom_point(aes(x = x, y = y), size = 4) +\n  geom_rect(\n    data = box, aes(\n      xmin = left,\n      xmax = right,\n      ymin = 50,\n      ymax = top\n    ),\n    fill = NA, size = 1\n  )## Warning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\n## ℹ Please use `linewidth` instead.\n## This warning is displayed once every 8 hours.\n## Call `lifecycle::last_lifecycle_warnings()` to see where this warning was\n## generated.\npoints %>%\n  ggplot(aes(color = id)) +\n  geom_point(aes(x = x, y = y), size = 4) +\n  geom_rect(\n    data = box, aes(\n      xmin = left,\n      xmax = right,\n      ymin = 50,\n      ymax = top\n    ),\n    fill = NA, size = 1\n  ) +\n  guides(color = guide_legend(override.aes = list(linetype = c(1, 0, 0))))"},{"path":"tidyverse-ggplot2-override-aes.html","id":"组合两个图层的图例","chapter":"第 27 章 ggplot2之控制图例的外观","heading":"27.3 组合两个图层的图例","text":"我们经常在画了散点图后会增加一个拟合曲线，但为了把图中的信息说明地更清楚点，比如哪些是原始观测值，哪些是拟合直线，就需要增加一个图例。具体思路，是把一个都没用的美学属性映射成常数，这样会形成一个新的图例，然后再修改这个图例，把图例中的符号弄成想要的。接下来，我们演示选取两个图层共有的一个美学参数（不是真正使用它），然后映射到一个新图例，最后为这个新的图例赋予清晰的图例符号。","code":"\npenguins %>%\n  ggplot(aes(x = bill_length_mm, y = bill_depth_mm, color = factor(species))) +\n  geom_point(size  = 3) +\n  geom_smooth(method = \"lm\", se = FALSE)## `geom_smooth()` using formula = 'y ~ x'"},{"path":"tidyverse-ggplot2-override-aes.html","id":"借鸡下蛋","chapter":"第 27 章 ggplot2之控制图例的外观","heading":"27.3.1 借鸡下蛋","text":"我这里保留上图中color的图例，同时增加第二个图例，目的是指明图中的“点”是观测值，\n“线条”是拟合值。当我们增加一个额外的图例的时候，我们会借用图层中没有使用的美学元素，比如透明度alpha，但我们的本意不是用 alpha 影响图形外观，而是在后面会添加scale_alpha_manual()语句，并让values = c(1, 1)，两组都为1，也就说并不增加每个图层的透明度，随后可以删除图例名(legend name )，并设置breaks的顺序，让图例中 Observed 组为顺序第一个。","code":"\npenguins %>%\n  ggplot(aes(x = bill_length_mm, y = bill_depth_mm, color = factor(species))) +\n  geom_point(aes(alpha = \"Observed\"), size = 3) +\n  geom_smooth(method = \"lm\", se = FALSE, aes(alpha = \"Fitted\")) +\n  scale_alpha_manual(\n    name = NULL,\n    values = c(1, 1),\n    breaks = c(\"Observed\", \"Fitted\")\n  )## `geom_smooth()` using formula = 'y ~ x'"},{"path":"tidyverse-ggplot2-override-aes.html","id":"赋予新的图例符号","chapter":"第 27 章 ggplot2之控制图例的外观","heading":"27.3.2 赋予新的图例符号","text":"我们现在有了一个新的图例了，但是发现在这个新图例中仍然是点线的符号，因此，我们需要采用上一节的方法，重写当前的图例符号，让 Observed 只有点的符号，而 Fitted 只有线条符号当然也可以写在scale_alpha_*()里","code":"\npenguins %>%\n  ggplot(aes(x = bill_length_mm, y = bill_depth_mm, color = factor(species))) +\n  geom_point(aes(alpha = \"Observed\"), size = 3) +\n  geom_smooth(method = \"lm\", se = FALSE, aes(alpha = \"Fitted\")) +\n  scale_alpha_manual(\n    name = NULL,\n    values = c(1, 1),\n    breaks = c(\"Observed\", \"Fitted\")\n  ) +\n  guides(alpha = guide_legend(override.aes = list(\n    linetype = c(0, 1),  # 0无线条； 1有线条\n    shape = c(16, NA),   # 16点的形状； NA没有点\n    color = \"black\"\n  )))## `geom_smooth()` using formula = 'y ~ x'\npenguins %>%\n  ggplot(aes(x = bill_length_mm, y = bill_depth_mm, color = factor(species))) +\n  geom_point(aes(alpha = \"Observed\"), size = 3) +\n  geom_smooth(method = \"lm\", se = FALSE, aes(alpha = \"Fitted\")) +\n  scale_alpha_manual(\n    name = NULL,\n    values = c(1, 1),\n    breaks = c(\"Observed\", \"Fitted\"),\n    guide = guide_legend(override.aes = list(linetype = c(0, 1),  \n                                             shape = c(16, NA),   \n                                             color = \"black\"))\n  )## `geom_smooth()` using formula = 'y ~ x'"},{"path":"tidyverse-ggplot2-override-aes.html","id":"控制多个图例的外观","chapter":"第 27 章 ggplot2之控制图例的外观","heading":"27.4 控制多个图例的外观","text":"最后一个例子，是控制多个图例的外观，刚开始可能有点难以理解。下面画出了散点图，两个分类变量g1和g2分别映射到 fill 和 shape但是，我们看到图中点并没有填充颜色，这是是因为默认的点的形状是不可填充颜色的，因此，我们使用scale_shape_manual()修改点的类型。现在图中的点有了填充色，但图例 g1中没有显示每组的填充色，原因还是在于图例默认的形状也是不可填充颜色的形状。因此，我们还需要修改图例中的点的类型，让它变成可填充颜色的类型。方法同上节，在guides() 图层中使用 scale name-guide 对，然后把点的shape传递给override.aes。最后，为了更加美观，还可以修改shape图例g2的填充色为黑色。","code":"\ndat <- tibble::tribble(\n        ~g1,         ~g2,   ~x,   ~y,\n     \"High\",   \"Control\", 0.42, -1.4,\n      \"Low\",   \"Control\", 0.39,  3.6,\n     \"High\", \"Treatment\", 0.56,  1.1,\n      \"Low\", \"Treatment\", 0.59, -0.1,\n     \"High\",   \"Control\", 0.17,  0.5,\n      \"Low\",   \"Control\", 0.95,    0,\n     \"High\", \"Treatment\", 0.85, -1.8,\n      \"Low\", \"Treatment\", 0.25,  0.8,\n     \"High\",   \"Control\", 0.31, -1.1,\n      \"Low\",   \"Control\", 0.75, -0.6,\n     \"High\", \"Treatment\", 0.58,  0.2,\n      \"Low\", \"Treatment\",  0.9,  0.3,\n     \"High\",   \"Control\",  0.6,  1.1,\n      \"Low\",   \"Control\", 0.86,  1.6,\n     \"High\", \"Treatment\", 0.61,  0.9,\n      \"Low\", \"Treatment\", 0.61, -0.6\n     )\ndat %>% \n  ggplot(aes(x = x, y = y, fill = g1, shape = g2) ) +\n  geom_point(size = 5)\ndat %>% \n  ggplot(aes(x = x, y = y, fill = g1, shape = g2) ) +\n  geom_point(size = 5) +\n  scale_shape_manual(values = c(21, 24) )\ndat %>% \n  ggplot(aes(x = x, y = y, fill = g1, shape = g2) ) +\n  geom_point(size = 5) +\n  scale_shape_manual(values = c(21, 24) ) +\n  guides(fill = guide_legend(override.aes = list(shape = 21)))\ndat %>% \n  ggplot(aes(x = x, y = y, fill = g1, shape = g2) ) +\n  geom_point(size = 5) +\n  scale_shape_manual(values = c(21, 24) ) +\n  guides(fill = guide_legend(override.aes = list(shape = 21) ),\n         shape = guide_legend(override.aes = list(fill = \"black\") ) )"},{"path":"tidyverse-ggplot2-override-aes.html","id":"课后作业-1","chapter":"第 27 章 ggplot2之控制图例的外观","heading":"27.5 课后作业","text":"修改下图的图例，希望图例的点透明度为1和形状为方形的点","code":"\nmtcars %>% \n  ggplot(aes(vs, am, color = factor(cyl), fill = factor(cyl)) ) +\n  geom_jitter(alpha = 1/5, size = 2, shape = 21) "},{"path":"tidyverse-ggplot2-override-aes.html","id":"参考","chapter":"第 27 章 ggplot2之控制图例的外观","heading":"27.6 参考","text":"https://aosmith.rbind.io/2020/07/09/ggplot2-override-aes/","code":""},{"path":"tidyverse-ggplot2-aes-eval.html","id":"tidyverse-ggplot2-aes-eval","chapter":"第 28 章 ggplot2之延迟映射","heading":"第 28 章 ggplot2之延迟映射","text":"本章是翻译的ggplot的官方文档，后续我会增加一些案例绝大部分时候，数据框的变量直接映射到图形元素，然后生成图片。但也有一些时候，变量需要先做统计变换，然后再映射给图形元素，这个过程称之为延迟映射。ggplot2 把进行数据映射分成了三个阶段。第一个阶段，拿到数据之后。最初阶段，拿到用户提供的数据，映射给图形元素。第二个阶段，统计变换之后。数据完成转化或者统计计算之后，再映射给图形元素。第三个阶段，图形标度之后。数据完成标度配置之后，映射给图形元素，在最后渲染出图之前。延迟到统计变换之后的例子是，在geom_histogram()画柱状图的时候，\n柱子的高度并不直接来源用户提供的数据，而是来源于stat_bin()函数统计计算后的结果延迟到图形标度之后的例子是，geom_bar()画柱子图，定义了柱子的颜色后，想在颜色的基础上增加点透明度，作为柱子的填充色。如果不是直接使用原始数据，而是用统计变换后的数据来映射，就需要使用after_stat()函数告诉ggplot2 等到统计变换完成后再做美学映射。类似地，如果想在完成标度配置之后，再映射给图形元素，就需要使用after_scale()函数。如果多次映射图形元素，比如变量 x 先传递给统计函数，然后把统计结果映射给图形元素，就需要使用\nstage(start = NULL, after_stat = NULL, after_scale = NULL) 控制每一个过程。","code":"\nlibrary(tidyverse)\nlibrary(palmerpenguins)\n\npenguins <- penguins %>% \n  drop_na()\npenguins %>%\n  ggplot(aes(x = bill_length_mm)) +\n  geom_histogram(aes(y = after_stat(count)))## `stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n# Scale tallest bin to 1\npenguins %>%\n  ggplot(aes(x = bill_length_mm)) +\n  geom_histogram(aes(y = after_stat(count) / max(count)))## `stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\npenguins %>% \n  ggplot(aes(x = species, color = species)) +\n  geom_bar(\n    aes(fill = after_scale(alpha(color, 0.6)))\n  )\npenguins %>% \n  ggplot(aes(x = species)) +\n  geom_bar(\n    aes(fill = stage(start = species, after_scale = alpha(fill, 0.4)))\n  )"},{"path":"tidyverse-ggplot2-academic.html","id":"tidyverse-ggplot2-academic","chapter":"第 29 章 ggplot2之科研数据可视化","heading":"第 29 章 ggplot2之科研数据可视化","text":"","code":""},{"path":"tidyverse-ggplot2-academic.html","id":"统计分布图","chapter":"第 29 章 ggplot2之科研数据可视化","heading":"29.1 统计分布图","text":"在学术中，很多情形我们都需要画出统计分布图。比如，围绕天气温度数据(美国内布拉斯加州东部，林肯市， 2016年)，我们想看每个月份里气温的分布情况统计分布图的方法很多，我们下面比较各种方法的优劣。","code":"\nlincoln_df <- ggridges::lincoln_weather %>%\n  mutate(\n    month_short = fct_recode(\n      Month,\n      Jan = \"January\",\n      Feb = \"February\",\n      Mar = \"March\",\n      Apr = \"April\",\n      May = \"May\",\n      Jun = \"June\",\n      Jul = \"July\",\n      Aug = \"August\",\n      Sep = \"September\",\n      Oct = \"October\",\n      Nov = \"November\",\n      Dec = \"December\"\n    )\n  ) %>%\n  mutate(month_short = fct_rev(month_short)) %>%\n  select(Month, month_short, `Mean Temperature [F]`)\n\nlincoln_df %>%\n  head(5)## # A tibble: 5 × 3\n##   Month   month_short `Mean Temperature [F]`\n##   <fct>   <fct>                        <int>\n## 1 January Jan                             24\n## 2 January Jan                             23\n## 3 January Jan                             23\n## 4 January Jan                             17\n## 5 January Jan                             29"},{"path":"tidyverse-ggplot2-academic.html","id":"points-errorbars","chapter":"第 29 章 ggplot2之科研数据可视化","heading":"29.1.1 points-errorbars","text":"画分布图的最简单的方法，就是计算每个月的气温均值或者中位数，并在均值或者中位数位置标出误差棒(error bars)，比如图 29.1 。\n图 29.1: 林肯市2016年气温变化图\n但这个图有很多问题，或者说是错误的图中只用了一个点和两个误差棒，丢失了很多分布信息。图中只用了一个点和两个误差棒，丢失了很多分布信息。读者不能很直观的读出这个点的含义（是均值还是中位数？）读者不能很直观的读出这个点的含义（是均值还是中位数？）误差棒代表的含义不明确（标准差？标准误？还是其他？）误差棒代表的含义不明确（标准差？标准误？还是其他？）通过看代码，知道这里用的是，均值加减2倍的标准差，其目的是想表达这个范围涵盖了95%的的数据。 事实上，误差棒一般用于标准误（或者加减2倍的标准误来代表估计均值的95%置信区间），所以这里使用标准差就造成了混淆。( 标准误：对样本均值估计的不确定性; 标准差：对偏离均值的分散程度 )现实的数据往往是偏态的，但这个图的误差棒几乎是对称，会让人觉得产生怀疑。","code":"\nlincoln_errbar <- lincoln_df %>%\n  ggplot(aes(x = month_short, y = `Mean Temperature [F]`)) +\n  stat_summary(\n    fun.y = mean, fun.ymax = function(x) {\n      mean(x) + 2 * sd(x)\n    },\n    fun.ymin = function(x) {\n      mean(x) - 2 * sd(x)\n    }, geom = \"pointrange\",\n    fatten = 5\n  ) +\n  xlab(\"month\") +\n  ylab(\"mean temperature (°F)\") +\n  theme_classic(base_size = 14) +\n  theme(\n    axis.text = element_text(color = \"black\", size = 12),\n    plot.margin = margin(3, 7, 3, 1.5)\n  )## Warning: The `fun.y` argument of `stat_summary()` is deprecated as of ggplot2 3.3.0.\n## ℹ Please use the `fun` argument instead.\n## This warning is displayed once every 8 hours.\n## Call `lifecycle::last_lifecycle_warnings()` to see where this warning was\n## generated.## Warning: The `fun.ymin` argument of `stat_summary()` is deprecated as of ggplot2 3.3.0.\n## ℹ Please use the `fun.min` argument instead.\n## This warning is displayed once every 8 hours.\n## Call `lifecycle::last_lifecycle_warnings()` to see where this warning was\n## generated.## Warning: The `fun.ymax` argument of `stat_summary()` is deprecated as of ggplot2 3.3.0.\n## ℹ Please use the `fun.max` argument instead.\n## This warning is displayed once every 8 hours.\n## Call `lifecycle::last_lifecycle_warnings()` to see where this warning was\n## generated.\nlincoln_errbar"},{"path":"tidyverse-ggplot2-academic.html","id":"箱线图-2","chapter":"第 29 章 ggplot2之科研数据可视化","heading":"29.1.2 箱线图","text":"为了解决以上问题，可以使用箱线图（boxplot），箱线图将数据分成若干段，如图 29.2.\n图 29.2: 箱线图示意图\n盒子中间的横线是中位数(50th percentile)，底部的横线代表第一分位数(25th\npercentile)，顶部的横线代表第三分位数(75th percentile)盒子的范围覆盖了50%的数据，每个小盒子是25%的数据，盒子高度越短，\n说明数据越集中，盒子高度越长，数据越分散。上面的这条竖线的长度 = 从盒子上边缘开始，延伸到1.5倍盒子高度的范围中最远的点下面的这条竖线的长度 = 从盒子下边缘开始，延伸到1.5倍盒子高度的范围中最远的点在线条之外的点就是 outlies那么气温分布用箱线图画出来 (图 29.3)。 我们可以看到12月份数据\n偏态（绝大部分时候中等的冷，少部分是极度寒冷），其他月份，比如7月份，数据分布的比较正态\n图 29.3: 林肯市2016年气温分布箱线图\n","code":"\nlincoln_box <- lincoln_df %>%\n  ggplot(aes(x = month_short, y = `Mean Temperature [F]`)) +\n  geom_boxplot(fill = \"grey90\") +\n  xlab(\"month\") +\n  ylab(\"mean temperature (°F)\") +\n  theme_classic(base_size = 14) +\n  theme(\n    axis.text = element_text(color = \"black\", size = 12),\n    plot.margin = margin(3, 7, 3, 1.5)\n  )\n\nlincoln_box"},{"path":"tidyverse-ggplot2-academic.html","id":"小提琴图","chapter":"第 29 章 ggplot2之科研数据可视化","heading":"29.1.3 小提琴图","text":"箱线图是1970年代统计学家发明的一种可视化方法，这种图可以很方便地用手工画出，所以当时很流行，现在计算机性能大大提升了，所以大家喜欢用视觉上更直观的小提琴图取代箱线图\n图 29.4: 小提琴图示意图\n小提琴图相当于密度分布图旋转90度，然后再做个对称的镜像最宽或者最厚的地方，对应着数据密度最大的地方箱线图能用的地方小提琴图都能用，而且小提琴图可以很好的展示bimodal data的情况（箱线图做不到）\n图 29.5: 图片来源：nature methods, VOL.11, .2, FEBRUARY 2014\n在图 29.6， 我们使用小提琴图画图气温分布，可以看到，11月份的时候，有两个高密度区间（两个峰，50 degrees 和 35 degrees Fahrenheit），注意，这个信息在前面两个图中是没有的。\n图 29.6: 林肯市2016年气温分布小提琴图\n事实上，小提琴图也是不完美的，用的是密度分布图，会造成没有数据点的地方，也会有分布。怎么解决呢？","code":"\nlincoln_violin <- lincoln_df %>%\n  ggplot(aes(x = month_short, y = `Mean Temperature [F]`)) +\n  geom_violin(fill = \"grey90\") +\n  xlab(\"month\") +\n  ylab(\"mean temperature (°F)\") +\n  theme_classic(base_size = 14) +\n  theme(\n    axis.text = element_text(color = \"black\", size = 12),\n    plot.margin = margin(3, 7, 3, 1.5)\n  )\n\nlincoln_violin"},{"path":"tidyverse-ggplot2-academic.html","id":"sina-图","chapter":"第 29 章 ggplot2之科研数据可视化","heading":"29.1.4 sina 图","text":"解决办法就是，把原始数据点打上去，\n图 29.7: 林肯市2016年气温分布散点图\n但问题又来了，这样会有大量重叠的点。有时候会采用透明度的办法，即给每个点设置透明度，某个位置颜色越深，说明这个位置重叠的越多。当然，最好的办法是，给每个点增加一个随机的很小的“偏移”，即抖散图。\n图 29.8: 林肯市2016年气温分布抖散图\n于是，（小提琴图 + 抖散图）= sina 图，这样既可以看到原始的点，又可以看到统计分布，见图 29.9.\n图 29.9: 林肯市2016年气温分布 sina 图\n","code":"\nlincoln_points <- lincoln_df %>%\n  ggplot(aes(x = month_short, y = `Mean Temperature [F]`)) +\n  geom_point(size = 0.75) +\n  xlab(\"month\") +\n  ylab(\"mean temperature (°F)\") +\n  theme_classic(base_size = 14) +\n  theme(\n    axis.text = element_text(color = \"black\", size = 12),\n    plot.margin = margin(3, 7, 3, 1.5)\n  )\n\nlincoln_points\nlincoln_jitter <- lincoln_df %>%\n  ggplot(aes(x = month_short, y = `Mean Temperature [F]`)) +\n  geom_point(position = position_jitter(width = .15, height = 0, seed = 320), size = 0.75) +\n  xlab(\"month\") +\n  ylab(\"mean temperature (°F)\") +\n  theme_classic(base_size = 14) +\n  theme(\n    axis.text = element_text(\n      color = \"black\",\n      size = 12\n    ),\n    plot.margin = margin(3, 7, 3, 1.5)\n  )\n\nlincoln_jitter\nlincoln_sina <- lincoln_df %>%\n  ggplot(aes(x = month_short, y = `Mean Temperature [F]`)) +\n  geom_violin(color = \"transparent\", fill = \"gray90\") +\n  # dviz.supp::stat_sina(size = 0.85) +\n  geom_jitter(width = 0.25, size = 0.85) +\n  xlab(\"month\") +\n  ylab(\"mean temperature (°F)\") +\n  theme_classic(base_size = 14) +\n  theme(\n    axis.text = element_text(\n      color = \"black\",\n      size = 12\n    ),\n    plot.margin = margin(3, 7, 3, 1.5)\n  )\n\nlincoln_sina"},{"path":"tidyverse-ggplot2-academic.html","id":"山峦图-1","chapter":"第 29 章 ggplot2之科研数据可视化","heading":"29.1.5 山峦图","text":"前面的图，分组变量（月份）是顺着x轴，这里介绍的山峦图（重山叠叠的感觉）分组变量是顺着y轴，这种图，在画不同时间的分布图的时候，效果非常不错。 比如图 29.10， 展示气温分布的山峦图。同样，图中很直观地展示了11月份的气温分布有两个峰值。\n图 29.10: 林肯市2016年气温分布山峦图\n但这种图，也有一个问题，y轴是分组变量，x轴是数据的密度分布，缺少了密度分布的标度（即，缺少了密度图的高度，事实上，小提琴图也有这个毛病），所以这种图不适合比较精确的密度分布展示，但在探索性分析中，比较不同分组的密度分布，可以很方便获取直观的认知感受。","code":"\nbandwidth <- 3.4\n\nlincoln_df %>%\n  ggplot(aes(x = `Mean Temperature [F]`, y = `Month`)) +\n  geom_density_ridges(\n    scale = 3, rel_min_height = 0.01,\n    bandwidth = bandwidth, fill = colorspace::lighten(\"#56B4E9\", .3), color = \"white\"\n  ) +\n  scale_x_continuous(\n    name = \"mean temperature (°F)\",\n    expand = c(0, 0), breaks = c(0, 25, 50, 75)\n  ) +\n  scale_y_discrete(name = NULL, expand = c(0, .2, 0, 2.6)) +\n  theme_minimal(base_size = 14) +\n  theme(\n    axis.text = element_text(color = \"black\", size = 12),\n    axis.text.y = element_text(vjust = 0),\n    plot.margin = margin(3, 7, 3, 1.5)\n  )"},{"path":"tidyverse-ggplot2-academic.html","id":"有颜色山峦图","chapter":"第 29 章 ggplot2之科研数据可视化","heading":"29.1.6 有颜色山峦图","text":"我们看到温度值越高，x轴坐标越靠右；温度值越高，颜色更亮；因此，可以将气温变量映射到位置属性和颜色属性，见图 29.11\n图 29.11: 林肯市2016年气温分布山峦图（颜色越亮，温度越高）\n","code":"\nbandwidth <- 3.4\n\nlincoln_base <- lincoln_weather %>%\n  ggplot(aes(x = `Mean Temperature [F]`, y = `Month`, fill = ..x..)) +\n  geom_density_ridges_gradient(\n    scale = 3, rel_min_height = 0.01, bandwidth = bandwidth,\n    color = \"black\", size = 0.25\n  ) +\n  scale_x_continuous(\n    name = \"mean temperature (°F)\",\n    expand = c(0, 0), breaks = c(0, 25, 50, 75), labels = NULL\n  ) +\n  scale_y_discrete(name = NULL, expand = c(0, .2, 0, 2.6)) +\n  colorspace::scale_fill_continuous_sequential(\n    palette = \"Heat\",\n    l1 = 20, l2 = 100, c2 = 0,\n    rev = FALSE\n  ) +\n  guides(fill = \"none\") +\n  theme_minimal(base_size = 14) +\n  theme(\n    axis.text = element_text(color = \"black\", size = 12),\n    axis.text.y = element_text(vjust = 0),\n    plot.margin = margin(3, 7, 3, 1.5)\n  )\n\n\n# x axis labels\ntemps <- data.frame(temp = c(0, 25, 50, 75))\n\n# calculate corrected color ranges\n# stat_joy uses the +/- 3*bandwidth calculation internally\ntmin <- min(lincoln_weather$`Mean Temperature [F]`) - 3 * bandwidth\ntmax <- max(lincoln_weather$`Mean Temperature [F]`) + 3 * bandwidth\n\nxax <- axis_canvas(lincoln_base, axis = \"x\", ylim = c(0, 2)) +\n  geom_ridgeline_gradient(\n    data = data.frame(temp = seq(tmin, tmax, length.out = 100)),\n    aes(x = temp, y = 1.1, height = .9, fill = temp),\n    color = \"transparent\"\n  ) +\n  geom_text(\n    data = temps, aes(x = temp, label = temp),\n    color = \"black\", \n    y = 0.9, hjust = 0.5, vjust = 1, size = 14 / .pt\n  ) +\n  colorspace::scale_fill_continuous_sequential(\n    palette = \"Heat\",\n    l1 = 20, l2 = 100, c2 = 0,\n    rev = FALSE\n  )## Warning: The dot-dot notation (`..x..`) was deprecated in ggplot2 3.4.0.\n## ℹ Please use `after_stat(x)` instead.\n## This warning is displayed once every 8 hours.\n## Call `lifecycle::last_lifecycle_warnings()` to see where this warning was\n## generated.\nlincoln_final <- cowplot::insert_xaxis_grob(lincoln_base, xax, position = \"bottom\", height = unit(0.1, \"null\"))\n\nggdraw(lincoln_final)"},{"path":"tidyverse-ggplot2-academic.html","id":"简单回顾-1","chapter":"第 29 章 ggplot2之科研数据可视化","heading":"29.2 简单回顾","text":"","code":""},{"path":"tidyverse-ggplot2-academic.html","id":"说明","chapter":"第 29 章 ggplot2之科研数据可视化","heading":"29.3 说明","text":"本章的数据和代码来源于《Fundamentals Data Visualization》的第9章和第20章。感谢Claus O. Wilke为大家写了这本非常好的书。","code":""},{"path":"tidyverse-ggplot2-gganimate.html","id":"tidyverse-ggplot2-gganimate","chapter":"第 30 章 ggplot2之让你的数据动起来","heading":"第 30 章 ggplot2之让你的数据动起来","text":"这节课，我们讲如何让我们的图动起来。（因为渲染需要花费很长时间，所以文档中的动图代码都没有执行。）","code":""},{"path":"tidyverse-ggplot2-gganimate.html","id":"为什么要使用动图","chapter":"第 30 章 ggplot2之让你的数据动起来","heading":"30.1 为什么要使用动图","text":"改进了图形在时间上和空间上的重新定位传递更多信息引人注意","code":""},{"path":"tidyverse-ggplot2-gganimate.html","id":"gganimate宏包","chapter":"第 30 章 ggplot2之让你的数据动起来","heading":"30.2 gganimate宏包","text":"动图可以将其理解为多张静态图堆在一起，当然不是随意的堆放，而是按照一定的规则，比如按照时间的顺序，或者类别的顺序。一般而言，动图制作包括两个步骤: 静态图制作及图形组装。静态图制作，前面几章我们讲过主要用ggplot2宏包实现；对于图形组装，需要用到今天我们要讲Thomas Lin Pedersen的gganimate宏包，来自同一工厂的产品，用起来自然是无缝衔接啦。","code":"\ninstall.packages(\"gganimate\")"},{"path":"tidyverse-ggplot2-gganimate.html","id":"先来一张静态图","chapter":"第 30 章 ggplot2之让你的数据动起来","heading":"30.2.1 先来一张静态图","text":"让它动起来，我们只需要增加一行代码！","code":"\nlibrary(tidyverse)\nlibrary(covdata) # remotes::install_github(\"kjhealy/covdata\")\nlibrary(gganimate)\ncovdata::covnat %>%\n  dplyr::filter(iso3 == \"USA\") %>%\n  dplyr::filter(cu_cases > 0) %>%\n  ggplot(aes(x = date, y = cases)) +\n  geom_path() +\n  labs(\n    title = \"美国新冠肺炎累积确诊病例\",\n    subtitle = \"数据来源https://kjhealy.github.io/covdata/\"\n  )\ncovdata::covnat %>%\n  dplyr::filter(iso3 == \"USA\") %>%\n  dplyr::filter(cu_cases > 0) %>%\n  ggplot(aes(x = date, y = cases)) +\n  geom_path() +\n  labs(\n    title = \"美国新冠肺炎累积确诊病例 {frame_along}\",\n    subtitle = \"数据来源https://kjhealy.github.io/covdata/\"\n  ) +\n  transition_reveal(along = date)"},{"path":"tidyverse-ggplot2-gganimate.html","id":"相对复杂点的例子","chapter":"第 30 章 ggplot2之让你的数据动起来","heading":"30.2.2 相对复杂点的例子","text":"用分面展示可以用动图展示是不是很炫酷，下面我们就一个个讲解其中的函数。","code":"\nlibrary(datasauRus)\nggplot(datasaurus_dozen) +\n  aes(x, y, color = dataset) +\n  geom_point()\nggplot(datasaurus_dozen) +\n  aes(x, y, color = dataset) +\n  geom_point() +\n  facet_wrap(~dataset)\nggplot(datasaurus_dozen) +\n  aes(x, y, color = dataset) +\n  geom_point() +\n  transition_states(dataset, 3, 1) + # <<\n  labs(title = \"Dataset: {closest_state}\")"},{"path":"tidyverse-ggplot2-gganimate.html","id":"the-grammar-of-animation","chapter":"第 30 章 ggplot2之让你的数据动起来","heading":"30.3 The grammar of animation","text":"使用gganimate做动画，只需要掌握以下五类函数：transition_*(): 定义动画是根据哪个变量进行”动”，以及如何”动”view_*(): 定义坐标轴随数据变化.shadow_*(): 影子（旧数据的历史记忆）?定义点相继出现的方式.enter_*()/exit_*(): 定义新数据出现和旧数据退去的方式.ease_aes(): 美观定义，控制变化的节奏(如何让整个动画看起来更舒适).下面通过案例依次讲解这些函数功能。","code":""},{"path":"tidyverse-ggplot2-gganimate.html","id":"希望动画随哪个变量动起来","chapter":"第 30 章 ggplot2之让你的数据动起来","heading":"30.4 希望动画随哪个变量动起来","text":"变量如何选择，这需要从变量类型和变量代表的信息来确定。","code":""},{"path":"tidyverse-ggplot2-gganimate.html","id":"transition_states","chapter":"第 30 章 ggplot2之让你的数据动起来","heading":"30.4.1 transition_states","text":"transition_states(states = ), 这里的参数states往往带有分组信息，可以等价于静态图中的分面。","code":"\ndiamonds %>%\n  ggplot(aes(carat, price)) +\n  geom_point()\ndiamonds %>%\n  ggplot(aes(carat, price)) +\n  geom_point() +\n  facet_wrap(vars(color))\ndiamonds %>%\n  ggplot(aes(carat, price)) +\n  geom_point() +\n  transition_states(states = color, transition_length = 3, state_length = 1)"},{"path":"tidyverse-ggplot2-gganimate.html","id":"transition_time","chapter":"第 30 章 ggplot2之让你的数据动起来","heading":"30.4.2 transition_time","text":"transition_time(time = ), 这里的time一般认为是连续的值，相比于transition_states，没有了transtion_length这个选项，是因为transtion_length默认为time. 事实上，transition_time是transition_states的一种特例，但其实也有分组的要求","code":"\nlibrary(ggplot2)\nlibrary(gganimate)\nlibrary(gapminder)\n\nplot <- ggplot(gapminder, aes(gdpPercap, lifeExp, size = pop, color = country)) +\n  geom_point(alpha = 0.7, show.legend = FALSE) +\n  scale_colour_manual(values = gapminder::country_colors) +\n  scale_size(range = c(2, 12)) +\n  scale_x_log10() +\n  facet_wrap(vars(continent)) +\n  labs(title = \"Year: {frame_time}\", x = \"GDP Per capita\", y = \"life expectancy\") +\n  transition_time(year) +\n  ease_aes(\"linear\")\nplot\n# save as a GIF\n# animate(plot, fps = 30, width = 750, height = 750)\n# anim_save(\"gapminder.gif\")\np <- gapminder::gapminder %>%\n  ggplot(aes(x = gdpPercap, y = lifeExp, size = pop, colour = country)) +\n  geom_point(alpha = 0.7, show.legend = FALSE) +\n  scale_size(range = c(2, 12)) +\n  scale_x_log10() +\n  labs(\n    x = \"GDP per capita\",\n    y = \"life expectancy\"\n  )\np\nanim <- p +\n  transition_time(time = year) +\n  labs(title = \"year: {frame_time}\")\nanim"},{"path":"tidyverse-ggplot2-gganimate.html","id":"transition_reveal","chapter":"第 30 章 ggplot2之让你的数据动起来","heading":"30.4.3 transition_reveal","text":"transition_reveal(along =  ), along 这个词可以看出，它是按照某个变量依次显示的意思，比如顺着x轴显示","code":"\nggplot(data = economics) +\n  aes(x = date, y = unemploy) +\n  geom_line()\nggplot(economics) +\n  aes(x = date, y = unemploy) +\n  geom_line() +\n  transition_reveal(along = date) +\n  labs(title = \"now is {frame_along}\")"},{"path":"tidyverse-ggplot2-gganimate.html","id":"transition_filter","chapter":"第 30 章 ggplot2之让你的数据动起来","heading":"30.4.4 transition_filter","text":"transition_filter( 至少2个筛选条件，transition_length = ,   filter_length =), 动图将会在这些筛选条件对应的子图之间转换","code":"\ndiamonds %>%\n  ggplot(aes(carat, price)) +\n  geom_point() +\n  transition_filter(\n    transition_length = 3,\n    filter_length = 1,\n\n    cut == \"Ideal\",\n    Deep = depth >= 60\n  )"},{"path":"tidyverse-ggplot2-gganimate.html","id":"transition_layers","chapter":"第 30 章 ggplot2之让你的数据动起来","heading":"30.4.5 transition_layers","text":"transition_layers(): 依次显示每个图层","code":"\nmtcars %>%\n  ggplot(aes(mpg, disp)) +\n  geom_point() +\n  geom_smooth(colour = \"grey\", se = FALSE) +\n  geom_smooth(aes(colour = factor(gear))) +\n  transition_layers(\n    layer_length = 1, transition_length = 2,\n    from_blank = FALSE, keep_layers = c(Inf, 0, 0)\n  ) +\n  enter_fade() +\n  exit_fade()"},{"path":"tidyverse-ggplot2-gganimate.html","id":"其他","chapter":"第 30 章 ggplot2之让你的数据动起来","heading":"30.4.6 其他","text":"transition_manual()transition_components()transition_events()","code":""},{"path":"tidyverse-ggplot2-gganimate.html","id":"希望坐标轴随数据动起来","chapter":"第 30 章 ggplot2之让你的数据动起来","heading":"30.5 希望坐标轴随数据动起来","text":"动画过程中，绘图窗口怎么变化呢？","code":""},{"path":"tidyverse-ggplot2-gganimate.html","id":"view_follow","chapter":"第 30 章 ggplot2之让你的数据动起来","heading":"30.5.1 view_follow","text":"","code":"\nggplot(iris, aes(Sepal.Length, Sepal.Width)) +\n  geom_point() +\n  labs(title = \"{closest_state}\") +\n  transition_states(Species, transition_length = 4, state_length = 1) +\n  view_follow()"},{"path":"tidyverse-ggplot2-gganimate.html","id":"其它","chapter":"第 30 章 ggplot2之让你的数据动起来","heading":"30.5.2 其它","text":"view_step()view_step_manual()view_zoom()view_zoom_manual()","code":""},{"path":"tidyverse-ggplot2-gganimate.html","id":"希望动画有个记忆","chapter":"第 30 章 ggplot2之让你的数据动起来","heading":"30.6 希望动画有个记忆","text":"shadow_wake(wake_length =,  ) 旧数据消退时，制造点小小的尾迹的效果（wake除了叫醒，还有尾迹的意思，合起来就是记忆_尾迹）shadow_trail(distance = 0.05) 旧数据消退时，制造面包屑一样的残留痕迹（记忆_零星残留）shadow_mark(past = TRUE, future = FALSE) 将旧数据和新数据当作背景（记忆_标记）","code":""},{"path":"tidyverse-ggplot2-gganimate.html","id":"shadow_wake","chapter":"第 30 章 ggplot2之让你的数据动起来","heading":"30.6.1 shadow_wake()","text":"","code":"\np +\n  transition_time(time = year) +\n  labs(title = \"year: {frame_time}\") +\n  shadow_wake(wake_length = 0.1, alpha = FALSE)\nggplot(iris, aes(Petal.Length, Sepal.Length)) +\n  geom_point(size = 2) +\n  labs(title = \"{closest_state}\") +\n  transition_states(Species, transition_length = 4, state_length = 1) +\n  shadow_wake(wake_length = 0.1)"},{"path":"tidyverse-ggplot2-gganimate.html","id":"shadow_trail","chapter":"第 30 章 ggplot2之让你的数据动起来","heading":"30.6.2 shadow_trail()","text":"","code":"\np +\n  transition_time(time = year) +\n  labs(title = \"year: {frame_time}\") +\n  shadow_trail(distance = 0.1)\nggplot(iris, aes(Petal.Length, Sepal.Length)) +\n  geom_point(size = 2) +\n  labs(title = \"{closest_state}\") +\n  transition_states(Species, transition_length = 4, state_length = 1) +\n  shadow_trail(distance = 0.1)"},{"path":"tidyverse-ggplot2-gganimate.html","id":"shadow_mark","chapter":"第 30 章 ggplot2之让你的数据动起来","heading":"30.6.3 shadow_mark()","text":"","code":"\np +\n  transition_time(time = year) +\n  labs(title = \"year: {frame_time}\") +\n  shadow_mark(alpha = 0.3, size = 0.5)\nggplot(airquality, aes(Day, Temp)) +\n  geom_line(color = \"red\", size = 1) +\n  transition_time(Month) +\n  shadow_mark(colour = \"black\", size = 0.75)"},{"path":"tidyverse-ggplot2-gganimate.html","id":"定义新数据出现和旧数据退去的方式","chapter":"第 30 章 ggplot2之让你的数据动起来","heading":"30.7 定义新数据出现和旧数据退去的方式","text":"出现和退去的函数是成对的","code":""},{"path":"tidyverse-ggplot2-gganimate.html","id":"enterexit_fade","chapter":"第 30 章 ggplot2之让你的数据动起来","heading":"30.7.1 enter/exit_fade()","text":"透明度上的变化，我这里用柱状图展示，效果要明显一点。","code":"\ntibble(\n  x = month.name,\n  y = sample.int(12)\n) %>%\n  ggplot(aes(x = x, y = y)) +\n  geom_col() +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1, vjust = 1)) +\n  transition_states(states = month.name)\ntibble(\n  x = month.name,\n  y = sample.int(12)\n) %>%\n  ggplot(aes(x = x, y = y)) +\n  geom_col() +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1, vjust = 1)) +\n  transition_states(states = month.name) +\n  shadow_mark(past = TRUE) +\n  enter_fade()\np +\n  transition_time(time = year) +\n  labs(title = \"year: {frame_time}\") +\n  enter_fade()"},{"path":"tidyverse-ggplot2-gganimate.html","id":"enter_growexit_shrink","chapter":"第 30 章 ggplot2之让你的数据动起来","heading":"30.7.2 enter_grow()/exit_shrink()","text":"大小上的变化","code":"\ntibble(\n  x = month.name,\n  y = sample.int(12)\n) %>%\n  ggplot(aes(x = x, y = y)) +\n  geom_col() +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1, vjust = 1)) +\n  transition_states(states = month.name) +\n  shadow_mark(past = TRUE) +\n  enter_grow()\np +\n  transition_time(time = year) +\n  labs(title = \"year: {frame_time}\") +\n  enter_grow() +\n  enter_fade()"},{"path":"tidyverse-ggplot2-gganimate.html","id":"控制变化的节奏","chapter":"第 30 章 ggplot2之让你的数据动起来","heading":"30.8 控制变化的节奏","text":"控制数据点变化的快慢Source: https://easings.net/看下面的案例：","code":"p + ease_aes({aesthetic} = {ease})\np + ease_aes(x = \"cubic\")\nknitr::include_graphics(\"images/ease.png\")\ndiamonds %>%\n  ggplot(aes(carat, price)) +\n  geom_point() +\n  transition_states(color, transition_length = 3, state_length = 1) +\n  ease_aes(\"cubic-in\") # Change easing of all aesthetics\ndiamonds %>%\n  ggplot(aes(carat, price)) +\n  geom_point() +\n  transition_states(color, transition_length = 3, state_length = 1) +\n  ease_aes(x = \"elastic-in\") # Only change `x` (others remain “linear”)"},{"path":"tidyverse-ggplot2-gganimate.html","id":"标签-1","chapter":"第 30 章 ggplot2之让你的数据动起来","heading":"30.9 标签","text":"我们可能需要在标题中加入每张动画的信息，常用罗列如下","code":"\ntransition_states(states = ) +\n  labs(title = \"previous is {previous_state}, \n                current is {closest_state}, \n                next is {next_state}\")\n\ntransition_layers() +\n  labs(title = \"previous is {previous_layers}, \n                current is {closest_layers}, \n                next is {next_layers}\")\n\ntransition_time(time = ) +\n  labs(title = \"now is {frame_time}\")\n\n\ntransition_reveal(along = ) +\n  labs(title = \"now is {frame_along}\")"},{"path":"tidyverse-ggplot2-gganimate.html","id":"保存","chapter":"第 30 章 ggplot2之让你的数据动起来","heading":"30.10 保存","text":"","code":""},{"path":"tidyverse-ggplot2-gganimate.html","id":"renderer-options","chapter":"第 30 章 ggplot2之让你的数据动起来","heading":"30.10.1 Renderer options","text":"","code":"## # A tibble: 6 × 2\n##   Function        Description                                          \n##   <chr>           <chr>                                                \n## 1 gifski_renderer Default, super fast gif renderer.                    \n## 2 magick_renderer Somewhat slower gif renderer.                        \n## 3 ffmpeg_renderer Uses ffmpeg to create a video from the animation.    \n## 4 av_renderer     Uses the av package to create a video (using ffmpeg).\n## 5 file_renderer   Dumps a list of image frames from the animation.     \n## 6 sprite_renderer Creates a spritesheet from frames of the animation."},{"path":"tidyverse-ggplot2-gganimate.html","id":"常用方法","chapter":"第 30 章 ggplot2之让你的数据动起来","heading":"30.10.2 常用方法","text":"一般用anim_save()保存为 gif 格式，方法类似ggsave()","code":"\nanimation_to_save <- diamonds %>%\n  ggplot(aes(carat, price)) +\n  geom_point() +\n  transition_states(color, transition_length = 3, state_length = 1) +\n  ease_aes(\"cubic-in\")\n\nanim_save(\"first_saved_animation.gif\", animation = animation_to_save)"},{"path":"tidyverse-ggplot2-gganimate.html","id":"案例演示一","chapter":"第 30 章 ggplot2之让你的数据动起来","heading":"30.11 案例演示一","text":"这是网上有段时间比较火的racing_bar图","code":"\nranked_by_date <- covdata::covnat %>%\n  group_by(date) %>%\n  arrange(date, desc(cu_cases)) %>%\n  mutate(rank = 1:n()) %>%\n  filter(rank <= 10) %>%\n  ungroup()\nranked_by_date %>%\n  filter(date >= \"2020-05-01\") %>%\n  ggplot(\n    aes(x = rank, y = cname, group = cname, fill = cname)\n  ) +\n  geom_tile(\n    aes(\n      y = cu_cases / 2,\n      height = cu_cases,\n      width = 0.9\n    ),\n    alpha = 0.8,\n    show.legend = F\n  ) +\n  geom_text(aes(\n    y = cu_cases,\n    label = cname\n  ),\n  show.legend = FALSE\n  ) +\n  scale_x_reverse(\n    breaks = c(1:10),\n    label = c(1:10)\n  ) +\n  theme_minimal() +\n  coord_flip(clip = \"off\", expand = FALSE) +\n  labs(\n    title = \"日期: {closest_state}\",\n    x = \"\",\n    caption = \"Source: github/kjhealy/covdata\"\n  ) +\n  transition_states(date,\n    transition_length = 4,\n    state_length = 1,\n    wrap = TRUE\n  ) +\n  ease_aes(\"cubic-in-out\")"},{"path":"tidyverse-ggplot2-gganimate.html","id":"案例演示二","chapter":"第 30 章 ggplot2之让你的数据动起来","heading":"30.12 案例演示二","text":"","code":"\nbats <- readr::read_csv(\"./demo_data/bats-subset.csv\") %>%\n  dplyr::mutate(id = factor(id))\nbats %>%\n  ggplot(aes(\n    x = longitude,\n    y = latitude,\n    group = id,\n    color = id\n  )) +\n  geom_point()"},{"path":"tidyverse-ggplot2-gganimate.html","id":"常规的方法","chapter":"第 30 章 ggplot2之让你的数据动起来","heading":"30.12.1 常规的方法","text":"geom_path()是按照数据点出现的先后顺序geom_line()是按照数据点在x轴的顺序","code":"\nbats %>%\n  ggplot(aes(\n    x = longitude,\n    y = latitude,\n    group = id,\n    color = id\n  )) +\n  geom_point() +\n  transition_time(time) +\n  shadow_mark(past = TRUE)\nbats %>%\n  ggplot(aes(\n    x = longitude,\n    y = latitude,\n    group = id,\n    color = id\n  )) +\n  geom_path() +\n  transition_time(time) +\n  shadow_mark(past = TRUE)"},{"path":"tidyverse-ggplot2-gganimate.html","id":"炫酷点的","chapter":"第 30 章 ggplot2之让你的数据动起来","heading":"30.12.2 炫酷点的","text":"","code":"\nbats %>%\n  dplyr::mutate(\n    image = \"images/bat-cartoon.png\"\n  ) %>%\n  ggplot(aes(\n    x = longitude,\n    y = latitude,\n    group = id,\n    color = id\n  )) +\n  geom_path() +\n  ggimage::geom_image(aes(image = image), size = 0.1) +\n  transition_reveal(time)"},{"path":"tidyverse-ggplot2-gganimate.html","id":"案例演示三","chapter":"第 30 章 ggplot2之让你的数据动起来","heading":"30.13 案例演示三","text":"全球R-Ladies组织，会议活动的情况，我们在地图上用动图展示这里需要一个地图，可以这样当然，最好是这样然后把点打上去用动图展示（这种方法常用在流行病传播的展示上）","code":"\nrladies <- read_csv(\"./demo_data/rladies.csv\")\nrladies\nggplot() +\n  ggplot2::borders(\"world\", colour = \"gray85\", fill = \"gray80\") +\n  ggthemes::theme_map()\nlibrary(maps)\nworld <- map_data(\"world\") \n\nworld_map <- ggplot() +\n  geom_polygon(data = world, \n               aes(x = long, y = lat, group = group),\n               color = \"white\", fill = \"gray80\"\n               ) +\n  ggthemes::theme_map()\n\nworld_map \nworld_map +\n  geom_point(\n    data = rladies,\n    aes(x = lon, y = lat, size = followers),\n    colour = \"purple\", alpha = .5\n  ) +\n  scale_size_continuous(\n    range = c(1, 8),\n    breaks = c(250, 500, 750, 1000)\n  ) +\n  labs(size = \"Followers\")\nworld_map +\n  geom_point(aes(x = lon, y = lat, size = followers),\n    data = rladies,\n    colour = \"purple\", alpha = .5\n  ) +\n  scale_size_continuous(\n    range = c(1, 8),\n    breaks = c(250, 500, 750, 1000)\n  ) +\n  transition_states(created_at) +\n  shadow_mark(past = TRUE) +\n  labs(title = \"Day: {closest_state}\")"},{"path":"tidyverse-ggplot2-gganimate.html","id":"课后作业-2","chapter":"第 30 章 ggplot2之让你的数据动起来","heading":"30.14 课后作业","text":"","code":""},{"path":"tidyverse-ggplot2-gganimate.html","id":"作业1","chapter":"第 30 章 ggplot2之让你的数据动起来","heading":"30.14.1 作业1","text":"把下图弄成你喜欢的样子","code":"\nlibrary(gapminder)\ntheme_set(theme_bw())\n\nggplot(gapminder) +\n  aes(\n    x = gdpPercap, y = lifeExp,\n    size = pop, colour = country\n  ) +\n  geom_point(show.legend = FALSE) +\n  scale_x_log10() +\n  scale_color_viridis_d() +\n  scale_size(range = c(2, 12)) +\n  labs(x = \"GDP per capita\", y = \"Life expectancy\") +\n  transition_time(year) +\n  labs(title = \"Year: {frame_time}\")"},{"path":"tidyverse-ggplot2-gganimate.html","id":"作业2","chapter":"第 30 章 ggplot2之让你的数据动起来","heading":"30.14.2 作业2","text":"那请说说这以下三个的区别？","code":"\nbats %>%\n  dplyr::filter(id == 1) %>%\n  ggplot(\n    aes(\n      x = longitude,\n      y = latitude\n    )\n  ) +\n  geom_point() +\n  transition_reveal(time) # <<\n\n\n\nbats %>%\n  dplyr::filter(id == 1) %>%\n  ggplot(\n    aes(\n      x = longitude,\n      y = latitude\n    )\n  ) +\n  geom_point() +\n  transition_states(time) # <<\n\n\n\nbats %>%\n  dplyr::filter(id == 1) %>%\n  ggplot(\n    aes(\n      x = longitude,\n      y = latitude\n    )\n  ) +\n  geom_point() +\n  transition_time(time) # <<"},{"path":"tidyverse-ggplot2-pass-function-as-parameters.html","id":"tidyverse-ggplot2-pass-function-as-parameters","chapter":"第 31 章 ggplot2中传递函数作为参数值","heading":"第 31 章 ggplot2中传递函数作为参数值","text":"本章汇总ggplot2中常见的参数值是一个函数的情形。","code":"\nlibrary(tidyverse)\nlibrary(palmerpenguins)\n\npenguins <- penguins %>% drop_na()\n\npenguins %>% \n  ggplot(aes(x = bill_length_mm, y = bill_depth_mm)) +\n  geom_point()"},{"path":"tidyverse-ggplot2-pass-function-as-parameters.html","id":"data可以是一个函数","chapter":"第 31 章 ggplot2中传递函数作为参数值","heading":"31.1 data可以是一个函数","text":"图层中的data可以是一个函数，它继承全局声明中的data作为函数的参数","code":"\ndata.frame(\n  x = rnorm(100),\n  y = rnorm(100)\n) %>%\n  ggplot(aes(x, y)) +\n  geom_point() +\n  geom_label(\n    data = function(d) d %>% summarise(cor = cor(x, y)),\n    aes(x = 1, y = 1.5, label = paste0(\"cor:\", signif(cor, 3)))\n  )\npenguins %>% \n  ggplot(aes(x = bill_length_mm, y = bill_depth_mm)) +\n  geom_point(data = ~ select(., -species), color = \"gray80\") +\n  geom_point(aes(color = species)) +\n  facet_wrap(vars(species))\nsummary_df <- function(df) {\n  df %>%\n    group_by(sex) %>%\n    summarise(\n      mean = mean(body_mass_g)\n    )\n}\n\n\npenguins %>%\n  ggplot(aes(x = sex, y = body_mass_g)) +\n  geom_jitter() +\n  geom_point(\n    data = summary_df,\n    aes(y = mean), color = \"red\", size = 5\n  )"},{"path":"tidyverse-ggplot2-pass-function-as-parameters.html","id":"标度-scale_-中的参数可以接受函数作为参数值","chapter":"第 31 章 ggplot2中传递函数作为参数值","heading":"31.2 标度 scale_**() 中的参数可以接受函数作为参数值","text":"","code":"- breaks\n- minor_breaks\n- labels\n- limits\n- oob\n "},{"path":"tidyverse-ggplot2-pass-function-as-parameters.html","id":"limits","chapter":"第 31 章 ggplot2中传递函数作为参数值","heading":"31.2.1 limits","text":"one :limits = NULL 使用默认的范围limits = NULL 使用默认的范围limits = c(, b) 可以是一个长度为2 的数值型向量。如果是NA，比如c(, NA)，表示设定下限为a，但是上限不做调整，维持当前值。limits = c(, b) 可以是一个长度为2 的数值型向量。如果是NA，比如c(, NA)，表示设定下限为a，但是上限不做调整，维持当前值。可以是一个函数，函数将坐标轴的界限（长度为2\n的数值型向量）作为参数，返回一个新的2元向量，作为界限。函数可以写成lambda函数形式。但注意的是，给位置标度设置新的界限，界限之外的数据会被删除。可以是一个函数，函数将坐标轴的界限（长度为2\n的数值型向量）作为参数，返回一个新的2元向量，作为界限。函数可以写成lambda函数形式。但注意的是，给位置标度设置新的界限，界限之外的数据会被删除。如果我们的目的是想局部放大，不应该使用\nscale_x_continuous(limits = c(, b))里用，而是应该在坐标系统coord_cartersian()函数里面使用limit参数。下面看一些案例","code":"\ncoord_cartersian(limit = c(4, 9))\npenguins %>% \n  ggplot(aes(x = bill_length_mm, y = bill_depth_mm)) +\n  geom_point() + \n  scale_x_continuous(limits = range(penguins$bill_length_mm))\npenguins %>% \n  ggplot(aes(x = bill_length_mm, y = bill_depth_mm)) +\n  geom_point() +\n  scale_x_continuous(\n    limits =  function(x) c( x[1] - 10, x[2] + 10 )\n  )\npenguins %>% \n  ggplot(aes(x = bill_length_mm, y = bill_depth_mm)) +\n  geom_point() +\n  scale_x_continuous(\n    limits =  ~ c(min(.) - 10, max(.) + 10)\n  )\npenguins %>% \n  ggplot(aes(x = bill_length_mm, y = bill_depth_mm)) +\n  geom_point() + \n  scale_x_continuous(limits = ~ range(.x))\npenguins %>% \n  ggplot(aes(x = bill_length_mm, y = bill_depth_mm)) +\n  geom_point() + \n  scale_x_continuous(limits = function(x) {  \n    if (x[1] < 20) {\n      x\n    } else {\n      x[1] <- 20\n      return(x)\n    }\n  })\nmake_scale_expander <- function(...) {\n  function(x) {\n    range(c(x, ...))\n  }\n}\npenguins %>% \n  ggplot(aes(x = bill_length_mm, y = bill_depth_mm)) +\n  geom_point() +   \n  scale_x_continuous(limits = make_scale_expander(80))\npenguins %>% \n  ggplot(aes(x = bill_length_mm, y = bill_depth_mm)) +\n  geom_point() +  \n  scale_x_continuous(limits = ~ range(c(.x, 80)))"},{"path":"tidyverse-ggplot2-pass-function-as-parameters.html","id":"breaks","chapter":"第 31 章 ggplot2中传递函数作为参数值","heading":"31.2.2 breaks","text":"breaks 表示坐标轴或者图例中刻度位置（take break，一条连线的坐标轴被打断了地方）一般情况下，内置函数会自动完成一般情况下，内置函数会自动完成breaks = NULL，就是去掉刻度breaks = NULL，就是去掉刻度用户可提供一个数值类型的向量，代表刻度显示的位置用户可提供一个数值类型的向量，代表刻度显示的位置也可以是函数，该函数接受坐标范围（包含最小值和最大值的长度为2的向量）作为参数，返回一个数值类型的向量。比如常用的 scales::extended_breaks() 函数，函数也可以写成 lambda 函数的形式。也可以是函数，该函数接受坐标范围（包含最小值和最大值的长度为2的向量）作为参数，返回一个数值类型的向量。比如常用的 scales::extended_breaks() 函数，函数也可以写成 lambda 函数的形式。下面看具体案例","code":"\npenguins %>% \n  ggplot(aes(x = bill_length_mm, y = bill_depth_mm)) +\n  geom_point() +\n  scale_x_continuous(\n    breaks = function(y) seq(floor(y[1]), ceiling(y[2]), by = 2) \n  )\npenguins %>% \n  ggplot(aes(x = bill_length_mm, y = bill_depth_mm)) +\n  geom_point() +\n  scale_x_continuous(\n    breaks = function(y) seq(floor(min(y)), ceiling(max(y)), by = 2) \n  )\npenguins %>% \n  ggplot(aes(x = bill_length_mm, y = bill_depth_mm)) +\n  geom_point() +\n  scale_x_continuous(\n    breaks = function(y) seq(floor(min(y)), ceiling(max(y)), by = 5) \n  )\npenguins %>% \n  ggplot(aes(x = bill_length_mm, y = bill_depth_mm)) +\n  geom_point() +\n  scale_x_continuous(\n    expand = expansion(mult = 0, add = 0), \n    breaks = function(x) seq(min(x), max(x), 5)\n  )\npenguins %>% \n  ggplot(aes(x = bill_length_mm, y = bill_depth_mm)) +\n  geom_point() +\n  scale_x_continuous(\n    limits = c(30, 60),\n    breaks = scales::breaks_pretty(12)\n  )"},{"path":"tidyverse-ggplot2-pass-function-as-parameters.html","id":"labels","chapter":"第 31 章 ggplot2中传递函数作为参数值","heading":"31.2.3 labels","text":"参数labels, 坐标和图例的间隔标签一般情况下，内置函数会自动完成也可人工指定一个字符型向量，与breaks提供的字符型向量一一对应也可以是函数，把breaks提供的字符型向量当做函数的输入参数labels = NULL，就是去掉标签","code":"\npenguins %>% \n  ggplot(aes(x = species, y = bill_depth_mm)) +\n  geom_jitter() +\n  scale_x_discrete(labels = function(x) str_sub(x, 1, 1)) \npairs56 <- tibble::tribble(\n      ~species, ~new_name,\n      \"Adelie\",       \"A\",\n   \"Chinstrap\",       \"C\",\n      \"Gentoo\",       \"G\"\n   ) %>% \n  tibble::deframe()\n\n\npenguins %>% \n  ggplot(aes(x = species, y = bill_depth_mm)) +\n  geom_point() +\n  scale_x_discrete(labels = function(x) str_replace_all(x, pattern = pairs56)) \npenguins %>% \n  count(species) %>% \n  mutate(species = paste0(\"this is long long long \", species)) %>% \n  ggplot(aes(x = species, y = n)) +\n  geom_col(width = 0.6) +\n  scale_x_discrete(\n    labels = function(x) stringr::str_wrap(x, width = 10)\n  )\npenguins %>% \n  ggplot(aes(x = bill_length_mm, y = bill_depth_mm)) +\n  geom_point() +\n  scale_x_continuous(\n    labels = function(x) paste0(x, \"_mm\")\n  )\npenguins %>% \n  ggplot(aes(x = bill_length_mm, y = bill_depth_mm)) +\n  geom_point() +\n  scale_x_continuous(\n    labels = ~ paste0(.x, \"_mm\")\n  )\npenguins %>% \n  ggplot(aes(x = bill_length_mm, y = bill_depth_mm)) +\n  geom_point(aes(colour = species)) +\n  scale_x_continuous(\n    limits = c(30, 60),\n    breaks = scales::breaks_width(width = 5),\n    labels = scales::unit_format(unit = \"mm\", sep = \"\")\n  )\npenguins %>% \n  ggplot(aes(x = bill_length_mm, y = bill_depth_mm)) +\n  geom_point() +\n  scale_x_continuous(\n    labels = scales::dollar\n  )\npenguins %>% \n  ggplot(aes(x = bill_length_mm, y = bill_depth_mm)) +\n  geom_point(aes(colour = species)) +\n  scale_x_continuous(\n    limits = c(30, 60),\n    labels = scales::label_number(prefix = \"CNY\", sep = \"\")\n  )\npenguins %>% \n  ggplot(aes(x = bill_length_mm, y = bill_depth_mm)) +\n  geom_point(aes(colour = species)) +\n  scale_x_continuous(\n    limits = c(30, 60),\n    labels = scales::label_percent()\n  ) "},{"path":"tidyverse-ggplot2-pass-function-as-parameters.html","id":"oob","chapter":"第 31 章 ggplot2中传递函数作为参数值","heading":"31.2.4 oob","text":"oob函数用于处理超出范围的数据，scales宏包可以满足用户需求，当然用户也可以自己定义默认(scales::censor()) 把超出界限的值替换成NAscales::squish() 用于将越界值挤压到范围内。scales::squish_infinite() 用于将无限值挤压到范围内。用户自定义函数，该函数接受limits和映射数据作为参数，返回修改后的映射数据下面看具体案例","code":"\npenguins %>%\n  ggplot(aes(x = bill_length_mm, y = bill_depth_mm)) +\n  geom_point(aes(fill = body_mass_g), shape = 21) +\n  scale_fill_gradient(\n    low = \"red\", high = \"green\", na.value = \"grey\",\n    limits = c(4000, NA),\n    oob = scales::censor\n  )\npenguins %>%\n  ggplot(aes(x = bill_length_mm, y = bill_depth_mm)) +\n  geom_point(aes(fill = body_mass_g), shape = 21) +\n  scale_fill_gradient(\n    low = \"red\", high = \"green\", na.value = \"grey\",\n    limits = c(4000, NA),\n    oob = scales::squish\n  )\npenguins %>%\n  ggplot(aes(x = bill_length_mm, y = bill_depth_mm)) +\n  geom_point(aes(fill = body_mass_g), shape = 21) +\n  scale_fill_gradient(\n    low = \"red\", high = \"green\", na.value = \"grey\",\n    limits = c(4000, NA),\n    oob = function(x, ...) x # do nothing\n  )\npenguins %>%\n  ggplot(aes(x = bill_length_mm, y = bill_depth_mm)) +\n  geom_point(aes(fill = body_mass_g), shape = 21) +\n  scale_fill_gradient(\n    low = \"red\", high = \"green\", na.value = \"grey\",\n    limits = c(4000, NA),\n    oob = scales::rescale_none # do nothing\n  )\n# modify data values outside a given range \n# \nmy_oob_fun <- function(x, range) {\n  x[x < min(range)] <- NA\n  x[x > max(range)] <- NA\n  return(x)\n}\n\nmy_oob_fun(1:10, c(2, 6))##  [1] NA  2  3  4  5  6 NA NA NA NA\npenguins %>%\n  ggplot(aes(x = bill_length_mm, y = bill_depth_mm)) +\n  geom_point(aes(fill = body_mass_g), shape = 21) +\n  scale_fill_gradient(\n    low = \"red\", high = \"green\", na.value = \"grey\",\n    limits = c(4000, NA),\n    oob = my_oob_fun    # using limits and fill-aes as argument\n  )"},{"path":"tidyverse-ggplot2-pass-function-as-parameters.html","id":"geom_histogram中的binwidth","chapter":"第 31 章 ggplot2中传递函数作为参数值","heading":"31.3 geom_histogram()中的binwidth","text":"","code":"\npenguins %>% \n  ggplot(aes(x = body_mass_g)) +\n  geom_histogram(color = \"white\")## `stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\nmyfun <- function(x) {\n  n <- length(x)\n  r <- IQR(x, na.rm = TRUE)\n  2*r/n^(1/3)\n}\n\n\npenguins %>% \n  ggplot(aes(x = body_mass_g)) +\n  geom_histogram(\n    binwidth = myfun,\n    color = \"white\"\n  )"},{"path":"tidyverse-ggplot2-pass-function-as-parameters.html","id":"geom_text中的-hjust","chapter":"第 31 章 ggplot2中传递函数作为参数值","heading":"31.4 geom_text()中的 hjust","text":"图中柱子上的字体没有显示完整","code":"\nd <- tibble::tribble(\n     ~name, ~value,\n   \"Alice\",    2.12,\n     \"Bob\",   68.45,\n  \"Carlie\",   15.84,\n    \"Dave\",    7.38,\n     \"Eve\",    0.56\n  )\n\nd %>% \n  ggplot(aes(x = value, y = fct_reorder(name, value)) ) +\n  geom_col(width = 0.6, fill = \"gray60\") +\n  geom_text(aes(label = value, hjust = 1))  +\n  theme_classic() +\n  scale_x_continuous(expand = c(0, 0)) +\n  labs(x = NULL, y = NULL)\nd %>% \n  ggplot(aes(x = value, y = fct_reorder(name, value)) ) +\n  geom_col(width = 0.6, fill = \"gray60\") +\n  geom_text(aes(label = value, hjust = ifelse(value > 50, 1, -.1)) ) +\n  theme_classic() +\n  scale_x_continuous(expand = c(0, 0)) +\n  labs(x = NULL, y = NULL)\nd %>% \n  ggplot(aes(x = value, y = fct_reorder(name, value)) ) +\n  geom_col(width = 0.6, fill = \"darkorange\") +\n  geom_text(\n     aes(\n      label = if_else(value < 1, \"<1%\", paste0(round(value, digits = 1), \"%\")),\n      hjust = if_else(value > 50, 1, -.1)\n      )) +\n  theme_classic() +\n  scale_x_continuous(expand = c(0, 1)) +\n  labs(x = NULL, y = NULL)"},{"path":"tidyverse-ggplot2-pass-function-as-parameters.html","id":"stat_summary中的fun和fun.data","chapter":"第 31 章 ggplot2中传递函数作为参数值","heading":"31.5 stat_summary()中的fun和fun.data","text":"","code":"\npenguins %>% \n  ggplot(aes(x = species, y = bill_length_mm)) +\n  geom_point() +\n  stat_summary(fun = mean,\n               geom = \"point\", colour = \"red\", size = 5 )\npenguins %>% \n  ggplot(aes(x = species, y = bill_length_mm)) +\n  geom_point() +\n  stat_summary(fun = function(x) max(x) - min(x),\n               geom = \"point\", colour = \"red\", size = 5 )\nmyfun <- function(x) {\n  tibble(\n    y = sum(x > mean(x))\n   )\n}\n\npenguins %>% \n  ggplot(aes(species, body_mass_g)) +\n  stat_summary(\n    fun.data = myfun, \n    geom = \"bar\",\n  )\ncalc_median_and_color <- function(x, threshold = 40) {\n  tibble(y = median(x)) %>% \n    mutate(fill = ifelse(y < threshold, \"pink\", \"grey35\"))\n}\n\npenguins %>% \n  ggplot(aes(species, bill_length_mm)) +\n  stat_summary(\n    fun.data = calc_median_and_color,\n    geom = \"bar\"\n  )\nn_fun <- function(x) {\n  data.frame(y = 62,\n            label = length(x),\n            color = ifelse(length(x) > 100, \"red\", \"blue\")\n            )\n}\n\n\npenguins %>% \n  ggplot(aes(x = species, y = bill_length_mm)) +\n  geom_boxplot() +\n  geom_jitter() +\n  stat_summary(\n    fun.data = n_fun,\n    geom = \"text\"\n  )"},{"path":"tidyverse-ggplot2-pass-function-as-parameters.html","id":"theme中element_text","chapter":"第 31 章 ggplot2中传递函数作为参数值","heading":"31.6 theme()中element_text()","text":"","code":"\npenguins_df <- penguins %>% \n  group_by(species) %>% \n  summarize(mean = mean(bill_length_mm)) \n\npenguins_df %>% \n  ggplot(aes(x = mean, y = species)) +\n  geom_col(width = 0.5) +\n  theme(\n    axis.text.y = element_text(\n      color = c(\"black\", \"red\", \"black\"), \n      face = c(\"plain\", \"bold\", \"plain\"), \n      size = 20\n      )\n  )## Warning: Vectorized input to `element_text()` is not officially supported.\n## ℹ Results may be unexpected or may change in future versions of ggplot2.\npenguins_df %>% \n  ggplot(aes(x = mean, y = species)) +\n  geom_col(width = 0.5) +\n  theme(\n    axis.text.y = element_text(\n      color = if_else(penguins_df$mean > 48, \"red\", \"black\"), \n      face = if_else(penguins_df$mean  > 48, \"bold\", \"plain\"), \n      size = 20\n    )\n  )## Warning: Vectorized input to `element_text()` is not officially supported.\n## ℹ Results may be unexpected or may change in future versions of ggplot2."},{"path":"tidyverse-ggplot2-pass-function-as-parameters.html","id":"facet_wrap中的labeller","chapter":"第 31 章 ggplot2中传递函数作为参数值","heading":"31.7 facet_wrap()中的labeller","text":"labeller =可以是函数。函数的参数是一个数据框，分组变量的若干层级是数据框的一列（多个分组就对应数据框的多列）。函数返回列表或者字符串类型的数据框。相当于","code":"\npenguins %>% \n  distinct(species) %>% \n  as.data.frame()##     species\n## 1    Adelie\n## 2    Gentoo\n## 3 Chinstrap\npenguins %>% \n  ggplot(aes(x = bill_length_mm, y = bill_depth_mm)) +\n  geom_point() +\n  facet_wrap(vars(species),  # dataframe of the names are passed to labeller\n    labeller = function(df) {\n      ls <- str_sub(df[, 1], 1, 1) # df[, 1] is character vector\n      list(ls)                     # return list\n    }\n  )\npenguins %>%\n  ggplot(aes(x = bill_length_mm, y = bill_depth_mm)) +\n  geom_point() +\n  facet_wrap(vars(species),\n    labeller = function(df) {\n      list(c(\n        Adelie    = \"A\",\n        Chinstrap = \"C\",\n        Gentoo    = \"G\"\n      ))\n    }\n  )\nspecies_names <- list(\n \"Adelie\"    = \"Adelie, n = 146\",  \n \"Chinstrap\" = \"Chinstrap, n = 68\", \n \"Gentoo\"    = \"Gentoo, n = 119\"\n)\n\n\nplot_labeller <- function(variable, value) { # does not use dataframe of labels\n   return(species_names[value])              # just return list\n }\n\n\n\npenguins %>% \n  ggplot(aes(x = bill_length_mm, y = bill_depth_mm)) +\n  geom_point() +\n  facet_wrap(vars(species), labeller = plot_labeller)## Warning: The `labeller` API has been updated. Labellers taking `variable` and `value`\n## arguments are now deprecated.\n## ℹ See labellers documentation.\nmylabel <- function(value) { \n  return(lapply(value, function(x) species_names[x])) \n  }\n\npenguins %>% \n  ggplot(aes(x = bill_length_mm, y = bill_depth_mm)) +\n  geom_point() +\n  facet_wrap(vars(species), labeller = mylabel)"},{"path":"tidyverse-ggplot2-pass-function-as-parameters.html","id":"使用as_labeller","chapter":"第 31 章 ggplot2中传递函数作为参数值","heading":"31.7.1 使用as_labeller()","text":"使用配套的as_labeller()，更加简单清晰。因为只需要把命名向量传给as_labeller()，as_labeller()将其视为查询表一样，一一对应完成替换即可。如果传给as_labeller()不是向量，而是函数，就让这个函数作用到原来的标签上，返回新的字符串向量。把处理列表的问题，变成了我们熟悉的向量的问题","code":"\nspecies_names <- c(\n \"Adelie\"    = \"Adelie, n =146\",  \n \"Chinstrap\" = \"Chinstrap, n =68\", \n \"Gentoo\"    = \"Gentoo, n =119\"\n)\n\npenguins %>% \n  ggplot(aes(x = bill_length_mm, y = bill_depth_mm)) +\n  geom_point() +\n  facet_wrap(vars(species), labeller = as_labeller(species_names))\nnew_label <- penguins %>% \n  count(species) %>% \n  mutate(n = paste0(species, \", n =\", n)) %>% \n  tibble::deframe()\n\npenguins %>% \n  ggplot(aes(x = bill_length_mm, y = bill_depth_mm)) +\n  geom_point() +\n  facet_wrap(vars(species), labeller = as_labeller(new_label))\nappender <- function(string, suffix = \"-foo\") paste0(string, suffix)\n\npenguins %>% \n  ggplot(aes(x = bill_length_mm, y = bill_depth_mm)) +\n  geom_point() +\n  facet_wrap(vars(species), labeller = as_labeller(appender))\nfun <- function(string) str_sub(string, 1, 1)\n\npenguins %>% \n  ggplot(aes(x = bill_length_mm, y = bill_depth_mm)) +\n  geom_point() +\n  facet_wrap(vars(species), labeller = as_labeller(fun))"},{"path":"tidyverse-ggplot2-pass-function-as-parameters.html","id":"多个分组变量","chapter":"第 31 章 ggplot2中传递函数作为参数值","heading":"31.7.2 多个分组变量","text":"使用as_labeller()","code":"\npenguins %>%\n  ggplot(aes(x = bill_length_mm, y = bill_depth_mm)) +\n  geom_point() +\n  facet_wrap(vars(species, island))\npenguins %>% \n  distinct(species, island) %>% \n  arrange(species, island)## # A tibble: 5 × 2\n##   species   island   \n##   <fct>     <fct>    \n## 1 Adelie    Biscoe   \n## 2 Adelie    Dream    \n## 3 Adelie    Torgersen\n## 4 Chinstrap Dream    \n## 5 Gentoo    Biscoe\npenguins %>% \n  ggplot(aes(x = bill_length_mm, y = bill_depth_mm)) +\n  geom_point() +\n  facet_wrap(~ species + island,   # or vars(species, island),\n  labeller = function(df) {\n    ls <- as.character(df[, 2])\n    ls[1] <- paste0(\"n = \", ls[1])\n    list(ls)\n  }\n)\nspecies_names <- list(\n \"Adelie\"    = \"Adelie, n =146\",  \n \"Chinstrap\" = \"Chinstrap, n =68\", \n \"Gentoo\"    = \"Gentoo, n =119\"\n)\n\nisland_names <- list(\n \"Biscoe\"    = \"B\",  \n \"Dream\"     = \"D\", \n \"Torgersen\" = \"T\"\n)\n\nplot_labeller <- function(variable,value){\n  if (variable == 'species') {\n    return(species_names[value])\n  } else if (variable == 'island') {\n    return(island_names[value])\n  } else {\n    return(as.character(value))\n  }\n}\n\n\n\npenguins %>% \n  ggplot(aes(x = bill_length_mm, y = bill_depth_mm)) +\n  geom_point() +\n  facet_wrap(~ species + island,  \n  labeller = plot_labeller\n)## Warning: The `labeller` API has been updated. Labellers taking `variable` and `value`\n## arguments are now deprecated.\n## ℹ See labellers documentation.\nspecies_names <- c(\n  \"Adelie\"    = \"Adelie, n = 146\",\n  \"Chinstrap\" = \"Chinstrap, n = 68\",\n  \"Gentoo\"    = \"Gentoo, n = 119\"\n)\n\nfun <- function(string) stringr::str_sub(string, 1, 1)\n\npenguins %>%\n  ggplot(aes(x = bill_length_mm, y = bill_depth_mm)) +\n  geom_point() +\n  facet_wrap(vars(species, island),\n    labeller = labeller(\n          species = as_labeller(species_names),\n          island  = as_labeller(fun)\n         )\n  )"},{"path":"tidyverse-ggplot2-pass-function-as-parameters.html","id":"stat_function-1","chapter":"第 31 章 ggplot2中传递函数作为参数值","heading":"31.8 stat_function","text":"","code":"\ndf <- data.frame(x = 1:10, y = (1:10)^2)\nggplot(df, aes(x, y)) + \n  geom_point() +\n  stat_function(fun = ~ .x^2)\nlogisic <- function(x) {\n  exp(1)^x / (1 + exp(1) ^ x)\n}\n\nggplot() +\n  xlim(-5, 5) +\n  geom_function(fun = logisic, color = \"orange\") +\n  theme_minimal()"},{"path":"tidyverse-ggplot2-pass-function-as-parameters.html","id":"stat-layer","chapter":"第 31 章 ggplot2中传递函数作为参数值","heading":"31.9 stat layer","text":"","code":"\npenguins %>%\n  ggplot(aes(x = bill_length_mm, y = bill_depth_mm)) +\n  geom_point() +\n  purrr::map(\n    .x = seq(0.1, 0.9, by  = 0.1),\n    .f = function(level) {\n      stat_ellipse(\n        geom = \"polygon\", type = \"norm\",\n        size = 0, alpha = 0.1, fill = \"gray10\",\n        level = level\n      )\n    }\n  )## Warning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\n## ℹ Please use `linewidth` instead.\n## This warning is displayed once every 8 hours.\n## Call `lifecycle::last_lifecycle_warnings()` to see where this warning was\n## generated.\nlayers <- penguins %>%\n  group_split(species) %>%\n  map(function(df) {\n    geom_point(\n      aes(x = bill_length_mm, y = bill_depth_mm),\n      alpha = 0.5,\n      data = df\n    )\n  })\n\nggplot() +\n  layers"},{"path":"tidyverse-ggplot2-pass-function-as-parameters.html","id":"未完待续","chapter":"第 31 章 ggplot2中传递函数作为参数值","heading":"31.10 未完待续","text":"","code":""},{"path":"tidyverse-rmarkdown.html","id":"tidyverse-rmarkdown","chapter":"第 32 章 可重复性文档","heading":"第 32 章 可重复性文档","text":"有时候，我们需要展示和分享我们的数据分析结果给同行、老板或者老师。 那么，为了让老板能快速地的理解我们的分析思路和方法，\n最好的方法，就是将分析背景、分析过程、分析结果以及图表等形成报告，让读者能重复和验证我们的结果，确保结论的真实可信。\n因此，本章就将介绍如何生成分析报告（可重复性报告）。","code":""},{"path":"tidyverse-rmarkdown.html","id":"什么是rmarkdown","chapter":"第 32 章 可重复性文档","heading":"32.1 什么是Rmarkdown","text":"","code":""},{"path":"tidyverse-rmarkdown.html","id":"markdown-基本语法","chapter":"第 32 章 可重复性文档","heading":"32.2 markdown 基本语法","text":"常用的Markdown 语法:对于章节， 使用 # 符号:如果需要制作列表，可以使用-符号first itemsecond itemthird item如果希望列表带有数字编号，可以加上编号first itemsecond itemthird item如果想添加网页链接，可以用方括号和圆括号Download R如果想制作简单表格，列与列之间用 | 分隔，表格的首行下面添加--------这样作表格可能会比较麻烦，我经常在这个网站在线表格转化器把表格弄好后，然后复制粘贴过来。","code":"# This is a title\n\n#  第一章   （注意   \"#\" 与 \"第一章\"之间有空格）\n##  第一节  （同上，\"##\" 与 \"第一节\"之间有空格）\n\nThis is a sentence.\n\nNow a list begins:\n  \n- no importance\n- again\n- repeat\n  \nA numbered list:\n  \n1. first\n2. second\n\n__bold__, _italic_, ~~strike through~~\n# Header 1\n## Header 2\n### Header 3\n#### Header 4\n##### Header 5\n###### Header 6- first item\n- second item\n- third item1. first item\n2. second item\n3. third item[Download R](http://www.r-project.org/)Table Header  | Second Header\n------------- | -------------\nCell 1, 1     | Cell 2, 1\nCell 1, 2     | Cell 2, 2"},{"path":"tidyverse-rmarkdown.html","id":"elements-of-rmarkdown","chapter":"第 32 章 可重复性文档","heading":"32.3 Elements of RMarkdown","text":"Rstudio 创建 Rmd 文件： File -> New File -> R Markdown.Rmd 文件基本构成（图中绿色括号地方）metadatatextcode","code":""},{"path":"tidyverse-rmarkdown.html","id":"r-code-chunks","chapter":"第 32 章 可重复性文档","heading":"32.4 R Code chunks","text":"在 Rmd 文档中写 R 代码，需要插入代码块(Code chunks)，具体以 ```{r} 开始，以 ```结尾。可以用快捷方式Ctrl + Alt + (OS X: Cmd + Option + )创建代码块。点击knit（下图中红色地方），选择想要输出的文档格式即可。下图是Rmd文档与渲染效果效果，\n图 18.3: Rmd文档与渲染效果对比\n我们也可以设置一些选项，控制代码块的运行方式(details see http://yihui.name/knitr/):","code":""},{"path":"tidyverse-rmarkdown.html","id":"生成html文档","chapter":"第 32 章 可重复性文档","heading":"32.5 生成html文档","text":"希望html文档有章节号、目录或者更好显示表格，可以修改yaml头文件（用下面的内容替换Rmarkdown的头文件）","code":"---\ntitle: Habits\nauthor: John Doe\ndate: \"2023-11-22\"\noutput: \n  html_document:\n    df_print: paged\n    toc: yes\n    number_sections: yes\n---"},{"path":"tidyverse-rmarkdown.html","id":"生成word文档","chapter":"第 32 章 可重复性文档","heading":"32.6 生成word文档","text":"rmarkdown 生成的word功能不是很多，推荐使用officedown\n, officer, flextable宏包","code":""},{"path":"tidyverse-rmarkdown.html","id":"生成pdf文档","chapter":"第 32 章 可重复性文档","heading":"32.7 生成pdf文档","text":"pdf文档可以插入漂亮的矢量图和优雅的数学公式，所以备受同学们的喜欢。但往往我们写中文的时候，编译不成功。这里就来讲讲如何解决这些问题，推荐阅读这里，或者看这个视频。Instructions安装最新版本 R (>3.5) 和 RStudio Desktop (>1.2).安装pdf查看器，sumatrapdf网站安装 LaTeX. 然而这个软件会比较大\n(e.g. MacTeX approximate 3.9G). 如果你之前没有安装过\nLaTeX，我推荐你安装轻量级的 tinytex. 安装方法如下，打开R，然后再命令行输入:中途会有两次警告，按 “ 确定 ” 就可以了。国内下载 TinyTeX 比较慢，可以用浏览器或其它下载工具直接下载：https://github.com/yihui/tinytex-releases/releases 然后把下载的文件路径传给安装函数，下面四步走：install.packages(\"tinytex\")tinytex::tlmgr_repo('http://mirrors.tuna.tsinghua.edu.cn/CTAN/')tinytex:::install_prebuilt('TinyTeX-v2022.05.zip', dir = \"D:\\\\Tinytex\")添加环境变量 D:\\Tinytex\\bin\\win32修改头文件，用下面的内容替换Rmarkdown的头文件, 不要修改缩进","code":"\ninstall.packages(\"tinytex\")\ntinytex::install_tinytex(dir = \"D:\\\\Tinytex\", force = T)---\ntitle: 'Going deeper with dplyr'\nauthor: \"王小二\"\ndate: \"`r Sys.Date()`\"\noutput:\n  pdf_document: \n    latex_engine: xelatex\n    extra_dependencies:\n      ctex: UTF8\n    number_sections: yes\n    df_print: kable\n    toc: yes\nclassoptions: \"hyperref, 12pt, a4paper\"\n---"},{"path":"tidyverse-rmarkdown.html","id":"使用方法","chapter":"第 32 章 可重复性文档","heading":"32.8 使用方法","text":"","code":""},{"path":"tidyverse-rmarkdown.html","id":"插入公式","chapter":"第 32 章 可重复性文档","heading":"32.8.1 插入公式","text":"我相信你已经熟悉了latex语法，那么我们在Rmarkdwon里输入\n$$\\frac{\\sum (\\bar{x} - x_i)^2}{n-1}$$，那么实际输出:\\[\\frac{\\sum (\\bar{x} - x_i)^2}{n-1}\\]也可以使用latex的等式环境， 比如输出\\[\n\\Theta = \\begin{pmatrix}\\alpha & \\beta\\\\\n\\gamma & \\delta\n\\end{pmatrix}\n\\]","code":"$$\\Theta = \\begin{pmatrix}\\alpha & \\beta\\\\\n\\gamma & \\delta\n\\end{pmatrix}$$"},{"path":"tidyverse-rmarkdown.html","id":"插入图片","chapter":"第 32 章 可重复性文档","heading":"32.8.2 插入图片","text":"\n图 32.1: caption\n","code":"\n```{r out.width = '35%', fig.align='left', fig.cap='this is caption', echo = F}\nknitr::include_graphics(\"images/R_logo.png\")\n```"},{"path":"tidyverse-rmarkdown.html","id":"运行代码","chapter":"第 32 章 可重复性文档","heading":"32.8.3 运行代码","text":"","code":"\nsummary(cars)##      speed           dist       \n##  Min.   : 4.0   Min.   :  2.00  \n##  1st Qu.:12.0   1st Qu.: 26.00  \n##  Median :15.0   Median : 36.00  \n##  Mean   :15.4   Mean   : 42.98  \n##  3rd Qu.:19.0   3rd Qu.: 56.00  \n##  Max.   :25.0   Max.   :120.00"},{"path":"tidyverse-rmarkdown.html","id":"表格","chapter":"第 32 章 可重复性文档","heading":"32.8.4 表格","text":"表 32.1: caption需要更优美的表格，可参考这里","code":"\n```{r tables-mtcars,  echo = F}\nknitr::kable(iris[1:5, ], caption = \"A caption\")\n```"},{"path":"tidyverse-rmarkdown.html","id":"生成图片","chapter":"第 32 章 可重复性文档","heading":"32.8.5 生成图片","text":"或者","code":"\n```{r}\nplot(pressure)\n```\n```{r, out.width = '85%', fig.showtext = TRUE}\nlibrary(tidyverse)\nlibrary(nycflights13)\nlibrary(showtext)\nshowtext_auto()\n\nflights %>%\n  group_by(dest) %>%\n  summarize(\n    count = n(),\n    dist = mean(distance, na.rm = TRUE),\n    delay = mean(arr_delay, na.rm = TRUE)\n  ) %>%\n  dplyr::filter(delay > 0, count > 20, dest != \"HNL\") %>%\n  ggplot(mapping = aes(x = dist, y = delay)) +\n  geom_point(aes(size = count), alpha = 1 / 3) +\n  geom_smooth(se = FALSE) +\n  ggtitle(\"这是我的标题\")\n```## \n## Attaching package: 'dplyr'## The following objects are masked from 'package:stats':\n## \n##     filter, lag## The following objects are masked from 'package:base':\n## \n##     intersect, setdiff, setequal, union## Loading required package: sysfonts## Loading required package: showtextdb## `geom_smooth()` using method = 'loess' and formula = 'y ~ x'"},{"path":"tidyverse-rmarkdown.html","id":"文本内计算","chapter":"第 32 章 可重复性文档","heading":"32.8.6 文本内计算","text":"content can contain inline code like 78.5398163, .","code":"The content can contain inline code like `r pi * 5^2`, too."},{"path":"tidyverse-rmarkdown.html","id":"案例代码","chapter":"第 32 章 可重复性文档","heading":"32.9 案例代码","text":"","code":""},{"path":"tidyverse-rmarkdown.html","id":"延伸阅读-3","chapter":"第 32 章 可重复性文档","heading":"32.10 延伸阅读","text":"Markdown tutorial https://www.markdowntutorial.com (10分钟学完)LaTeX tutorial https://www.latex-tutorial.com/quick-start/Rmarkdown 介绍 https://bookdown.org/yihui/rmarkdown/Rmarkdown 手册 https://bookdown.org/yihui/rmarkdown-cookbook/","code":""},{"path":"eda-practice.html","id":"eda-practice","chapter":"第 33 章 一天一练","heading":"第 33 章 一天一练","text":"“表达我自己比被人喜欢更重要。” 加油尽可能的在tidyverse的框架下完成","code":"\nlibrary(tidyverse)## ── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n## ✔ dplyr     1.1.3     ✔ readr     2.1.4\n## ✔ forcats   1.0.0     ✔ stringr   1.5.0\n## ✔ ggplot2   3.4.3     ✔ tibble    3.2.1\n## ✔ lubridate 1.9.2     ✔ tidyr     1.3.0\n## ✔ purrr     1.0.2     \n## ── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n## ✖ dplyr::filter() masks stats::filter()\n## ✖ dplyr::lag()    masks stats::lag()\n## ℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors"},{"path":"eda-practice.html","id":"day01","chapter":"第 33 章 一天一练","heading":"33.1 day01","text":"旋转数据框，要求变成","code":"\nd <- tibble::tribble(\n    ~name, ~chinese, ~math, ~physics, ~english, ~music, ~sport,\n  \"Alice\",      88L,   63L,      98L,      89L,    85L,    72L,\n    \"Bob\",      85L,   75L,      85L,      82L,    73L,    83L,\n  \"Carlo\",      95L,   98L,      75L,      75L,    68L,    84L\n  )\nd## # A tibble: 3 × 7\n##   name  chinese  math physics english music sport\n##   <chr>   <int> <int>   <int>   <int> <int> <int>\n## 1 Alice      88    63      98      89    85    72\n## 2 Bob        85    75      85      82    73    83\n## 3 Carlo      95    98      75      75    68    84## # A tibble: 6 × 4\n##   discipline Alice   Bob Carlo\n##   <chr>      <int> <int> <int>\n## 1 chinese       88    85    95\n## 2 math          63    75    98\n## 3 physics       98    85    75\n## 4 english       89    82    75\n## 5 music         85    73    68\n## 6 sport         72    83    84"},{"path":"eda-practice.html","id":"day02","chapter":"第 33 章 一天一练","heading":"33.2 day02","text":"排序，要求按照score从大往小排，但希望all是最下面一行。变成","code":"\nd <- \n  tibble::tribble(\n  ~name, ~score,\n   \"a1\",     2,\n   \"a2\",     5,\n   \"a3\",     3,\n   \"a4\",     7,\n   \"a5\",     6,\n  \"all\",    23\n  )## # A tibble: 6 × 2\n##   name  score\n##   <chr> <dbl>\n## 1 a4        7\n## 2 a5        6\n## 3 a2        5\n## 4 a3        3\n## 5 a1        2\n## 6 all      23"},{"path":"eda-practice.html","id":"day03","chapter":"第 33 章 一天一练","heading":"33.3 day03","text":"统计每位同学，成绩高于各科均值的个数，变成","code":"\nd <- tibble::tribble(\n  ~name, ~chinese, ~engish, ~physics, ~sport, ~music,\n  \"Aice\", 85, 56, 56, 54, 78,\n  \"Bob\", 75, 78, 77, 56, 69,\n  \"Cake\", 69, 41, 88, 89, 59,\n  \"Dave\", 90, 66, 74, 82, 60,\n  \"Eve\", 68, 85, 75, 69, 21,\n  \"Fod\", 77, 74, 62, 74, 88,\n  \"Gimme\", 56, 88, 75, 69, 34\n)\nd## # A tibble: 7 × 6\n##   name  chinese engish physics sport music\n##   <chr>   <dbl>  <dbl>   <dbl> <dbl> <dbl>\n## 1 Aice       85     56      56    54    78\n## 2 Bob        75     78      77    56    69\n## 3 Cake       69     41      88    89    59\n## 4 Dave       90     66      74    82    60\n## 5 Eve        68     85      75    69    21\n## 6 Fod        77     74      62    74    88\n## 7 Gimme      56     88      75    69    34## # A tibble: 7 × 7\n##   name  chinese engish physics sport music num_above_mean\n##   <chr>   <dbl>  <dbl>   <dbl> <dbl> <dbl>          <int>\n## 1 Aice       85     56      56    54    78              2\n## 2 Bob        75     78      77    56    69              4\n## 3 Cake       69     41      88    89    59              3\n## 4 Dave       90     66      74    82    60              4\n## 5 Eve        68     85      75    69    21              2\n## 6 Fod        77     74      62    74    88              4\n## 7 Gimme      56     88      75    69    34              2"},{"path":"eda-practice.html","id":"day04","chapter":"第 33 章 一天一练","heading":"33.4 day04","text":"先按id分组，如果corr中都是0 就”none”如果corr中都是1 就””如果corr中只有一个1，就输出1对应period","code":"\ndata <- tribble(\n  ~id, ~corr, ~period,\n  1, 0, \"a\",\n  1, 0, \"b\",\n  2, 0, \"a\",\n  2, 1, \"b\",\n  3, 1, \"a\",\n  3, 0, \"b\",\n  4, 1, \"a\",\n  4, 1, \"b\"\n)\ndata## # A tibble: 8 × 3\n##      id  corr period\n##   <dbl> <dbl> <chr> \n## 1     1     0 a     \n## 2     1     0 b     \n## 3     2     0 a     \n## 4     2     1 b     \n## 5     3     1 a     \n## 6     3     0 b     \n## 7     4     1 a     \n## 8     4     1 b## # A tibble: 4 × 2\n##      id resp_period\n##   <dbl> <chr>      \n## 1     1 none       \n## 2     2 b          \n## 3     3 a          \n## 4     4 both"},{"path":"eda-practice.html","id":"day05","chapter":"第 33 章 一天一练","heading":"33.5 day05","text":"图中柱子上的字体没有显示完整，请改进。","code":"\nd <- tibble::tribble(\n     ~name, ~value,\n   \"Alice\",    2.12,\n     \"Bob\",   68.45,\n  \"Carlie\",   15.84,\n    \"Dave\",    7.38,\n     \"Eve\",    0.56\n  )\n\n\nd %>% \n  ggplot(aes(x = value, y = fct_reorder(name, value)) ) +\n  geom_col(width = 0.6, fill = \"gray60\") +\n  geom_text(aes(label = value, hjust =1))  +\n  theme_classic() +\n  scale_x_continuous(expand = c(0, 0)) +\n  labs(x = NULL, y = NULL)"},{"path":"eda-practice.html","id":"day06","chapter":"第 33 章 一天一练","heading":"33.6 day06","text":"我看到新闻有一张图很漂亮，您能重复出来？数据在下面提示，可以把图片拉到https://color.adobe.com/zh/create/image-gradient 获取颜色值，比如","code":"\nd <- tibble::tribble(\n            ~area,           ~group, ~value,\n      \"Texas A&M\", \"white Students\",   0.03,\n      \"Texas A&M\", \"Black Students\",   0.07,\n  \"Umass Amherst\", \"white Students\",   0.07,\n  \"Umass Amherst\", \"Black Students\",   0.23,\n   \"UW-Milwaukee\", \"white Students\",   0.13,\n   \"UW-Milwaukee\", \"Black Students\",   0.31\n  )\nd## # A tibble: 6 × 3\n##   area          group          value\n##   <chr>         <chr>          <dbl>\n## 1 Texas A&M     white Students  0.03\n## 2 Texas A&M     Black Students  0.07\n## 3 Umass Amherst white Students  0.07\n## 4 Umass Amherst Black Students  0.23\n## 5 UW-Milwaukee  white Students  0.13\n## 6 UW-Milwaukee  Black Students  0.31\ncolorspace::swatchplot(c(\"#F42F5D\",\"#252A4A\"))"},{"path":"eda-practice.html","id":"day07","chapter":"第 33 章 一天一练","heading":"33.7 day07","text":"告诉你一个你可能不知道的事情，summarise()一定要输出数据框吗？","code":"\niris %>%\n  nest_by(Species) %>%\n  rowwise() %>%\n  summarise(\n    write_csv(data, glue(\"{Species}.cvs\"))\n    )"},{"path":"eda-practice.html","id":"day08","chapter":"第 33 章 一天一练","heading":"33.8 day08","text":"运行以下两个代码，结果和你期望的一样？为什么？","code":"\nmtcars %>%\n  group_by(cyl) %>%\n  summarise(\n    broom::tidy(lm(mpg ~ wt, data = .))\n  )\n\nmtcars %>%\n  group_by(cyl) %>%\n  summarise(\n    broom::tidy(lm(mpg ~ wt))\n  )"},{"path":"eda-practice.html","id":"day09","chapter":"第 33 章 一天一练","heading":"33.9 day09","text":"缺失值替换，数值型的缺失值用0替换，字符串型的用””","code":"\ndf <- tibble(\n  x = c(NA, 1, 2),\n  y = c(\"a\", NA, NA),\n)"},{"path":"eda-practice.html","id":"day10","chapter":"第 33 章 一天一练","heading":"33.10 day10","text":"六年级的年级主任让学生提交自己所在的班级号，看到结果后，他很苦恼，你能帮忙他规整下？","code":"\nd <- tibble::tribble(\n               ~id,\n               \"2\",\n              \"03\",\n       \"小学2015级2班\",\n       \"小学2015级3班\",\n            \"0601\",\n            \"0602\",\n          \"201502\",\n          \"201604\",\n            \"6.10\",\n            \"6.11\",\n             \"6.5\",\n             \"6.8\",\n              \"06\"\n       )\nd## # A tibble: 13 × 1\n##    id           \n##    <chr>        \n##  1 2            \n##  2 03           \n##  3 小学2015级2班\n##  4 小学2015级3班\n##  5 0601         \n##  6 0602         \n##  7 201502       \n##  8 201604       \n##  9 6.10         \n## 10 6.11         \n## 11 6.5          \n## 12 6.8          \n## 13 06"},{"path":"eda-practice.html","id":"day11","chapter":"第 33 章 一天一练","heading":"33.11 day11","text":"每行以x为均值生成一个随机数, 以下哪个是正确的？","code":"\n# A\ntibble(x = 1:5) %>% \n  mutate(normal_mean = rnorm(1, mean = x))     \n\n# B\ntibble(x = 1:5) %>% \n  mutate(normal_mean = rnorm(n(), mean = x))\n\n# C\ntibble(x = 1:5) %>% \n  mutate(normal_mean = map_dbl(x, ~rnorm(1, mean = .)))\n\n# D\ntibble(x = 1:5) %>% \n  mutate(normal_mean = map_dbl(x, ~rnorm(1), mean = .))\n\n# E\ntibble(x = 1:5) %>% \n  rowwise() %>% \n  mutate(normal_mean = rnorm(1, mean = x))"},{"path":"eda-practice.html","id":"day12","chapter":"第 33 章 一天一练","heading":"33.12 day12","text":"purrr::map()的辅助参数放里面和放外面，有什么区别？","code":"\nx <- rep(0, 3)\nplus <- function(x, y) x + y\n\nmap_dbl(x, plus, runif(1))\nmap_dbl(x, ~plus(.x, runif(1)) )"},{"path":"eda-practice.html","id":"day13","chapter":"第 33 章 一天一练","heading":"33.13 day13","text":"计算每天水分和食物的所占比例， 比如第一天water和food都是10.0，那么各自比例都是50%.","code":"\nd <- tibble::tribble(\n  ~water, ~food,\n  10.0,   10.0,\n  12.1,   10.3,\n  13.5,   19.1,\n  17.4,   16.0,\n  25.8,   15.6,\n  27.4,   19.8\n)\nd## # A tibble: 6 × 2\n##   water  food\n##   <dbl> <dbl>\n## 1  10    10  \n## 2  12.1  10.3\n## 3  13.5  19.1\n## 4  17.4  16  \n## 5  25.8  15.6\n## 6  27.4  19.8"},{"path":"eda-practice.html","id":"day14","chapter":"第 33 章 一天一练","heading":"33.14 day14","text":"以下代码哪些会给出相同的图形?ggplot(tb, aes(x,y)) + geom_line()ggplot(tb, aes(x,y,group=group)) + geom_line()ggplot(tb, aes(x,y,fill=group)) + geom_line()ggplot(tb, aes(x,y,color=group)) + geom_line()","code":"\ntb <- tibble(\n     x = rep(c(1,2,3), 2),\n     y = c(1:6),\n    group = c(rep(\"group1\", 3),  rep(\"group2\", 3) )\n\n)"},{"path":"eda-practice.html","id":"day15","chapter":"第 33 章 一天一练","heading":"33.15 day15","text":"重复这张图数据在下面","code":"\nlibrary(tidyverse)\nraw_df <- read_rds(here::here(\"demo_data\", \"rude_behavior_in_airplane.rds\")) \nraw_df## # A tibble: 27 × 3\n##    type                                           judgment          n\n##    <chr>                                          <chr>         <dbl>\n##  1 \"Bring a baby\"                                 Not rude        592\n##  2 \"Bring a baby\"                                 Very Rude        75\n##  3 \"Bring a baby\"                                 Somewhat rude   182\n##  4 \"Bring an unruly child\"                        Not rude        147\n##  5 \"Bring an unruly child\"                        Very Rude       351\n##  6 \"Bring an unruly child\"                        Somewhat rude   351\n##  7 \"Recline your seat\"                            Not rude        502\n##  8 \"Recline your seat\"                            Very Rude        71\n##  9 \"Recline your seat\"                            Somewhat rude   281\n## 10 \"Ask to switch seats \\nto be closer to family\" Not rude        705\n## # ℹ 17 more rows"},{"path":"eda-practice.html","id":"day16","chapter":"第 33 章 一天一练","heading":"33.16 day16","text":"这里有一个列表，其元素list1, list2, list3是3个长度不等的向量需求：想看下 gene1, gene2, gene3, gene4, gene5 是否出现在 list1, list2, list3中，并统计成下表","code":"\nlibrary(tidyverse)\n\ngenes <- paste0(\"gene\", 1:5) %>% set_names(.)\ngenes##   gene1   gene2   gene3   gene4   gene5 \n## \"gene1\" \"gene2\" \"gene3\" \"gene4\" \"gene5\"\nbig_list <- list(  \n  list1 = paste0(\"gene\", c(1:2, 6:7)), \n  list2 = paste0(\"gene\", c(6:7)), \n  list3 = paste0(\"gene\", c(1, 4:7))\n  )\nbig_list## $list1\n## [1] \"gene1\" \"gene2\" \"gene6\" \"gene7\"\n## \n## $list2\n## [1] \"gene6\" \"gene7\"\n## \n## $list3\n## [1] \"gene1\" \"gene4\" \"gene5\" \"gene6\" \"gene7\"## # A tibble: 5 × 4\n##   name  list1 list2 list3\n##   <chr> <int> <int> <int>\n## 1 gene1     1     0     1\n## 2 gene2     1     0     0\n## 3 gene3     0     0     0\n## 4 gene4     0     0     1\n## 5 gene5     0     0     1"},{"path":"eda-practice.html","id":"day17","chapter":"第 33 章 一天一练","heading":"33.17 day17","text":"统计每支球队，比赛次数以及赢得比赛的分数之和","code":"\ngames <- tibble::tribble(\n  ~team, ~outcome, ~points,\n    \"A\",    \"Win\",      3,\n    \"A\",   \"Lose\",      1,\n    \"A\",    \"Win\",      1,\n    \"A\",    \"Win\",      2,\n    \"B\",    \"Win\",      1,\n    \"B\",    \"Win\",      1,\n    \"B\",   \"Lose\",      3,\n    \"B\",   \"Lose\",      1\n  )\ngames## # A tibble: 8 × 3\n##   team  outcome points\n##   <chr> <chr>    <dbl>\n## 1 A     Win          3\n## 2 A     Lose         1\n## 3 A     Win          1\n## 4 A     Win          2\n## 5 B     Win          1\n## 6 B     Win          1\n## 7 B     Lose         3\n## 8 B     Lose         1"},{"path":"eda-practice.html","id":"day18","chapter":"第 33 章 一天一练","heading":"33.18 day18","text":"只让gentoo这个分面，背景色高亮","code":"\nlibrary(tidyverse)\nlibrary(palmerpenguins)\n\npenguins %>%\n  ggplot(aes(x = bill_length_mm, y = bill_depth_mm)) +\n  geom_point() +\n  facet_wrap(vars(species), ncol = 3)"},{"path":"eda-practice.html","id":"day19","chapter":"第 33 章 一天一练","heading":"33.19 day19","text":"用下面的数据，画出柱中柱效果","code":"\ntb <- tibble::tribble(\n      ~group,   ~product, ~sale,\n    \"Target\", \"Balender\",   80,\n    \"Target\",      \"Fan\",   90,\n    \"Target\",   \"Cooler\",   70,\n    \"Target\",       \"AC\",   95,\n  \"Achieved\", \"Balender\",   50,\n  \"Achieved\",      \"Fan\",   55,\n  \"Achieved\",   \"Cooler\",   60,\n  \"Achieved\",       \"AC\",   45\n  )\n\ntb## # A tibble: 8 × 3\n##   group    product   sale\n##   <chr>    <chr>    <dbl>\n## 1 Target   Balender    80\n## 2 Target   Fan         90\n## 3 Target   Cooler      70\n## 4 Target   AC          95\n## 5 Achieved Balender    50\n## 6 Achieved Fan         55\n## 7 Achieved Cooler      60\n## 8 Achieved AC          45"},{"path":"eda-practice.html","id":"day20","chapter":"第 33 章 一天一练","heading":"33.20 day20","text":"修改列名，在m或者f的后面加下划线","code":"\ntb <- tibble::tribble(\n  ~id, ~new_ep_m014, ~newrel_f1524, ~new_sp_f65, ~new_ep_m3544,\n   1L,           3L,            2L,          4L,            1L,\n   2L,           4L,            4L,          5L,            2L,\n   3L,           5L,            5L,          6L,            6L,\n   4L,           6L,            6L,          7L,            8L\n  )\ntb## # A tibble: 4 × 5\n##      id new_ep_m014 newrel_f1524 new_sp_f65 new_ep_m3544\n##   <int>       <int>        <int>      <int>        <int>\n## 1     1           3            2          4            1\n## 2     2           4            4          5            2\n## 3     3           5            5          6            6\n## 4     4           6            6          7            8"},{"path":"eda-practice.html","id":"day21","chapter":"第 33 章 一天一练","heading":"33.21 day21","text":"说出这里三行代码分别的含义","code":"\nlibrary(tidyverse)\n\ndf <- tibble(\n  x = 1:10,\n  y = sample(c(\"a\", \"b\"), size = 10, replace = TRUE)\n)\ndf## # A tibble: 10 × 2\n##        x y    \n##    <int> <chr>\n##  1     1 a    \n##  2     2 a    \n##  3     3 a    \n##  4     4 a    \n##  5     5 a    \n##  6     6 a    \n##  7     7 b    \n##  8     8 b    \n##  9     9 b    \n## 10    10 a\ndf %>%\n  summarise(\n    y1 = sum(x),              \n    y2 = sum(y == \"a\"),       \n    y3 = sum(x[y == \"a\"])     \n  )"},{"path":"eda-practice.html","id":"day22","chapter":"第 33 章 一天一练","heading":"33.22 day22","text":"看中这个张图https://www.healthsystemtracker.org/brief/covid-19-leading-cause--death-ranking/，数据也是可以下载的","code":""},{"path":"eda-practice.html","id":"day23","chapter":"第 33 章 一天一练","heading":"33.23 day23","text":"问题，这两张图一样吗？","code":"\nlibrary(dplyr)\nlibrary(ggplot2)\n\ndf <- data.frame(\n  x = rnorm(n = 2 * 500),\n  group = rep(c(\"1\", \"2\"), each = 500)\n)\n\nggplot(df) +\n  geom_line(\n    mapping = aes(x = x, group = group),\n    stat = \"density\",\n    alpha = 0.5\n  )\n\nggplot(df) +\n  stat_density(\n    mapping = aes(x = x, group = group),\n    geom = \"line\",\n    alpha = 0.5\n  )"},{"path":"eda-practice.html","id":"day24","chapter":"第 33 章 一天一练","heading":"33.24 day24","text":"结果会是什么？TRUEFALSEErrorNULL","code":"\n1 == \"1\""},{"path":"eda-practice.html","id":"day25","chapter":"第 33 章 一天一练","heading":"33.25 day25","text":"如何让连续在一起的类别，分为一组。比如这里的x变量，分为4组","code":"\ndf <- tibble::tribble(\n  ~x,   ~y,\n  \"a\",   2,\n  \"a\",   3,\n  \"b\",   4,\n  \"b\",   5,\n  \"a\",   1,\n  \"a\",   3,\n  \"a\",   2,\n  \"b\",   3\n  )\n\ndf## # A tibble: 8 × 2\n##   x         y\n##   <chr> <dbl>\n## 1 a         2\n## 2 a         3\n## 3 b         4\n## 4 b         5\n## 5 a         1\n## 6 a         3\n## 7 a         2\n## 8 b         3"},{"path":"eda-practice.html","id":"day26","chapter":"第 33 章 一天一练","heading":"33.26 day26","text":"都是size = 15 为什么一个大一个小呢？","code":""},{"path":"eda-practice.html","id":"day27","chapter":"第 33 章 一天一练","heading":"33.27 day27","text":"找出数值找出b后紧跟的数值找出b后面出现的数值","code":"\nww <- c(\"ab1\", \"vf2\", \"aaba2\", \"ddb76\", \"d8p\")\nww## [1] \"ab1\"   \"vf2\"   \"aaba2\" \"ddb76\" \"d8p\"## Warning in rm(d, data, df, my_function, text_subtitle, genes, big_list, :\n## object 'text_subtitle' not found"},{"path":"GO-KEGG.html","id":"GO-KEGG","chapter":"第 34 章 GO/KEGG功能富集分析","heading":"第 34 章 GO/KEGG功能富集分析","text":"","code":""},{"path":"GO-KEGG.html","id":"功能富集分析介绍","chapter":"第 34 章 GO/KEGG功能富集分析","heading":"34.1 功能富集分析介绍","text":"功能富集分析对于解释转录组学数据至关重要。转录组鉴定了差异表达基因后，通常会进行GO或KEGG富集分析，识别这些差异基因的功能或参与调控的通路，来说明关键基因表达上调/或下调后可能会导致哪功能或通路被激活/或抑制，进而与表型进行联系。目前能够进行GO、KEGG富集分析的工具有很多，不同的工具之间在算法、数据库上存在不同，因此结果也可能大相径庭。这里就以R包clusterProfiler的方法为例（该包基于超几何分布的原理），展示如何基于给定的差异基因列表进行GO、KEGG富集分析。","code":""},{"path":"GO-KEGG.html","id":"使用clusterprofiler做功能富集分析","chapter":"第 34 章 GO/KEGG功能富集分析","heading":"34.2 使用clusterProfiler做功能富集分析","text":"使用Bioconductor安装clusterProfiler详细的用法请参考Overview enrichment analysis using clusterProfiler 以及 使用R包clusterProfiler进行GO/KEGG富集分析（有参/无参）.","code":"\nBiocManager::install('clusterProfiler')"}]
